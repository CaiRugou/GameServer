// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_mission.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_mission.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PROTOBUF {

namespace {

const ::google::protobuf::Descriptor* PB_Mission_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_Mission_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_MissionList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_MissionList_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_TMissionState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fmission_2eproto() {
  protobuf_AddDesc_msg_5fmission_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_mission.proto");
  GOOGLE_CHECK(file != NULL);
  PB_Mission_descriptor_ = file->message_type(0);
  static const int PB_Mission_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Mission, mission_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Mission, mission_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Mission, mission_target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Mission, mission_receive_time_),
  };
  PB_Mission_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_Mission_descriptor_,
      PB_Mission::default_instance_,
      PB_Mission_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Mission, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Mission, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_Mission));
  PB_MissionList_descriptor_ = file->message_type(1);
  static const int PB_MissionList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_MissionList, mission_list_),
  };
  PB_MissionList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_MissionList_descriptor_,
      PB_MissionList::default_instance_,
      PB_MissionList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_MissionList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_MissionList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_MissionList));
  PB_TMissionState_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fmission_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_Mission_descriptor_, &PB_Mission::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_MissionList_descriptor_, &PB_MissionList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fmission_2eproto() {
  delete PB_Mission::default_instance_;
  delete PB_Mission_reflection_;
  delete PB_MissionList::default_instance_;
  delete PB_MissionList_reflection_;
}

void protobuf_AddDesc_msg_5fmission_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021msg_mission.proto\022\010PROTOBUF\"m\n\nPB_Miss"
    "ion\022\022\n\nmission_id\030\001 \001(\r\022\025\n\rmission_state"
    "\030\002 \001(\r\022\026\n\016mission_target\030\003 \001(\r\022\034\n\024missio"
    "n_receive_time\030\004 \001(\r\"<\n\016PB_MissionList\022*"
    "\n\014mission_list\030\001 \003(\0132\024.PROTOBUF.PB_Missi"
    "on*\222\001\n\020PB_TMissionState\022\031\n\025MISSION_STATE"
    "_INVALID\020\000\022\030\n\024MISSION_STATE_ACCEPT\020\001\022\026\n\022"
    "MISSION_STATE_DONE\020\002\022\030\n\024MISSION_STATE_RE"
    "WARD\020\003\022\027\n\023MISSION_STATE_CLOSE\020\004", 351);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_mission.proto", &protobuf_RegisterTypes);
  PB_Mission::default_instance_ = new PB_Mission();
  PB_MissionList::default_instance_ = new PB_MissionList();
  PB_Mission::default_instance_->InitAsDefaultInstance();
  PB_MissionList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fmission_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fmission_2eproto {
  StaticDescriptorInitializer_msg_5fmission_2eproto() {
    protobuf_AddDesc_msg_5fmission_2eproto();
  }
} static_descriptor_initializer_msg_5fmission_2eproto_;
const ::google::protobuf::EnumDescriptor* PB_TMissionState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_TMissionState_descriptor_;
}
bool PB_TMissionState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int PB_Mission::kMissionIdFieldNumber;
const int PB_Mission::kMissionStateFieldNumber;
const int PB_Mission::kMissionTargetFieldNumber;
const int PB_Mission::kMissionReceiveTimeFieldNumber;
#endif  // !_MSC_VER

PB_Mission::PB_Mission()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PROTOBUF.PB_Mission)
}

void PB_Mission::InitAsDefaultInstance() {
}

PB_Mission::PB_Mission(const PB_Mission& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PROTOBUF.PB_Mission)
}

void PB_Mission::SharedCtor() {
  _cached_size_ = 0;
  mission_id_ = 0u;
  mission_state_ = 0u;
  mission_target_ = 0u;
  mission_receive_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_Mission::~PB_Mission() {
  // @@protoc_insertion_point(destructor:PROTOBUF.PB_Mission)
  SharedDtor();
}

void PB_Mission::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_Mission::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_Mission::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_Mission_descriptor_;
}

const PB_Mission& PB_Mission::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmission_2eproto();
  return *default_instance_;
}

PB_Mission* PB_Mission::default_instance_ = NULL;

PB_Mission* PB_Mission::New() const {
  return new PB_Mission;
}

void PB_Mission::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PB_Mission*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(mission_id_, mission_receive_time_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_Mission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PROTOBUF.PB_Mission)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 mission_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mission_id_)));
          set_has_mission_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mission_state;
        break;
      }

      // optional uint32 mission_state = 2;
      case 2: {
        if (tag == 16) {
         parse_mission_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mission_state_)));
          set_has_mission_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mission_target;
        break;
      }

      // optional uint32 mission_target = 3;
      case 3: {
        if (tag == 24) {
         parse_mission_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mission_target_)));
          set_has_mission_target();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mission_receive_time;
        break;
      }

      // optional uint32 mission_receive_time = 4;
      case 4: {
        if (tag == 32) {
         parse_mission_receive_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mission_receive_time_)));
          set_has_mission_receive_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PROTOBUF.PB_Mission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PROTOBUF.PB_Mission)
  return false;
#undef DO_
}

void PB_Mission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PROTOBUF.PB_Mission)
  // optional uint32 mission_id = 1;
  if (has_mission_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mission_id(), output);
  }

  // optional uint32 mission_state = 2;
  if (has_mission_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mission_state(), output);
  }

  // optional uint32 mission_target = 3;
  if (has_mission_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mission_target(), output);
  }

  // optional uint32 mission_receive_time = 4;
  if (has_mission_receive_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mission_receive_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PROTOBUF.PB_Mission)
}

::google::protobuf::uint8* PB_Mission::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PROTOBUF.PB_Mission)
  // optional uint32 mission_id = 1;
  if (has_mission_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mission_id(), target);
  }

  // optional uint32 mission_state = 2;
  if (has_mission_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mission_state(), target);
  }

  // optional uint32 mission_target = 3;
  if (has_mission_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mission_target(), target);
  }

  // optional uint32 mission_receive_time = 4;
  if (has_mission_receive_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mission_receive_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PROTOBUF.PB_Mission)
  return target;
}

int PB_Mission::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 mission_id = 1;
    if (has_mission_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mission_id());
    }

    // optional uint32 mission_state = 2;
    if (has_mission_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mission_state());
    }

    // optional uint32 mission_target = 3;
    if (has_mission_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mission_target());
    }

    // optional uint32 mission_receive_time = 4;
    if (has_mission_receive_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mission_receive_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_Mission::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_Mission* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_Mission*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_Mission::MergeFrom(const PB_Mission& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mission_id()) {
      set_mission_id(from.mission_id());
    }
    if (from.has_mission_state()) {
      set_mission_state(from.mission_state());
    }
    if (from.has_mission_target()) {
      set_mission_target(from.mission_target());
    }
    if (from.has_mission_receive_time()) {
      set_mission_receive_time(from.mission_receive_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_Mission::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_Mission::CopyFrom(const PB_Mission& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Mission::IsInitialized() const {

  return true;
}

void PB_Mission::Swap(PB_Mission* other) {
  if (other != this) {
    std::swap(mission_id_, other->mission_id_);
    std::swap(mission_state_, other->mission_state_);
    std::swap(mission_target_, other->mission_target_);
    std::swap(mission_receive_time_, other->mission_receive_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_Mission::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_Mission_descriptor_;
  metadata.reflection = PB_Mission_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_MissionList::kMissionListFieldNumber;
#endif  // !_MSC_VER

PB_MissionList::PB_MissionList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PROTOBUF.PB_MissionList)
}

void PB_MissionList::InitAsDefaultInstance() {
}

PB_MissionList::PB_MissionList(const PB_MissionList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PROTOBUF.PB_MissionList)
}

void PB_MissionList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_MissionList::~PB_MissionList() {
  // @@protoc_insertion_point(destructor:PROTOBUF.PB_MissionList)
  SharedDtor();
}

void PB_MissionList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_MissionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_MissionList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_MissionList_descriptor_;
}

const PB_MissionList& PB_MissionList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmission_2eproto();
  return *default_instance_;
}

PB_MissionList* PB_MissionList::default_instance_ = NULL;

PB_MissionList* PB_MissionList::New() const {
  return new PB_MissionList;
}

void PB_MissionList::Clear() {
  mission_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_MissionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PROTOBUF.PB_MissionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PROTOBUF.PB_Mission mission_list = 1;
      case 1: {
        if (tag == 10) {
         parse_mission_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mission_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_mission_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PROTOBUF.PB_MissionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PROTOBUF.PB_MissionList)
  return false;
#undef DO_
}

void PB_MissionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PROTOBUF.PB_MissionList)
  // repeated .PROTOBUF.PB_Mission mission_list = 1;
  for (int i = 0; i < this->mission_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mission_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PROTOBUF.PB_MissionList)
}

::google::protobuf::uint8* PB_MissionList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PROTOBUF.PB_MissionList)
  // repeated .PROTOBUF.PB_Mission mission_list = 1;
  for (int i = 0; i < this->mission_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mission_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PROTOBUF.PB_MissionList)
  return target;
}

int PB_MissionList::ByteSize() const {
  int total_size = 0;

  // repeated .PROTOBUF.PB_Mission mission_list = 1;
  total_size += 1 * this->mission_list_size();
  for (int i = 0; i < this->mission_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mission_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_MissionList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_MissionList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_MissionList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_MissionList::MergeFrom(const PB_MissionList& from) {
  GOOGLE_CHECK_NE(&from, this);
  mission_list_.MergeFrom(from.mission_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_MissionList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_MissionList::CopyFrom(const PB_MissionList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_MissionList::IsInitialized() const {

  return true;
}

void PB_MissionList::Swap(PB_MissionList* other) {
  if (other != this) {
    mission_list_.Swap(&other->mission_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_MissionList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_MissionList_descriptor_;
  metadata.reflection = PB_MissionList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PROTOBUF

// @@protoc_insertion_point(global_scope)
