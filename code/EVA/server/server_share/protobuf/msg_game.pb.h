// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game.proto

#ifndef PROTOBUF_msg_5fgame_2eproto__INCLUDED
#define PROTOBUF_msg_5fgame_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PROTOBUF {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5fgame_2eproto();
void protobuf_AssignDesc_msg_5fgame_2eproto();
void protobuf_ShutdownFile_msg_5fgame_2eproto();

class PB_CreateGame;
class PB_LeaveGame;
class PB_UserOffline;
class PB_UserOnline;

// ===================================================================

class PB_CreateGame : public ::google::protobuf::Message {
 public:
  PB_CreateGame();
  virtual ~PB_CreateGame();

  PB_CreateGame(const PB_CreateGame& from);

  inline PB_CreateGame& operator=(const PB_CreateGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_CreateGame& default_instance();

  void Swap(PB_CreateGame* other);

  // implements Message ----------------------------------------------

  PB_CreateGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_CreateGame& from);
  void MergeFrom(const PB_CreateGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string game_name = 1;
  inline bool has_game_name() const;
  inline void clear_game_name();
  static const int kGameNameFieldNumber = 1;
  inline const ::std::string& game_name() const;
  inline void set_game_name(const ::std::string& value);
  inline void set_game_name(const char* value);
  inline void set_game_name(const char* value, size_t size);
  inline ::std::string* mutable_game_name();
  inline ::std::string* release_game_name();
  inline void set_allocated_game_name(::std::string* game_name);

  // optional uint32 game_mode = 2;
  inline bool has_game_mode() const;
  inline void clear_game_mode();
  static const int kGameModeFieldNumber = 2;
  inline ::google::protobuf::uint32 game_mode() const;
  inline void set_game_mode(::google::protobuf::uint32 value);

  // optional uint32 consume_id = 3;
  inline bool has_consume_id() const;
  inline void clear_consume_id();
  static const int kConsumeIdFieldNumber = 3;
  inline ::google::protobuf::uint32 consume_id() const;
  inline void set_consume_id(::google::protobuf::uint32 value);

  // optional uint32 game_id = 4;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 service_id = 5;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 5;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);

  // optional uint32 special_kind = 6;
  inline bool has_special_kind() const;
  inline void clear_special_kind();
  static const int kSpecialKindFieldNumber = 6;
  inline ::google::protobuf::uint32 special_kind() const;
  inline void set_special_kind(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_CreateGame)
 private:
  inline void set_has_game_name();
  inline void clear_has_game_name();
  inline void set_has_game_mode();
  inline void clear_has_game_mode();
  inline void set_has_consume_id();
  inline void clear_has_consume_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_service_id();
  inline void clear_has_service_id();
  inline void set_has_special_kind();
  inline void clear_has_special_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* game_name_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::uint32 consume_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 service_id_;
  ::google::protobuf::uint32 special_kind_;
  friend void  protobuf_AddDesc_msg_5fgame_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_2eproto();

  void InitAsDefaultInstance();
  static PB_CreateGame* default_instance_;
};
// -------------------------------------------------------------------

class PB_LeaveGame : public ::google::protobuf::Message {
 public:
  PB_LeaveGame();
  virtual ~PB_LeaveGame();

  PB_LeaveGame(const PB_LeaveGame& from);

  inline PB_LeaveGame& operator=(const PB_LeaveGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_LeaveGame& default_instance();

  void Swap(PB_LeaveGame* other);

  // implements Message ----------------------------------------------

  PB_LeaveGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_LeaveGame& from);
  void MergeFrom(const PB_LeaveGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_LeaveGame)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_msg_5fgame_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_2eproto();

  void InitAsDefaultInstance();
  static PB_LeaveGame* default_instance_;
};
// -------------------------------------------------------------------

class PB_UserOffline : public ::google::protobuf::Message {
 public:
  PB_UserOffline();
  virtual ~PB_UserOffline();

  PB_UserOffline(const PB_UserOffline& from);

  inline PB_UserOffline& operator=(const PB_UserOffline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_UserOffline& default_instance();

  void Swap(PB_UserOffline* other);

  // implements Message ----------------------------------------------

  PB_UserOffline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_UserOffline& from);
  void MergeFrom(const PB_UserOffline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_UserOffline)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_msg_5fgame_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_2eproto();

  void InitAsDefaultInstance();
  static PB_UserOffline* default_instance_;
};
// -------------------------------------------------------------------

class PB_UserOnline : public ::google::protobuf::Message {
 public:
  PB_UserOnline();
  virtual ~PB_UserOnline();

  PB_UserOnline(const PB_UserOnline& from);

  inline PB_UserOnline& operator=(const PB_UserOnline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_UserOnline& default_instance();

  void Swap(PB_UserOnline* other);

  // implements Message ----------------------------------------------

  PB_UserOnline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_UserOnline& from);
  void MergeFrom(const PB_UserOnline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_UserOnline)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_msg_5fgame_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_2eproto();

  void InitAsDefaultInstance();
  static PB_UserOnline* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_CreateGame

// optional string game_name = 1;
inline bool PB_CreateGame::has_game_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_CreateGame::set_has_game_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_CreateGame::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_CreateGame::clear_game_name() {
  if (game_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_->clear();
  }
  clear_has_game_name();
}
inline const ::std::string& PB_CreateGame::game_name() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateGame.game_name)
  return *game_name_;
}
inline void PB_CreateGame::set_game_name(const ::std::string& value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateGame.game_name)
}
inline void PB_CreateGame::set_game_name(const char* value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:PROTOBUF.PB_CreateGame.game_name)
}
inline void PB_CreateGame::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PROTOBUF.PB_CreateGame.game_name)
}
inline ::std::string* PB_CreateGame::mutable_game_name() {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_CreateGame.game_name)
  return game_name_;
}
inline ::std::string* PB_CreateGame::release_game_name() {
  clear_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_name_;
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PB_CreateGame::set_allocated_game_name(::std::string* game_name) {
  if (game_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_name_;
  }
  if (game_name) {
    set_has_game_name();
    game_name_ = game_name;
  } else {
    clear_has_game_name();
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PROTOBUF.PB_CreateGame.game_name)
}

// optional uint32 game_mode = 2;
inline bool PB_CreateGame::has_game_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_CreateGame::set_has_game_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_CreateGame::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_CreateGame::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 PB_CreateGame::game_mode() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateGame.game_mode)
  return game_mode_;
}
inline void PB_CreateGame::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateGame.game_mode)
}

// optional uint32 consume_id = 3;
inline bool PB_CreateGame::has_consume_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_CreateGame::set_has_consume_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_CreateGame::clear_has_consume_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_CreateGame::clear_consume_id() {
  consume_id_ = 0u;
  clear_has_consume_id();
}
inline ::google::protobuf::uint32 PB_CreateGame::consume_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateGame.consume_id)
  return consume_id_;
}
inline void PB_CreateGame::set_consume_id(::google::protobuf::uint32 value) {
  set_has_consume_id();
  consume_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateGame.consume_id)
}

// optional uint32 game_id = 4;
inline bool PB_CreateGame::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_CreateGame::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_CreateGame::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_CreateGame::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 PB_CreateGame::game_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateGame.game_id)
  return game_id_;
}
inline void PB_CreateGame::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateGame.game_id)
}

// optional uint32 service_id = 5;
inline bool PB_CreateGame::has_service_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_CreateGame::set_has_service_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_CreateGame::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_CreateGame::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 PB_CreateGame::service_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateGame.service_id)
  return service_id_;
}
inline void PB_CreateGame::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateGame.service_id)
}

// optional uint32 special_kind = 6;
inline bool PB_CreateGame::has_special_kind() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_CreateGame::set_has_special_kind() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_CreateGame::clear_has_special_kind() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_CreateGame::clear_special_kind() {
  special_kind_ = 0u;
  clear_has_special_kind();
}
inline ::google::protobuf::uint32 PB_CreateGame::special_kind() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateGame.special_kind)
  return special_kind_;
}
inline void PB_CreateGame::set_special_kind(::google::protobuf::uint32 value) {
  set_has_special_kind();
  special_kind_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateGame.special_kind)
}

// -------------------------------------------------------------------

// PB_LeaveGame

// optional uint32 role_id = 1;
inline bool PB_LeaveGame::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_LeaveGame::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_LeaveGame::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_LeaveGame::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_LeaveGame::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_LeaveGame.role_id)
  return role_id_;
}
inline void PB_LeaveGame::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_LeaveGame.role_id)
}

// -------------------------------------------------------------------

// PB_UserOffline

// optional uint32 role_id = 1;
inline bool PB_UserOffline::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_UserOffline::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_UserOffline::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_UserOffline::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_UserOffline::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_UserOffline.role_id)
  return role_id_;
}
inline void PB_UserOffline::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_UserOffline.role_id)
}

// -------------------------------------------------------------------

// PB_UserOnline

// optional uint32 role_id = 1;
inline bool PB_UserOnline::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_UserOnline::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_UserOnline::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_UserOnline::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_UserOnline::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_UserOnline.role_id)
  return role_id_;
}
inline void PB_UserOnline::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_UserOnline.role_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PROTOBUF

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fgame_2eproto__INCLUDED
