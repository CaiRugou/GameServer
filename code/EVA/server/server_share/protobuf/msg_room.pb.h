// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_room.proto

#ifndef PROTOBUF_msg_5froom_2eproto__INCLUDED
#define PROTOBUF_msg_5froom_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PROTOBUF {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5froom_2eproto();
void protobuf_AssignDesc_msg_5froom_2eproto();
void protobuf_ShutdownFile_msg_5froom_2eproto();

class PB_RoomInfo;
class PB_RoomInfoList;
class PB_CreateRoom;
class PB_LeaveRoom;
class PB_UserOffline;
class PB_UserOnline;
class PB_RecordRoleScore;
class PB_RecordRoleScoreList;
class PB_GameRecordBseInfo;
class PB_GameRecordRoleInfo;
class PB_GameRecordShowDown;
class PB_GameRecordNode;

// ===================================================================

class PB_RoomInfo : public ::google::protobuf::Message {
 public:
  PB_RoomInfo();
  virtual ~PB_RoomInfo();

  PB_RoomInfo(const PB_RoomInfo& from);

  inline PB_RoomInfo& operator=(const PB_RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoomInfo& default_instance();

  void Swap(PB_RoomInfo* other);

  // implements Message ----------------------------------------------

  PB_RoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoomInfo& from);
  void MergeFrom(const PB_RoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string room_name = 1;
  inline bool has_room_name() const;
  inline void clear_room_name();
  static const int kRoomNameFieldNumber = 1;
  inline const ::std::string& room_name() const;
  inline void set_room_name(const ::std::string& value);
  inline void set_room_name(const char* value);
  inline void set_room_name(const char* value, size_t size);
  inline ::std::string* mutable_room_name();
  inline ::std::string* release_room_name();
  inline void set_allocated_room_name(::std::string* room_name);

  // optional uint32 room_count = 2;
  inline bool has_room_count() const;
  inline void clear_room_count();
  static const int kRoomCountFieldNumber = 2;
  inline ::google::protobuf::uint32 room_count() const;
  inline void set_room_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_RoomInfo)
 private:
  inline void set_has_room_name();
  inline void clear_has_room_name();
  inline void set_has_room_count();
  inline void clear_has_room_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* room_name_;
  ::google::protobuf::uint32 room_count_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_RoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_RoomInfoList : public ::google::protobuf::Message {
 public:
  PB_RoomInfoList();
  virtual ~PB_RoomInfoList();

  PB_RoomInfoList(const PB_RoomInfoList& from);

  inline PB_RoomInfoList& operator=(const PB_RoomInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoomInfoList& default_instance();

  void Swap(PB_RoomInfoList* other);

  // implements Message ----------------------------------------------

  PB_RoomInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoomInfoList& from);
  void MergeFrom(const PB_RoomInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_count = 1;
  inline bool has_role_count() const;
  inline void clear_role_count();
  static const int kRoleCountFieldNumber = 1;
  inline ::google::protobuf::uint32 role_count() const;
  inline void set_role_count(::google::protobuf::uint32 value);

  // repeated .PROTOBUF.PB_RoomInfo room_list = 2;
  inline int room_list_size() const;
  inline void clear_room_list();
  static const int kRoomListFieldNumber = 2;
  inline const ::PROTOBUF::PB_RoomInfo& room_list(int index) const;
  inline ::PROTOBUF::PB_RoomInfo* mutable_room_list(int index);
  inline ::PROTOBUF::PB_RoomInfo* add_room_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RoomInfo >&
      room_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RoomInfo >*
      mutable_room_list();

  // optional uint32 service_id = 3;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_RoomInfoList)
 private:
  inline void set_has_role_count();
  inline void clear_has_role_count();
  inline void set_has_service_id();
  inline void clear_has_service_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RoomInfo > room_list_;
  ::google::protobuf::uint32 role_count_;
  ::google::protobuf::uint32 service_id_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_RoomInfoList* default_instance_;
};
// -------------------------------------------------------------------

class PB_CreateRoom : public ::google::protobuf::Message {
 public:
  PB_CreateRoom();
  virtual ~PB_CreateRoom();

  PB_CreateRoom(const PB_CreateRoom& from);

  inline PB_CreateRoom& operator=(const PB_CreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_CreateRoom& default_instance();

  void Swap(PB_CreateRoom* other);

  // implements Message ----------------------------------------------

  PB_CreateRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_CreateRoom& from);
  void MergeFrom(const PB_CreateRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string room_name = 1;
  inline bool has_room_name() const;
  inline void clear_room_name();
  static const int kRoomNameFieldNumber = 1;
  inline const ::std::string& room_name() const;
  inline void set_room_name(const ::std::string& value);
  inline void set_room_name(const char* value);
  inline void set_room_name(const char* value, size_t size);
  inline ::std::string* mutable_room_name();
  inline ::std::string* release_room_name();
  inline void set_allocated_room_name(::std::string* room_name);

  // optional uint32 room_mode = 2;
  inline bool has_room_mode() const;
  inline void clear_room_mode();
  static const int kRoomModeFieldNumber = 2;
  inline ::google::protobuf::uint32 room_mode() const;
  inline void set_room_mode(::google::protobuf::uint32 value);

  // optional uint32 consume_id = 3;
  inline bool has_consume_id() const;
  inline void clear_consume_id();
  static const int kConsumeIdFieldNumber = 3;
  inline ::google::protobuf::uint32 consume_id() const;
  inline void set_consume_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 service_id = 5;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 5;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);

  // optional uint32 special_kind = 6;
  inline bool has_special_kind() const;
  inline void clear_special_kind();
  static const int kSpecialKindFieldNumber = 6;
  inline ::google::protobuf::uint32 special_kind() const;
  inline void set_special_kind(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_CreateRoom)
 private:
  inline void set_has_room_name();
  inline void clear_has_room_name();
  inline void set_has_room_mode();
  inline void clear_has_room_mode();
  inline void set_has_consume_id();
  inline void clear_has_consume_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_service_id();
  inline void clear_has_service_id();
  inline void set_has_special_kind();
  inline void clear_has_special_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* room_name_;
  ::google::protobuf::uint32 room_mode_;
  ::google::protobuf::uint32 consume_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 service_id_;
  ::google::protobuf::uint32 special_kind_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_CreateRoom* default_instance_;
};
// -------------------------------------------------------------------

class PB_LeaveRoom : public ::google::protobuf::Message {
 public:
  PB_LeaveRoom();
  virtual ~PB_LeaveRoom();

  PB_LeaveRoom(const PB_LeaveRoom& from);

  inline PB_LeaveRoom& operator=(const PB_LeaveRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_LeaveRoom& default_instance();

  void Swap(PB_LeaveRoom* other);

  // implements Message ----------------------------------------------

  PB_LeaveRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_LeaveRoom& from);
  void MergeFrom(const PB_LeaveRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_LeaveRoom)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_LeaveRoom* default_instance_;
};
// -------------------------------------------------------------------

class PB_UserOffline : public ::google::protobuf::Message {
 public:
  PB_UserOffline();
  virtual ~PB_UserOffline();

  PB_UserOffline(const PB_UserOffline& from);

  inline PB_UserOffline& operator=(const PB_UserOffline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_UserOffline& default_instance();

  void Swap(PB_UserOffline* other);

  // implements Message ----------------------------------------------

  PB_UserOffline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_UserOffline& from);
  void MergeFrom(const PB_UserOffline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_UserOffline)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_UserOffline* default_instance_;
};
// -------------------------------------------------------------------

class PB_UserOnline : public ::google::protobuf::Message {
 public:
  PB_UserOnline();
  virtual ~PB_UserOnline();

  PB_UserOnline(const PB_UserOnline& from);

  inline PB_UserOnline& operator=(const PB_UserOnline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_UserOnline& default_instance();

  void Swap(PB_UserOnline* other);

  // implements Message ----------------------------------------------

  PB_UserOnline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_UserOnline& from);
  void MergeFrom(const PB_UserOnline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_UserOnline)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_UserOnline* default_instance_;
};
// -------------------------------------------------------------------

class PB_RecordRoleScore : public ::google::protobuf::Message {
 public:
  PB_RecordRoleScore();
  virtual ~PB_RecordRoleScore();

  PB_RecordRoleScore(const PB_RecordRoleScore& from);

  inline PB_RecordRoleScore& operator=(const PB_RecordRoleScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RecordRoleScore& default_instance();

  void Swap(PB_RecordRoleScore* other);

  // implements Message ----------------------------------------------

  PB_RecordRoleScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RecordRoleScore& from);
  void MergeFrom(const PB_RecordRoleScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_RecordRoleScore)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_RecordRoleScore* default_instance_;
};
// -------------------------------------------------------------------

class PB_RecordRoleScoreList : public ::google::protobuf::Message {
 public:
  PB_RecordRoleScoreList();
  virtual ~PB_RecordRoleScoreList();

  PB_RecordRoleScoreList(const PB_RecordRoleScoreList& from);

  inline PB_RecordRoleScoreList& operator=(const PB_RecordRoleScoreList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RecordRoleScoreList& default_instance();

  void Swap(PB_RecordRoleScoreList* other);

  // implements Message ----------------------------------------------

  PB_RecordRoleScoreList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RecordRoleScoreList& from);
  void MergeFrom(const PB_RecordRoleScoreList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PROTOBUF.PB_RecordRoleScore role_score = 1;
  inline int role_score_size() const;
  inline void clear_role_score();
  static const int kRoleScoreFieldNumber = 1;
  inline const ::PROTOBUF::PB_RecordRoleScore& role_score(int index) const;
  inline ::PROTOBUF::PB_RecordRoleScore* mutable_role_score(int index);
  inline ::PROTOBUF::PB_RecordRoleScore* add_role_score();
  inline const ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScore >&
      role_score() const;
  inline ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScore >*
      mutable_role_score();

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_RecordRoleScoreList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScore > role_score_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_RecordRoleScoreList* default_instance_;
};
// -------------------------------------------------------------------

class PB_GameRecordBseInfo : public ::google::protobuf::Message {
 public:
  PB_GameRecordBseInfo();
  virtual ~PB_GameRecordBseInfo();

  PB_GameRecordBseInfo(const PB_GameRecordBseInfo& from);

  inline PB_GameRecordBseInfo& operator=(const PB_GameRecordBseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_GameRecordBseInfo& default_instance();

  void Swap(PB_GameRecordBseInfo* other);

  // implements Message ----------------------------------------------

  PB_GameRecordBseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_GameRecordBseInfo& from);
  void MergeFrom(const PB_GameRecordBseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 create_time = 1;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 create_time() const;
  inline void set_create_time(::google::protobuf::uint32 value);

  // optional string uuid = 2;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 2;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  inline void set_allocated_uuid(::std::string* uuid);

  // optional .PROTOBUF.PB_CreateRoom create_room = 3;
  inline bool has_create_room() const;
  inline void clear_create_room();
  static const int kCreateRoomFieldNumber = 3;
  inline const ::PROTOBUF::PB_CreateRoom& create_room() const;
  inline ::PROTOBUF::PB_CreateRoom* mutable_create_room();
  inline ::PROTOBUF::PB_CreateRoom* release_create_room();
  inline void set_allocated_create_room(::PROTOBUF::PB_CreateRoom* create_room);

  // repeated .PROTOBUF.PB_RecordRoleScoreList role_score_list = 4;
  inline int role_score_list_size() const;
  inline void clear_role_score_list();
  static const int kRoleScoreListFieldNumber = 4;
  inline const ::PROTOBUF::PB_RecordRoleScoreList& role_score_list(int index) const;
  inline ::PROTOBUF::PB_RecordRoleScoreList* mutable_role_score_list(int index);
  inline ::PROTOBUF::PB_RecordRoleScoreList* add_role_score_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScoreList >&
      role_score_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScoreList >*
      mutable_role_score_list();

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_GameRecordBseInfo)
 private:
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_create_room();
  inline void clear_has_create_room();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* uuid_;
  ::PROTOBUF::PB_CreateRoom* create_room_;
  ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScoreList > role_score_list_;
  ::google::protobuf::uint32 create_time_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_GameRecordBseInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_GameRecordRoleInfo : public ::google::protobuf::Message {
 public:
  PB_GameRecordRoleInfo();
  virtual ~PB_GameRecordRoleInfo();

  PB_GameRecordRoleInfo(const PB_GameRecordRoleInfo& from);

  inline PB_GameRecordRoleInfo& operator=(const PB_GameRecordRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_GameRecordRoleInfo& default_instance();

  void Swap(PB_GameRecordRoleInfo* other);

  // implements Message ----------------------------------------------

  PB_GameRecordRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_GameRecordRoleInfo& from);
  void MergeFrom(const PB_GameRecordRoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // optional uint32 role_seat = 2;
  inline bool has_role_seat() const;
  inline void clear_role_seat();
  static const int kRoleSeatFieldNumber = 2;
  inline ::google::protobuf::uint32 role_seat() const;
  inline void set_role_seat(::google::protobuf::uint32 value);

  // optional int64 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int64 score() const;
  inline void set_score(::google::protobuf::int64 value);

  // repeated uint32 hand_card = 4;
  inline int hand_card_size() const;
  inline void clear_hand_card();
  static const int kHandCardFieldNumber = 4;
  inline ::google::protobuf::uint32 hand_card(int index) const;
  inline void set_hand_card(int index, ::google::protobuf::uint32 value);
  inline void add_hand_card(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hand_card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hand_card();

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_GameRecordRoleInfo)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_role_seat();
  inline void clear_has_role_seat();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 role_seat_;
  ::google::protobuf::int64 score_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hand_card_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_GameRecordRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_GameRecordShowDown : public ::google::protobuf::Message {
 public:
  PB_GameRecordShowDown();
  virtual ~PB_GameRecordShowDown();

  PB_GameRecordShowDown(const PB_GameRecordShowDown& from);

  inline PB_GameRecordShowDown& operator=(const PB_GameRecordShowDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_GameRecordShowDown& default_instance();

  void Swap(PB_GameRecordShowDown* other);

  // implements Message ----------------------------------------------

  PB_GameRecordShowDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_GameRecordShowDown& from);
  void MergeFrom(const PB_GameRecordShowDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // optional int64 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int64 score() const;
  inline void set_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_GameRecordShowDown)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 score_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_GameRecordShowDown* default_instance_;
};
// -------------------------------------------------------------------

class PB_GameRecordNode : public ::google::protobuf::Message {
 public:
  PB_GameRecordNode();
  virtual ~PB_GameRecordNode();

  PB_GameRecordNode(const PB_GameRecordNode& from);

  inline PB_GameRecordNode& operator=(const PB_GameRecordNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_GameRecordNode& default_instance();

  void Swap(PB_GameRecordNode* other);

  // implements Message ----------------------------------------------

  PB_GameRecordNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_GameRecordNode& from);
  void MergeFrom(const PB_GameRecordNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cmd_id = 1;
  inline bool has_cmd_id() const;
  inline void clear_cmd_id();
  static const int kCmdIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cmd_id() const;
  inline void set_cmd_id(::google::protobuf::uint32 value);

  // repeated uint32 card_value = 2;
  inline int card_value_size() const;
  inline void clear_card_value();
  static const int kCardValueFieldNumber = 2;
  inline ::google::protobuf::uint32 card_value(int index) const;
  inline void set_card_value(int index, ::google::protobuf::uint32 value);
  inline void add_card_value(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_value();

  // optional uint32 card_index = 3;
  inline bool has_card_index() const;
  inline void clear_card_index();
  static const int kCardIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 card_index() const;
  inline void set_card_index(::google::protobuf::uint32 value);

  // optional uint32 role_id = 4;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // optional uint32 action_wik = 5;
  inline bool has_action_wik() const;
  inline void clear_action_wik();
  static const int kActionWikFieldNumber = 5;
  inline ::google::protobuf::uint32 action_wik() const;
  inline void set_action_wik(::google::protobuf::uint32 value);

  // optional uint32 param1 = 6;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 6;
  inline ::google::protobuf::uint32 param1() const;
  inline void set_param1(::google::protobuf::uint32 value);

  // optional uint32 param2 = 7;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 7;
  inline ::google::protobuf::uint32 param2() const;
  inline void set_param2(::google::protobuf::uint32 value);

  // optional uint32 param3 = 8;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 8;
  inline ::google::protobuf::uint32 param3() const;
  inline void set_param3(::google::protobuf::uint32 value);

  // optional .PROTOBUF.PB_GameRecordRoleInfo role_info = 9;
  inline bool has_role_info() const;
  inline void clear_role_info();
  static const int kRoleInfoFieldNumber = 9;
  inline const ::PROTOBUF::PB_GameRecordRoleInfo& role_info() const;
  inline ::PROTOBUF::PB_GameRecordRoleInfo* mutable_role_info();
  inline ::PROTOBUF::PB_GameRecordRoleInfo* release_role_info();
  inline void set_allocated_role_info(::PROTOBUF::PB_GameRecordRoleInfo* role_info);

  // optional .PROTOBUF.PB_CreateRoom room_info = 10;
  inline bool has_room_info() const;
  inline void clear_room_info();
  static const int kRoomInfoFieldNumber = 10;
  inline const ::PROTOBUF::PB_CreateRoom& room_info() const;
  inline ::PROTOBUF::PB_CreateRoom* mutable_room_info();
  inline ::PROTOBUF::PB_CreateRoom* release_room_info();
  inline void set_allocated_room_info(::PROTOBUF::PB_CreateRoom* room_info);

  // optional .PROTOBUF.PB_GameRecordShowDown showdown_info = 11;
  inline bool has_showdown_info() const;
  inline void clear_showdown_info();
  static const int kShowdownInfoFieldNumber = 11;
  inline const ::PROTOBUF::PB_GameRecordShowDown& showdown_info() const;
  inline ::PROTOBUF::PB_GameRecordShowDown* mutable_showdown_info();
  inline ::PROTOBUF::PB_GameRecordShowDown* release_showdown_info();
  inline void set_allocated_showdown_info(::PROTOBUF::PB_GameRecordShowDown* showdown_info);

  // optional .PROTOBUF.PB_GameRecordNode next_node = 12;
  inline bool has_next_node() const;
  inline void clear_next_node();
  static const int kNextNodeFieldNumber = 12;
  inline const ::PROTOBUF::PB_GameRecordNode& next_node() const;
  inline ::PROTOBUF::PB_GameRecordNode* mutable_next_node();
  inline ::PROTOBUF::PB_GameRecordNode* release_next_node();
  inline void set_allocated_next_node(::PROTOBUF::PB_GameRecordNode* next_node);

  // @@protoc_insertion_point(class_scope:PROTOBUF.PB_GameRecordNode)
 private:
  inline void set_has_cmd_id();
  inline void clear_has_cmd_id();
  inline void set_has_card_index();
  inline void clear_has_card_index();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_action_wik();
  inline void clear_has_action_wik();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();
  inline void set_has_role_info();
  inline void clear_has_role_info();
  inline void set_has_room_info();
  inline void clear_has_room_info();
  inline void set_has_showdown_info();
  inline void clear_has_showdown_info();
  inline void set_has_next_node();
  inline void clear_has_next_node();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_value_;
  ::google::protobuf::uint32 cmd_id_;
  ::google::protobuf::uint32 card_index_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 action_wik_;
  ::google::protobuf::uint32 param1_;
  ::google::protobuf::uint32 param2_;
  ::PROTOBUF::PB_GameRecordRoleInfo* role_info_;
  ::PROTOBUF::PB_CreateRoom* room_info_;
  ::PROTOBUF::PB_GameRecordShowDown* showdown_info_;
  ::PROTOBUF::PB_GameRecordNode* next_node_;
  ::google::protobuf::uint32 param3_;
  friend void  protobuf_AddDesc_msg_5froom_2eproto();
  friend void protobuf_AssignDesc_msg_5froom_2eproto();
  friend void protobuf_ShutdownFile_msg_5froom_2eproto();

  void InitAsDefaultInstance();
  static PB_GameRecordNode* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_RoomInfo

// optional string room_name = 1;
inline bool PB_RoomInfo::has_room_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoomInfo::set_has_room_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoomInfo::clear_has_room_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoomInfo::clear_room_name() {
  if (room_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_->clear();
  }
  clear_has_room_name();
}
inline const ::std::string& PB_RoomInfo::room_name() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_RoomInfo.room_name)
  return *room_name_;
}
inline void PB_RoomInfo::set_room_name(const ::std::string& value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_RoomInfo.room_name)
}
inline void PB_RoomInfo::set_room_name(const char* value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:PROTOBUF.PB_RoomInfo.room_name)
}
inline void PB_RoomInfo::set_room_name(const char* value, size_t size) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PROTOBUF.PB_RoomInfo.room_name)
}
inline ::std::string* PB_RoomInfo::mutable_room_name() {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_RoomInfo.room_name)
  return room_name_;
}
inline ::std::string* PB_RoomInfo::release_room_name() {
  clear_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = room_name_;
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PB_RoomInfo::set_allocated_room_name(::std::string* room_name) {
  if (room_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_name_;
  }
  if (room_name) {
    set_has_room_name();
    room_name_ = room_name;
  } else {
    clear_has_room_name();
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PROTOBUF.PB_RoomInfo.room_name)
}

// optional uint32 room_count = 2;
inline bool PB_RoomInfo::has_room_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RoomInfo::set_has_room_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RoomInfo::clear_has_room_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RoomInfo::clear_room_count() {
  room_count_ = 0u;
  clear_has_room_count();
}
inline ::google::protobuf::uint32 PB_RoomInfo::room_count() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_RoomInfo.room_count)
  return room_count_;
}
inline void PB_RoomInfo::set_room_count(::google::protobuf::uint32 value) {
  set_has_room_count();
  room_count_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_RoomInfo.room_count)
}

// -------------------------------------------------------------------

// PB_RoomInfoList

// optional uint32 role_count = 1;
inline bool PB_RoomInfoList::has_role_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoomInfoList::set_has_role_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoomInfoList::clear_has_role_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoomInfoList::clear_role_count() {
  role_count_ = 0u;
  clear_has_role_count();
}
inline ::google::protobuf::uint32 PB_RoomInfoList::role_count() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_RoomInfoList.role_count)
  return role_count_;
}
inline void PB_RoomInfoList::set_role_count(::google::protobuf::uint32 value) {
  set_has_role_count();
  role_count_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_RoomInfoList.role_count)
}

// repeated .PROTOBUF.PB_RoomInfo room_list = 2;
inline int PB_RoomInfoList::room_list_size() const {
  return room_list_.size();
}
inline void PB_RoomInfoList::clear_room_list() {
  room_list_.Clear();
}
inline const ::PROTOBUF::PB_RoomInfo& PB_RoomInfoList::room_list(int index) const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_RoomInfoList.room_list)
  return room_list_.Get(index);
}
inline ::PROTOBUF::PB_RoomInfo* PB_RoomInfoList::mutable_room_list(int index) {
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_RoomInfoList.room_list)
  return room_list_.Mutable(index);
}
inline ::PROTOBUF::PB_RoomInfo* PB_RoomInfoList::add_room_list() {
  // @@protoc_insertion_point(field_add:PROTOBUF.PB_RoomInfoList.room_list)
  return room_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RoomInfo >&
PB_RoomInfoList::room_list() const {
  // @@protoc_insertion_point(field_list:PROTOBUF.PB_RoomInfoList.room_list)
  return room_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RoomInfo >*
PB_RoomInfoList::mutable_room_list() {
  // @@protoc_insertion_point(field_mutable_list:PROTOBUF.PB_RoomInfoList.room_list)
  return &room_list_;
}

// optional uint32 service_id = 3;
inline bool PB_RoomInfoList::has_service_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_RoomInfoList::set_has_service_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_RoomInfoList::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_RoomInfoList::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 PB_RoomInfoList::service_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_RoomInfoList.service_id)
  return service_id_;
}
inline void PB_RoomInfoList::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_RoomInfoList.service_id)
}

// -------------------------------------------------------------------

// PB_CreateRoom

// optional string room_name = 1;
inline bool PB_CreateRoom::has_room_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_CreateRoom::set_has_room_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_CreateRoom::clear_has_room_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_CreateRoom::clear_room_name() {
  if (room_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_->clear();
  }
  clear_has_room_name();
}
inline const ::std::string& PB_CreateRoom::room_name() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateRoom.room_name)
  return *room_name_;
}
inline void PB_CreateRoom::set_room_name(const ::std::string& value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateRoom.room_name)
}
inline void PB_CreateRoom::set_room_name(const char* value) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:PROTOBUF.PB_CreateRoom.room_name)
}
inline void PB_CreateRoom::set_room_name(const char* value, size_t size) {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_ = new ::std::string;
  }
  room_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PROTOBUF.PB_CreateRoom.room_name)
}
inline ::std::string* PB_CreateRoom::mutable_room_name() {
  set_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_CreateRoom.room_name)
  return room_name_;
}
inline ::std::string* PB_CreateRoom::release_room_name() {
  clear_has_room_name();
  if (room_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = room_name_;
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PB_CreateRoom::set_allocated_room_name(::std::string* room_name) {
  if (room_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_name_;
  }
  if (room_name) {
    set_has_room_name();
    room_name_ = room_name;
  } else {
    clear_has_room_name();
    room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PROTOBUF.PB_CreateRoom.room_name)
}

// optional uint32 room_mode = 2;
inline bool PB_CreateRoom::has_room_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_CreateRoom::set_has_room_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_CreateRoom::clear_has_room_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_CreateRoom::clear_room_mode() {
  room_mode_ = 0u;
  clear_has_room_mode();
}
inline ::google::protobuf::uint32 PB_CreateRoom::room_mode() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateRoom.room_mode)
  return room_mode_;
}
inline void PB_CreateRoom::set_room_mode(::google::protobuf::uint32 value) {
  set_has_room_mode();
  room_mode_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateRoom.room_mode)
}

// optional uint32 consume_id = 3;
inline bool PB_CreateRoom::has_consume_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_CreateRoom::set_has_consume_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_CreateRoom::clear_has_consume_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_CreateRoom::clear_consume_id() {
  consume_id_ = 0u;
  clear_has_consume_id();
}
inline ::google::protobuf::uint32 PB_CreateRoom::consume_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateRoom.consume_id)
  return consume_id_;
}
inline void PB_CreateRoom::set_consume_id(::google::protobuf::uint32 value) {
  set_has_consume_id();
  consume_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateRoom.consume_id)
}

// optional uint32 room_id = 4;
inline bool PB_CreateRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_CreateRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_CreateRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_CreateRoom::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 PB_CreateRoom::room_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateRoom.room_id)
  return room_id_;
}
inline void PB_CreateRoom::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateRoom.room_id)
}

// optional uint32 service_id = 5;
inline bool PB_CreateRoom::has_service_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_CreateRoom::set_has_service_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_CreateRoom::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_CreateRoom::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 PB_CreateRoom::service_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateRoom.service_id)
  return service_id_;
}
inline void PB_CreateRoom::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateRoom.service_id)
}

// optional uint32 special_kind = 6;
inline bool PB_CreateRoom::has_special_kind() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_CreateRoom::set_has_special_kind() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_CreateRoom::clear_has_special_kind() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_CreateRoom::clear_special_kind() {
  special_kind_ = 0u;
  clear_has_special_kind();
}
inline ::google::protobuf::uint32 PB_CreateRoom::special_kind() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_CreateRoom.special_kind)
  return special_kind_;
}
inline void PB_CreateRoom::set_special_kind(::google::protobuf::uint32 value) {
  set_has_special_kind();
  special_kind_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_CreateRoom.special_kind)
}

// -------------------------------------------------------------------

// PB_LeaveRoom

// optional uint32 role_id = 1;
inline bool PB_LeaveRoom::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_LeaveRoom::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_LeaveRoom::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_LeaveRoom::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_LeaveRoom::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_LeaveRoom.role_id)
  return role_id_;
}
inline void PB_LeaveRoom::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_LeaveRoom.role_id)
}

// -------------------------------------------------------------------

// PB_UserOffline

// optional uint32 role_id = 1;
inline bool PB_UserOffline::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_UserOffline::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_UserOffline::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_UserOffline::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_UserOffline::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_UserOffline.role_id)
  return role_id_;
}
inline void PB_UserOffline::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_UserOffline.role_id)
}

// -------------------------------------------------------------------

// PB_UserOnline

// optional uint32 role_id = 1;
inline bool PB_UserOnline::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_UserOnline::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_UserOnline::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_UserOnline::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_UserOnline::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_UserOnline.role_id)
  return role_id_;
}
inline void PB_UserOnline::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_UserOnline.role_id)
}

// -------------------------------------------------------------------

// PB_RecordRoleScore

// optional uint32 role_id = 1;
inline bool PB_RecordRoleScore::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RecordRoleScore::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RecordRoleScore::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RecordRoleScore::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_RecordRoleScore::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_RecordRoleScore.role_id)
  return role_id_;
}
inline void PB_RecordRoleScore::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_RecordRoleScore.role_id)
}

// optional uint32 score = 2;
inline bool PB_RecordRoleScore::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RecordRoleScore::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RecordRoleScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RecordRoleScore::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 PB_RecordRoleScore::score() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_RecordRoleScore.score)
  return score_;
}
inline void PB_RecordRoleScore::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_RecordRoleScore.score)
}

// -------------------------------------------------------------------

// PB_RecordRoleScoreList

// repeated .PROTOBUF.PB_RecordRoleScore role_score = 1;
inline int PB_RecordRoleScoreList::role_score_size() const {
  return role_score_.size();
}
inline void PB_RecordRoleScoreList::clear_role_score() {
  role_score_.Clear();
}
inline const ::PROTOBUF::PB_RecordRoleScore& PB_RecordRoleScoreList::role_score(int index) const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_RecordRoleScoreList.role_score)
  return role_score_.Get(index);
}
inline ::PROTOBUF::PB_RecordRoleScore* PB_RecordRoleScoreList::mutable_role_score(int index) {
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_RecordRoleScoreList.role_score)
  return role_score_.Mutable(index);
}
inline ::PROTOBUF::PB_RecordRoleScore* PB_RecordRoleScoreList::add_role_score() {
  // @@protoc_insertion_point(field_add:PROTOBUF.PB_RecordRoleScoreList.role_score)
  return role_score_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScore >&
PB_RecordRoleScoreList::role_score() const {
  // @@protoc_insertion_point(field_list:PROTOBUF.PB_RecordRoleScoreList.role_score)
  return role_score_;
}
inline ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScore >*
PB_RecordRoleScoreList::mutable_role_score() {
  // @@protoc_insertion_point(field_mutable_list:PROTOBUF.PB_RecordRoleScoreList.role_score)
  return &role_score_;
}

// -------------------------------------------------------------------

// PB_GameRecordBseInfo

// optional uint32 create_time = 1;
inline bool PB_GameRecordBseInfo::has_create_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_GameRecordBseInfo::set_has_create_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_GameRecordBseInfo::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_GameRecordBseInfo::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 PB_GameRecordBseInfo::create_time() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordBseInfo.create_time)
  return create_time_;
}
inline void PB_GameRecordBseInfo::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordBseInfo.create_time)
}

// optional string uuid = 2;
inline bool PB_GameRecordBseInfo::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_GameRecordBseInfo::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_GameRecordBseInfo::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_GameRecordBseInfo::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& PB_GameRecordBseInfo::uuid() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordBseInfo.uuid)
  return *uuid_;
}
inline void PB_GameRecordBseInfo::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordBseInfo.uuid)
}
inline void PB_GameRecordBseInfo::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
  // @@protoc_insertion_point(field_set_char:PROTOBUF.PB_GameRecordBseInfo.uuid)
}
inline void PB_GameRecordBseInfo::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PROTOBUF.PB_GameRecordBseInfo.uuid)
}
inline ::std::string* PB_GameRecordBseInfo::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uuid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_GameRecordBseInfo.uuid)
  return uuid_;
}
inline ::std::string* PB_GameRecordBseInfo::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PB_GameRecordBseInfo::set_allocated_uuid(::std::string* uuid) {
  if (uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uuid_;
  }
  if (uuid) {
    set_has_uuid();
    uuid_ = uuid;
  } else {
    clear_has_uuid();
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PROTOBUF.PB_GameRecordBseInfo.uuid)
}

// optional .PROTOBUF.PB_CreateRoom create_room = 3;
inline bool PB_GameRecordBseInfo::has_create_room() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_GameRecordBseInfo::set_has_create_room() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_GameRecordBseInfo::clear_has_create_room() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_GameRecordBseInfo::clear_create_room() {
  if (create_room_ != NULL) create_room_->::PROTOBUF::PB_CreateRoom::Clear();
  clear_has_create_room();
}
inline const ::PROTOBUF::PB_CreateRoom& PB_GameRecordBseInfo::create_room() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordBseInfo.create_room)
  return create_room_ != NULL ? *create_room_ : *default_instance_->create_room_;
}
inline ::PROTOBUF::PB_CreateRoom* PB_GameRecordBseInfo::mutable_create_room() {
  set_has_create_room();
  if (create_room_ == NULL) create_room_ = new ::PROTOBUF::PB_CreateRoom;
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_GameRecordBseInfo.create_room)
  return create_room_;
}
inline ::PROTOBUF::PB_CreateRoom* PB_GameRecordBseInfo::release_create_room() {
  clear_has_create_room();
  ::PROTOBUF::PB_CreateRoom* temp = create_room_;
  create_room_ = NULL;
  return temp;
}
inline void PB_GameRecordBseInfo::set_allocated_create_room(::PROTOBUF::PB_CreateRoom* create_room) {
  delete create_room_;
  create_room_ = create_room;
  if (create_room) {
    set_has_create_room();
  } else {
    clear_has_create_room();
  }
  // @@protoc_insertion_point(field_set_allocated:PROTOBUF.PB_GameRecordBseInfo.create_room)
}

// repeated .PROTOBUF.PB_RecordRoleScoreList role_score_list = 4;
inline int PB_GameRecordBseInfo::role_score_list_size() const {
  return role_score_list_.size();
}
inline void PB_GameRecordBseInfo::clear_role_score_list() {
  role_score_list_.Clear();
}
inline const ::PROTOBUF::PB_RecordRoleScoreList& PB_GameRecordBseInfo::role_score_list(int index) const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordBseInfo.role_score_list)
  return role_score_list_.Get(index);
}
inline ::PROTOBUF::PB_RecordRoleScoreList* PB_GameRecordBseInfo::mutable_role_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_GameRecordBseInfo.role_score_list)
  return role_score_list_.Mutable(index);
}
inline ::PROTOBUF::PB_RecordRoleScoreList* PB_GameRecordBseInfo::add_role_score_list() {
  // @@protoc_insertion_point(field_add:PROTOBUF.PB_GameRecordBseInfo.role_score_list)
  return role_score_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScoreList >&
PB_GameRecordBseInfo::role_score_list() const {
  // @@protoc_insertion_point(field_list:PROTOBUF.PB_GameRecordBseInfo.role_score_list)
  return role_score_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PROTOBUF::PB_RecordRoleScoreList >*
PB_GameRecordBseInfo::mutable_role_score_list() {
  // @@protoc_insertion_point(field_mutable_list:PROTOBUF.PB_GameRecordBseInfo.role_score_list)
  return &role_score_list_;
}

// -------------------------------------------------------------------

// PB_GameRecordRoleInfo

// optional uint32 role_id = 1;
inline bool PB_GameRecordRoleInfo::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_GameRecordRoleInfo::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_GameRecordRoleInfo::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_GameRecordRoleInfo::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_GameRecordRoleInfo::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordRoleInfo.role_id)
  return role_id_;
}
inline void PB_GameRecordRoleInfo::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordRoleInfo.role_id)
}

// optional uint32 role_seat = 2;
inline bool PB_GameRecordRoleInfo::has_role_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_GameRecordRoleInfo::set_has_role_seat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_GameRecordRoleInfo::clear_has_role_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_GameRecordRoleInfo::clear_role_seat() {
  role_seat_ = 0u;
  clear_has_role_seat();
}
inline ::google::protobuf::uint32 PB_GameRecordRoleInfo::role_seat() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordRoleInfo.role_seat)
  return role_seat_;
}
inline void PB_GameRecordRoleInfo::set_role_seat(::google::protobuf::uint32 value) {
  set_has_role_seat();
  role_seat_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordRoleInfo.role_seat)
}

// optional int64 score = 3;
inline bool PB_GameRecordRoleInfo::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_GameRecordRoleInfo::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_GameRecordRoleInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_GameRecordRoleInfo::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::int64 PB_GameRecordRoleInfo::score() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordRoleInfo.score)
  return score_;
}
inline void PB_GameRecordRoleInfo::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordRoleInfo.score)
}

// repeated uint32 hand_card = 4;
inline int PB_GameRecordRoleInfo::hand_card_size() const {
  return hand_card_.size();
}
inline void PB_GameRecordRoleInfo::clear_hand_card() {
  hand_card_.Clear();
}
inline ::google::protobuf::uint32 PB_GameRecordRoleInfo::hand_card(int index) const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordRoleInfo.hand_card)
  return hand_card_.Get(index);
}
inline void PB_GameRecordRoleInfo::set_hand_card(int index, ::google::protobuf::uint32 value) {
  hand_card_.Set(index, value);
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordRoleInfo.hand_card)
}
inline void PB_GameRecordRoleInfo::add_hand_card(::google::protobuf::uint32 value) {
  hand_card_.Add(value);
  // @@protoc_insertion_point(field_add:PROTOBUF.PB_GameRecordRoleInfo.hand_card)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PB_GameRecordRoleInfo::hand_card() const {
  // @@protoc_insertion_point(field_list:PROTOBUF.PB_GameRecordRoleInfo.hand_card)
  return hand_card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PB_GameRecordRoleInfo::mutable_hand_card() {
  // @@protoc_insertion_point(field_mutable_list:PROTOBUF.PB_GameRecordRoleInfo.hand_card)
  return &hand_card_;
}

// -------------------------------------------------------------------

// PB_GameRecordShowDown

// optional uint32 role_id = 1;
inline bool PB_GameRecordShowDown::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_GameRecordShowDown::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_GameRecordShowDown::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_GameRecordShowDown::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_GameRecordShowDown::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordShowDown.role_id)
  return role_id_;
}
inline void PB_GameRecordShowDown::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordShowDown.role_id)
}

// optional int64 score = 2;
inline bool PB_GameRecordShowDown::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_GameRecordShowDown::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_GameRecordShowDown::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_GameRecordShowDown::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::int64 PB_GameRecordShowDown::score() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordShowDown.score)
  return score_;
}
inline void PB_GameRecordShowDown::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordShowDown.score)
}

// -------------------------------------------------------------------

// PB_GameRecordNode

// optional uint32 cmd_id = 1;
inline bool PB_GameRecordNode::has_cmd_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_GameRecordNode::set_has_cmd_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_GameRecordNode::clear_has_cmd_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_GameRecordNode::clear_cmd_id() {
  cmd_id_ = 0u;
  clear_has_cmd_id();
}
inline ::google::protobuf::uint32 PB_GameRecordNode::cmd_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.cmd_id)
  return cmd_id_;
}
inline void PB_GameRecordNode::set_cmd_id(::google::protobuf::uint32 value) {
  set_has_cmd_id();
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordNode.cmd_id)
}

// repeated uint32 card_value = 2;
inline int PB_GameRecordNode::card_value_size() const {
  return card_value_.size();
}
inline void PB_GameRecordNode::clear_card_value() {
  card_value_.Clear();
}
inline ::google::protobuf::uint32 PB_GameRecordNode::card_value(int index) const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.card_value)
  return card_value_.Get(index);
}
inline void PB_GameRecordNode::set_card_value(int index, ::google::protobuf::uint32 value) {
  card_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordNode.card_value)
}
inline void PB_GameRecordNode::add_card_value(::google::protobuf::uint32 value) {
  card_value_.Add(value);
  // @@protoc_insertion_point(field_add:PROTOBUF.PB_GameRecordNode.card_value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PB_GameRecordNode::card_value() const {
  // @@protoc_insertion_point(field_list:PROTOBUF.PB_GameRecordNode.card_value)
  return card_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PB_GameRecordNode::mutable_card_value() {
  // @@protoc_insertion_point(field_mutable_list:PROTOBUF.PB_GameRecordNode.card_value)
  return &card_value_;
}

// optional uint32 card_index = 3;
inline bool PB_GameRecordNode::has_card_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_GameRecordNode::set_has_card_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_GameRecordNode::clear_has_card_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_GameRecordNode::clear_card_index() {
  card_index_ = 0u;
  clear_has_card_index();
}
inline ::google::protobuf::uint32 PB_GameRecordNode::card_index() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.card_index)
  return card_index_;
}
inline void PB_GameRecordNode::set_card_index(::google::protobuf::uint32 value) {
  set_has_card_index();
  card_index_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordNode.card_index)
}

// optional uint32 role_id = 4;
inline bool PB_GameRecordNode::has_role_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_GameRecordNode::set_has_role_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_GameRecordNode::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_GameRecordNode::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 PB_GameRecordNode::role_id() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.role_id)
  return role_id_;
}
inline void PB_GameRecordNode::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordNode.role_id)
}

// optional uint32 action_wik = 5;
inline bool PB_GameRecordNode::has_action_wik() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_GameRecordNode::set_has_action_wik() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_GameRecordNode::clear_has_action_wik() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_GameRecordNode::clear_action_wik() {
  action_wik_ = 0u;
  clear_has_action_wik();
}
inline ::google::protobuf::uint32 PB_GameRecordNode::action_wik() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.action_wik)
  return action_wik_;
}
inline void PB_GameRecordNode::set_action_wik(::google::protobuf::uint32 value) {
  set_has_action_wik();
  action_wik_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordNode.action_wik)
}

// optional uint32 param1 = 6;
inline bool PB_GameRecordNode::has_param1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_GameRecordNode::set_has_param1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_GameRecordNode::clear_has_param1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_GameRecordNode::clear_param1() {
  param1_ = 0u;
  clear_has_param1();
}
inline ::google::protobuf::uint32 PB_GameRecordNode::param1() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.param1)
  return param1_;
}
inline void PB_GameRecordNode::set_param1(::google::protobuf::uint32 value) {
  set_has_param1();
  param1_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordNode.param1)
}

// optional uint32 param2 = 7;
inline bool PB_GameRecordNode::has_param2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_GameRecordNode::set_has_param2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_GameRecordNode::clear_has_param2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_GameRecordNode::clear_param2() {
  param2_ = 0u;
  clear_has_param2();
}
inline ::google::protobuf::uint32 PB_GameRecordNode::param2() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.param2)
  return param2_;
}
inline void PB_GameRecordNode::set_param2(::google::protobuf::uint32 value) {
  set_has_param2();
  param2_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordNode.param2)
}

// optional uint32 param3 = 8;
inline bool PB_GameRecordNode::has_param3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_GameRecordNode::set_has_param3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_GameRecordNode::clear_has_param3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_GameRecordNode::clear_param3() {
  param3_ = 0u;
  clear_has_param3();
}
inline ::google::protobuf::uint32 PB_GameRecordNode::param3() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.param3)
  return param3_;
}
inline void PB_GameRecordNode::set_param3(::google::protobuf::uint32 value) {
  set_has_param3();
  param3_ = value;
  // @@protoc_insertion_point(field_set:PROTOBUF.PB_GameRecordNode.param3)
}

// optional .PROTOBUF.PB_GameRecordRoleInfo role_info = 9;
inline bool PB_GameRecordNode::has_role_info() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PB_GameRecordNode::set_has_role_info() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PB_GameRecordNode::clear_has_role_info() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PB_GameRecordNode::clear_role_info() {
  if (role_info_ != NULL) role_info_->::PROTOBUF::PB_GameRecordRoleInfo::Clear();
  clear_has_role_info();
}
inline const ::PROTOBUF::PB_GameRecordRoleInfo& PB_GameRecordNode::role_info() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.role_info)
  return role_info_ != NULL ? *role_info_ : *default_instance_->role_info_;
}
inline ::PROTOBUF::PB_GameRecordRoleInfo* PB_GameRecordNode::mutable_role_info() {
  set_has_role_info();
  if (role_info_ == NULL) role_info_ = new ::PROTOBUF::PB_GameRecordRoleInfo;
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_GameRecordNode.role_info)
  return role_info_;
}
inline ::PROTOBUF::PB_GameRecordRoleInfo* PB_GameRecordNode::release_role_info() {
  clear_has_role_info();
  ::PROTOBUF::PB_GameRecordRoleInfo* temp = role_info_;
  role_info_ = NULL;
  return temp;
}
inline void PB_GameRecordNode::set_allocated_role_info(::PROTOBUF::PB_GameRecordRoleInfo* role_info) {
  delete role_info_;
  role_info_ = role_info;
  if (role_info) {
    set_has_role_info();
  } else {
    clear_has_role_info();
  }
  // @@protoc_insertion_point(field_set_allocated:PROTOBUF.PB_GameRecordNode.role_info)
}

// optional .PROTOBUF.PB_CreateRoom room_info = 10;
inline bool PB_GameRecordNode::has_room_info() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PB_GameRecordNode::set_has_room_info() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PB_GameRecordNode::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PB_GameRecordNode::clear_room_info() {
  if (room_info_ != NULL) room_info_->::PROTOBUF::PB_CreateRoom::Clear();
  clear_has_room_info();
}
inline const ::PROTOBUF::PB_CreateRoom& PB_GameRecordNode::room_info() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.room_info)
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::PROTOBUF::PB_CreateRoom* PB_GameRecordNode::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) room_info_ = new ::PROTOBUF::PB_CreateRoom;
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_GameRecordNode.room_info)
  return room_info_;
}
inline ::PROTOBUF::PB_CreateRoom* PB_GameRecordNode::release_room_info() {
  clear_has_room_info();
  ::PROTOBUF::PB_CreateRoom* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void PB_GameRecordNode::set_allocated_room_info(::PROTOBUF::PB_CreateRoom* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:PROTOBUF.PB_GameRecordNode.room_info)
}

// optional .PROTOBUF.PB_GameRecordShowDown showdown_info = 11;
inline bool PB_GameRecordNode::has_showdown_info() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PB_GameRecordNode::set_has_showdown_info() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PB_GameRecordNode::clear_has_showdown_info() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PB_GameRecordNode::clear_showdown_info() {
  if (showdown_info_ != NULL) showdown_info_->::PROTOBUF::PB_GameRecordShowDown::Clear();
  clear_has_showdown_info();
}
inline const ::PROTOBUF::PB_GameRecordShowDown& PB_GameRecordNode::showdown_info() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.showdown_info)
  return showdown_info_ != NULL ? *showdown_info_ : *default_instance_->showdown_info_;
}
inline ::PROTOBUF::PB_GameRecordShowDown* PB_GameRecordNode::mutable_showdown_info() {
  set_has_showdown_info();
  if (showdown_info_ == NULL) showdown_info_ = new ::PROTOBUF::PB_GameRecordShowDown;
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_GameRecordNode.showdown_info)
  return showdown_info_;
}
inline ::PROTOBUF::PB_GameRecordShowDown* PB_GameRecordNode::release_showdown_info() {
  clear_has_showdown_info();
  ::PROTOBUF::PB_GameRecordShowDown* temp = showdown_info_;
  showdown_info_ = NULL;
  return temp;
}
inline void PB_GameRecordNode::set_allocated_showdown_info(::PROTOBUF::PB_GameRecordShowDown* showdown_info) {
  delete showdown_info_;
  showdown_info_ = showdown_info;
  if (showdown_info) {
    set_has_showdown_info();
  } else {
    clear_has_showdown_info();
  }
  // @@protoc_insertion_point(field_set_allocated:PROTOBUF.PB_GameRecordNode.showdown_info)
}

// optional .PROTOBUF.PB_GameRecordNode next_node = 12;
inline bool PB_GameRecordNode::has_next_node() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PB_GameRecordNode::set_has_next_node() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PB_GameRecordNode::clear_has_next_node() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PB_GameRecordNode::clear_next_node() {
  if (next_node_ != NULL) next_node_->::PROTOBUF::PB_GameRecordNode::Clear();
  clear_has_next_node();
}
inline const ::PROTOBUF::PB_GameRecordNode& PB_GameRecordNode::next_node() const {
  // @@protoc_insertion_point(field_get:PROTOBUF.PB_GameRecordNode.next_node)
  return next_node_ != NULL ? *next_node_ : *default_instance_->next_node_;
}
inline ::PROTOBUF::PB_GameRecordNode* PB_GameRecordNode::mutable_next_node() {
  set_has_next_node();
  if (next_node_ == NULL) next_node_ = new ::PROTOBUF::PB_GameRecordNode;
  // @@protoc_insertion_point(field_mutable:PROTOBUF.PB_GameRecordNode.next_node)
  return next_node_;
}
inline ::PROTOBUF::PB_GameRecordNode* PB_GameRecordNode::release_next_node() {
  clear_has_next_node();
  ::PROTOBUF::PB_GameRecordNode* temp = next_node_;
  next_node_ = NULL;
  return temp;
}
inline void PB_GameRecordNode::set_allocated_next_node(::PROTOBUF::PB_GameRecordNode* next_node) {
  delete next_node_;
  next_node_ = next_node;
  if (next_node) {
    set_has_next_node();
  } else {
    clear_has_next_node();
  }
  // @@protoc_insertion_point(field_set_allocated:PROTOBUF.PB_GameRecordNode.next_node)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PROTOBUF

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5froom_2eproto__INCLUDED
