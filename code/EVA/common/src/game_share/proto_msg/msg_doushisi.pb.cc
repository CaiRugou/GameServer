// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_doushisi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_doushisi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MsgDouShiSiUserOperate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiUserOperate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiMendFlower_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiMendFlower_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiFanPai_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiFanPai_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiUserAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiUserAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiUserPower_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiUserPower_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiListen_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiListen_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiOutCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiOutCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiRoleScore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiRoleScore_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiCardData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiCardData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiPrivateRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiPrivateRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiWeaveCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiWeaveCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiFlowerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiFlowerData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiShowDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiShowDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiShowDownEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiShowDownEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiShowDownCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiShowDownCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiRoleState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiRoleState_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiRoleStateCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiRoleStateCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiRoleHost_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiRoleHost_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiRoleHostCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiRoleHostCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiRoomShowDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiRoomShowDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDouShiSiGameOverInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDouShiSiGameOverInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TDouShiSiRoleState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TDouShiSiShowDownEvent_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TDouShiSiASK_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TDouShiSiDirection_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TDouShiSiState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TDouShiSiBarState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fdoushisi_2eproto() {
  protobuf_AddDesc_msg_5fdoushisi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_doushisi.proto");
  GOOGLE_CHECK(file != NULL);
  MsgDouShiSiUserOperate_descriptor_ = file->message_type(0);
  static const int MsgDouShiSiUserOperate_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserOperate, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserOperate, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserOperate, tou_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserOperate, eat_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserOperate, bar_card_),
  };
  MsgDouShiSiUserOperate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiUserOperate_descriptor_,
      MsgDouShiSiUserOperate::default_instance_,
      MsgDouShiSiUserOperate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserOperate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserOperate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiUserOperate));
  MsgDouShiSiMendFlower_descriptor_ = file->message_type(1);
  static const int MsgDouShiSiMendFlower_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiMendFlower, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiMendFlower, handcard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiMendFlower, hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiMendFlower, flower_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiMendFlower, surplus_hand_num_),
  };
  MsgDouShiSiMendFlower_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiMendFlower_descriptor_,
      MsgDouShiSiMendFlower::default_instance_,
      MsgDouShiSiMendFlower_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiMendFlower, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiMendFlower, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiMendFlower));
  MsgDouShiSiFanPai_descriptor_ = file->message_type(2);
  static const int MsgDouShiSiFanPai_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFanPai, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFanPai, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFanPai, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFanPai, surplus_hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFanPai, gang_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFanPai, eat_card_),
  };
  MsgDouShiSiFanPai_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiFanPai_descriptor_,
      MsgDouShiSiFanPai::default_instance_,
      MsgDouShiSiFanPai_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFanPai, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFanPai, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiFanPai));
  MsgDouShiSiUserAction_descriptor_ = file->message_type(3);
  static const int MsgDouShiSiUserAction_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, room_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, last_room_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, flower_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, gang_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, tou_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, surplus_hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, hand_num_),
  };
  MsgDouShiSiUserAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiUserAction_descriptor_,
      MsgDouShiSiUserAction::default_instance_,
      MsgDouShiSiUserAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiUserAction));
  MsgDouShiSiUserPower_descriptor_ = file->message_type(4);
  static const int MsgDouShiSiUserPower_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserPower, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserPower, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserPower, room_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserPower, gang_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserPower, tou_card_),
  };
  MsgDouShiSiUserPower_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiUserPower_descriptor_,
      MsgDouShiSiUserPower::default_instance_,
      MsgDouShiSiUserPower_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserPower, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiUserPower, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiUserPower));
  MsgDouShiSiListen_descriptor_ = file->message_type(5);
  static const int MsgDouShiSiListen_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiListen, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiListen, state_),
  };
  MsgDouShiSiListen_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiListen_descriptor_,
      MsgDouShiSiListen::default_instance_,
      MsgDouShiSiListen_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiListen, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiListen, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiListen));
  MsgDouShiSiOutCard_descriptor_ = file->message_type(6);
  static const int MsgDouShiSiOutCard_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiOutCard, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiOutCard, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiOutCard, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiOutCard, hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiOutCard, hand_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiOutCard, role_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiOutCard, river_num_),
  };
  MsgDouShiSiOutCard_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiOutCard_descriptor_,
      MsgDouShiSiOutCard::default_instance_,
      MsgDouShiSiOutCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiOutCard, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiOutCard, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiOutCard));
  MsgDouShiSiRoleScore_descriptor_ = file->message_type(7);
  static const int MsgDouShiSiRoleScore_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleScore, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleScore, score_),
  };
  MsgDouShiSiRoleScore_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiRoleScore_descriptor_,
      MsgDouShiSiRoleScore::default_instance_,
      MsgDouShiSiRoleScore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleScore, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleScore, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiRoleScore));
  MsgDouShiSiCardData_descriptor_ = file->message_type(8);
  static const int MsgDouShiSiCardData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiCardData, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiCardData, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiCardData, tarid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiCardData, srcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiCardData, barkind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiCardData, card_list_),
  };
  MsgDouShiSiCardData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiCardData_descriptor_,
      MsgDouShiSiCardData::default_instance_,
      MsgDouShiSiCardData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiCardData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiCardData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiCardData));
  MsgDouShiSiPlayer_descriptor_ = file->message_type(9);
  static const int MsgDouShiSiPlayer_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, player_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, river_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, weave_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, flower_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, td_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, mend_handcard_),
  };
  MsgDouShiSiPlayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiPlayer_descriptor_,
      MsgDouShiSiPlayer::default_instance_,
      MsgDouShiSiPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPlayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiPlayer));
  MsgDouShiSiRoom_descriptor_ = file->message_type(10);
  static const int MsgDouShiSiRoom_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, room_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, player_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, banker_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, action_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, hand_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, surplus_hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, send_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, room_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, game_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, state_run_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, private_room_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, game_circle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, out_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, param_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, gang_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, tou_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, eat_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, show_down_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, role_host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, role_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, wik_),
  };
  MsgDouShiSiRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiRoom_descriptor_,
      MsgDouShiSiRoom::default_instance_,
      MsgDouShiSiRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiRoom));
  MsgDouShiSiPrivateRoom_descriptor_ = file->message_type(11);
  static const int MsgDouShiSiPrivateRoom_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPrivateRoom, special_kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPrivateRoom, consume_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPrivateRoom, score_),
  };
  MsgDouShiSiPrivateRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiPrivateRoom_descriptor_,
      MsgDouShiSiPrivateRoom::default_instance_,
      MsgDouShiSiPrivateRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPrivateRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiPrivateRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiPrivateRoom));
  MsgDouShiSiWeaveCard_descriptor_ = file->message_type(12);
  static const int MsgDouShiSiWeaveCard_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiWeaveCard, carddata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiWeaveCard, hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiWeaveCard, hand_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiWeaveCard, role_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiWeaveCard, player_list_),
  };
  MsgDouShiSiWeaveCard_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiWeaveCard_descriptor_,
      MsgDouShiSiWeaveCard::default_instance_,
      MsgDouShiSiWeaveCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiWeaveCard, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiWeaveCard, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiWeaveCard));
  MsgDouShiSiFlowerData_descriptor_ = file->message_type(13);
  static const int MsgDouShiSiFlowerData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFlowerData, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFlowerData, card_),
  };
  MsgDouShiSiFlowerData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiFlowerData_descriptor_,
      MsgDouShiSiFlowerData::default_instance_,
      MsgDouShiSiFlowerData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFlowerData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiFlowerData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiFlowerData));
  MsgDouShiSiShowDown_descriptor_ = file->message_type(14);
  static const int MsgDouShiSiShowDown_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, hukind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, hand_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, hard_flower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, mild_flower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, baota_flower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, hu_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, total_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, pack_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, total_pack_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, event_count_),
  };
  MsgDouShiSiShowDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiShowDown_descriptor_,
      MsgDouShiSiShowDown::default_instance_,
      MsgDouShiSiShowDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiShowDown));
  MsgDouShiSiShowDownEvent_descriptor_ = file->message_type(15);
  static const int MsgDouShiSiShowDownEvent_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownEvent, event_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownEvent, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownEvent, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownEvent, score_count_),
  };
  MsgDouShiSiShowDownEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiShowDownEvent_descriptor_,
      MsgDouShiSiShowDownEvent::default_instance_,
      MsgDouShiSiShowDownEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiShowDownEvent));
  MsgDouShiSiShowDownCount_descriptor_ = file->message_type(16);
  static const int MsgDouShiSiShowDownCount_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, showdown_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, room_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, game_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, game_over_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, other_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, other_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, hu_state_),
  };
  MsgDouShiSiShowDownCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiShowDownCount_descriptor_,
      MsgDouShiSiShowDownCount::default_instance_,
      MsgDouShiSiShowDownCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiShowDownCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiShowDownCount));
  MsgDouShiSiRoleState_descriptor_ = file->message_type(17);
  static const int MsgDouShiSiRoleState_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleState, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleState, state_),
  };
  MsgDouShiSiRoleState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiRoleState_descriptor_,
      MsgDouShiSiRoleState::default_instance_,
      MsgDouShiSiRoleState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiRoleState));
  MsgDouShiSiRoleStateCount_descriptor_ = file->message_type(18);
  static const int MsgDouShiSiRoleStateCount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleStateCount, role_state_),
  };
  MsgDouShiSiRoleStateCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiRoleStateCount_descriptor_,
      MsgDouShiSiRoleStateCount::default_instance_,
      MsgDouShiSiRoleStateCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleStateCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleStateCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiRoleStateCount));
  MsgDouShiSiRoleHost_descriptor_ = file->message_type(19);
  static const int MsgDouShiSiRoleHost_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleHost, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleHost, host_id_),
  };
  MsgDouShiSiRoleHost_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiRoleHost_descriptor_,
      MsgDouShiSiRoleHost::default_instance_,
      MsgDouShiSiRoleHost_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleHost, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleHost, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiRoleHost));
  MsgDouShiSiRoleHostCount_descriptor_ = file->message_type(20);
  static const int MsgDouShiSiRoleHostCount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleHostCount, role_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleHostCount, host_list_),
  };
  MsgDouShiSiRoleHostCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiRoleHostCount_descriptor_,
      MsgDouShiSiRoleHostCount::default_instance_,
      MsgDouShiSiRoleHostCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleHostCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoleHostCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiRoleHostCount));
  MsgDouShiSiRoomShowDown_descriptor_ = file->message_type(21);
  static const int MsgDouShiSiRoomShowDown_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoomShowDown, room_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoomShowDown, state_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoomShowDown, player_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoomShowDown, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoomShowDown, game_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoomShowDown, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoomShowDown, over_info_),
  };
  MsgDouShiSiRoomShowDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiRoomShowDown_descriptor_,
      MsgDouShiSiRoomShowDown::default_instance_,
      MsgDouShiSiRoomShowDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoomShowDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiRoomShowDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiRoomShowDown));
  MsgDouShiSiGameOverInfo_descriptor_ = file->message_type(22);
  static const int MsgDouShiSiGameOverInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiGameOverInfo, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiGameOverInfo, max_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiGameOverInfo, zhadan_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiGameOverInfo, win_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiGameOverInfo, lose_count_),
  };
  MsgDouShiSiGameOverInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDouShiSiGameOverInfo_descriptor_,
      MsgDouShiSiGameOverInfo::default_instance_,
      MsgDouShiSiGameOverInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiGameOverInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDouShiSiGameOverInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDouShiSiGameOverInfo));
  TDouShiSiRoleState_descriptor_ = file->enum_type(0);
  TDouShiSiShowDownEvent_descriptor_ = file->enum_type(1);
  TDouShiSiASK_descriptor_ = file->enum_type(2);
  TDouShiSiDirection_descriptor_ = file->enum_type(3);
  TDouShiSiState_descriptor_ = file->enum_type(4);
  TDouShiSiBarState_descriptor_ = file->enum_type(5);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fdoushisi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiUserOperate_descriptor_, &MsgDouShiSiUserOperate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiMendFlower_descriptor_, &MsgDouShiSiMendFlower::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiFanPai_descriptor_, &MsgDouShiSiFanPai::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiUserAction_descriptor_, &MsgDouShiSiUserAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiUserPower_descriptor_, &MsgDouShiSiUserPower::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiListen_descriptor_, &MsgDouShiSiListen::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiOutCard_descriptor_, &MsgDouShiSiOutCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiRoleScore_descriptor_, &MsgDouShiSiRoleScore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiCardData_descriptor_, &MsgDouShiSiCardData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiPlayer_descriptor_, &MsgDouShiSiPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiRoom_descriptor_, &MsgDouShiSiRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiPrivateRoom_descriptor_, &MsgDouShiSiPrivateRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiWeaveCard_descriptor_, &MsgDouShiSiWeaveCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiFlowerData_descriptor_, &MsgDouShiSiFlowerData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiShowDown_descriptor_, &MsgDouShiSiShowDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiShowDownEvent_descriptor_, &MsgDouShiSiShowDownEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiShowDownCount_descriptor_, &MsgDouShiSiShowDownCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiRoleState_descriptor_, &MsgDouShiSiRoleState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiRoleStateCount_descriptor_, &MsgDouShiSiRoleStateCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiRoleHost_descriptor_, &MsgDouShiSiRoleHost::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiRoleHostCount_descriptor_, &MsgDouShiSiRoleHostCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiRoomShowDown_descriptor_, &MsgDouShiSiRoomShowDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDouShiSiGameOverInfo_descriptor_, &MsgDouShiSiGameOverInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fdoushisi_2eproto() {
  delete MsgDouShiSiUserOperate::default_instance_;
  delete MsgDouShiSiUserOperate_reflection_;
  delete MsgDouShiSiMendFlower::default_instance_;
  delete MsgDouShiSiMendFlower_reflection_;
  delete MsgDouShiSiFanPai::default_instance_;
  delete MsgDouShiSiFanPai_reflection_;
  delete MsgDouShiSiUserAction::default_instance_;
  delete MsgDouShiSiUserAction_reflection_;
  delete MsgDouShiSiUserPower::default_instance_;
  delete MsgDouShiSiUserPower_reflection_;
  delete MsgDouShiSiListen::default_instance_;
  delete MsgDouShiSiListen_reflection_;
  delete MsgDouShiSiOutCard::default_instance_;
  delete MsgDouShiSiOutCard_reflection_;
  delete MsgDouShiSiRoleScore::default_instance_;
  delete MsgDouShiSiRoleScore_reflection_;
  delete MsgDouShiSiCardData::default_instance_;
  delete MsgDouShiSiCardData_reflection_;
  delete MsgDouShiSiPlayer::default_instance_;
  delete MsgDouShiSiPlayer_reflection_;
  delete MsgDouShiSiRoom::default_instance_;
  delete MsgDouShiSiRoom_reflection_;
  delete MsgDouShiSiPrivateRoom::default_instance_;
  delete MsgDouShiSiPrivateRoom_reflection_;
  delete MsgDouShiSiWeaveCard::default_instance_;
  delete MsgDouShiSiWeaveCard_reflection_;
  delete MsgDouShiSiFlowerData::default_instance_;
  delete MsgDouShiSiFlowerData_reflection_;
  delete MsgDouShiSiShowDown::default_instance_;
  delete MsgDouShiSiShowDown_reflection_;
  delete MsgDouShiSiShowDownEvent::default_instance_;
  delete MsgDouShiSiShowDownEvent_reflection_;
  delete MsgDouShiSiShowDownCount::default_instance_;
  delete MsgDouShiSiShowDownCount_reflection_;
  delete MsgDouShiSiRoleState::default_instance_;
  delete MsgDouShiSiRoleState_reflection_;
  delete MsgDouShiSiRoleStateCount::default_instance_;
  delete MsgDouShiSiRoleStateCount_reflection_;
  delete MsgDouShiSiRoleHost::default_instance_;
  delete MsgDouShiSiRoleHost_reflection_;
  delete MsgDouShiSiRoleHostCount::default_instance_;
  delete MsgDouShiSiRoleHostCount_reflection_;
  delete MsgDouShiSiRoomShowDown::default_instance_;
  delete MsgDouShiSiRoomShowDown_reflection_;
  delete MsgDouShiSiGameOverInfo::default_instance_;
  delete MsgDouShiSiGameOverInfo_reflection_;
}

void protobuf_AddDesc_msg_5fdoushisi_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_public_5fpro_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022msg_doushisi.proto\032\020public_pro.proto\"i"
    "\n\026MsgDouShiSiUserOperate\022\013\n\003wik\030\001 \001(\r\022\014\n"
    "\004card\030\002 \001(\r\022\020\n\010tou_card\030\003 \003(\r\022\020\n\010eat_car"
    "d\030\004 \003(\r\022\020\n\010bar_card\030\005 \003(\r\"u\n\025MsgDouShiSi"
    "MendFlower\022\n\n\002id\030\001 \001(\004\022\020\n\010handcard\030\002 \003(\r"
    "\022\020\n\010hand_num\030\003 \001(\r\022\022\n\nflower_num\030\004 \001(\r\022\030"
    "\n\020surplus_hand_num\030\005 \001(\r\"y\n\021MsgDouShiSiF"
    "anPai\022\n\n\002id\030\001 \001(\004\022\014\n\004card\030\002 \001(\r\022\013\n\003wik\030\003"
    " \001(\r\022\030\n\020surplus_hand_num\030\004 \001(\r\022\021\n\tgang_c"
    "ard\030\005 \003(\r\022\020\n\010eat_card\030\006 \003(\r\"\362\001\n\025MsgDouSh"
    "iSiUserAction\022\n\n\002id\030\001 \001(\004\022#\n\nroom_state\030"
    "\002 \001(\0162\017.TDouShiSiState\022(\n\017last_room_stat"
    "e\030\003 \001(\0162\017.TDouShiSiState\022\014\n\004card\030\004 \001(\r\022\022"
    "\n\nflower_num\030\005 \001(\r\022\013\n\003wik\030\006 \001(\r\022\021\n\tgang_"
    "card\030\007 \003(\r\022\020\n\010tou_card\030\010 \003(\r\022\030\n\020surplus_"
    "hand_num\030\t \001(\r\022\020\n\010hand_num\030\n \001(\r\"y\n\024MsgD"
    "ouShiSiUserPower\022\n\n\002id\030\001 \001(\004\022\013\n\003wik\030\002 \001("
    "\r\022#\n\nroom_state\030\003 \001(\0162\017.TDouShiSiState\022\021"
    "\n\tgang_card\030\004 \003(\r\022\020\n\010tou_card\030\005 \003(\r\".\n\021M"
    "sgDouShiSiListen\022\n\n\002id\030\001 \001(\004\022\r\n\005state\030\002 "
    "\001(\r\"\211\001\n\022MsgDouShiSiOutCard\022\n\n\002id\030\001 \001(\004\022\014"
    "\n\004card\030\002 \001(\r\022\r\n\005index\030\003 \001(\005\022\020\n\010hand_num\030"
    "\004 \001(\r\022\021\n\thand_card\030\005 \003(\r\022\022\n\nrole_state\030\006"
    " \001(\r\022\021\n\triver_num\030\007 \001(\r\"1\n\024MsgDouShiSiRo"
    "leScore\022\n\n\002id\030\001 \001(\004\022\r\n\005score\030\002 \001(\003\"r\n\023Ms"
    "gDouShiSiCardData\022\014\n\004card\030\001 \001(\r\022\013\n\003wik\030\002"
    " \001(\r\022\r\n\005tarid\030\003 \001(\004\022\r\n\005srcid\030\004 \001(\004\022\017\n\007ba"
    "rkind\030\005 \001(\r\022\021\n\tcard_list\030\006 \003(\r\"\360\001\n\021MsgDo"
    "uShiSiPlayer\022#\n\013player_info\030\001 \001(\0132\016.MsgP"
    "layerInfo\022\r\n\005state\030\002 \001(\r\022\020\n\010hand_num\030\003 \001"
    "(\r\022\022\n\nriver_card\030\004 \003(\r\022(\n\nweave_card\030\005 \003"
    "(\0132\024.MsgDouShiSiCardData\022\022\n\nflower_num\030\006"
    " \001(\r\022\013\n\003wik\030\007 \001(\r\022\037\n\002td\030\010 \001(\0162\023.TDouShiS"
    "iDirection\022\025\n\rmend_handcard\030\t \003(\r\"\342\004\n\017Ms"
    "gDouShiSiRoom\022#\n\nroom_state\030\001 \001(\0162\017.TDou"
    "ShiSiState\022\'\n\013player_list\030\002 \003(\0132\022.MsgDou"
    "ShiSiPlayer\022\021\n\tbanker_id\030\003 \001(\004\022\021\n\taction"
    "_id\030\004 \001(\004\022\021\n\thand_card\030\005 \003(\r\022\030\n\020surplus_"
    "hand_num\030\006 \001(\r\022\021\n\tsend_card\030\007 \001(\r\022\017\n\007roo"
    "m_id\030\010 \001(\004\022\021\n\troom_type\030\t \001(\t\022\022\n\ngame_co"
    "unt\030\n \001(\r\022\026\n\016state_run_time\030\013 \001(\r\022+\n\014pri"
    "vate_room\030\014 \001(\0132\025.MsgCreatePrivateRoom\022\023"
    "\n\013game_circle\030\r \001(\r\022\020\n\010out_card\030\016 \001(\r\022\016\n"
    "\006param1\030\017 \001(\r\022\022\n\nparam_list\030\020 \003(\r\022\021\n\tgan"
    "g_card\030\021 \003(\r\022\020\n\010tou_card\030\022 \003(\r\022\020\n\010eat_ca"
    "rd\030\023 \003(\r\0221\n\016show_down_info\030\024 \001(\0132\031.MsgDo"
    "uShiSiShowDownCount\022,\n\trole_host\030\025 \001(\0132\031"
    ".MsgDouShiSiRoleHostCount\022.\n\nrole_state\030"
    "\026 \001(\0132\032.MsgDouShiSiRoleStateCount\022\013\n\003wik"
    "\030\027 \001(\r\"Q\n\026MsgDouShiSiPrivateRoom\022\024\n\014spec"
    "ial_kind\030\001 \001(\r\022\022\n\nconsume_id\030\002 \001(\r\022\r\n\005sc"
    "ore\030\003 \001(\r\"\267\001\n\024MsgDouShiSiWeaveCard\022&\n\010ca"
    "rddata\030\001 \003(\0132\024.MsgDouShiSiCardData\022\020\n\010ha"
    "nd_num\030\002 \001(\r\022\021\n\thand_card\030\003 \003(\r\022)\n\nrole_"
    "score\030\004 \003(\0132\025.MsgDouShiSiRoleScore\022\'\n\013pl"
    "ayer_list\030\005 \003(\0132\022.MsgDouShiSiPlayer\"5\n\025M"
    "sgDouShiSiFlowerData\022\016\n\006roleid\030\001 \001(\004\022\014\n\004"
    "card\030\002 \003(\r\"\233\002\n\023MsgDouShiSiShowDown\022\016\n\006ro"
    "leid\030\001 \001(\004\022\r\n\005money\030\002 \001(\003\022\016\n\006hukind\030\003 \001("
    "\r\022\021\n\thand_card\030\004 \003(\r\022\023\n\013hard_flower\030\005 \001("
    "\r\022\023\n\013mild_flower\030\006 \001(\r\022\024\n\014baota_flower\030\007"
    " \001(\r\022\017\n\007hu_card\030\010 \001(\r\022\023\n\013total_money\030\t \001"
    "(\003\022\022\n\npack_score\030\n \001(\003\022\030\n\020total_pack_sco"
    "re\030\013 \001(\003\022.\n\013event_count\030\014 \003(\0132\031.MsgDouSh"
    "iSiShowDownEvent\"_\n\030MsgDouShiSiShowDownE"
    "vent\022\020\n\010event_id\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\022\r\n"
    "\005score\030\003 \003(\005\022\023\n\013score_count\030\004 \003(\r\"\354\001\n\030Ms"
    "gDouShiSiShowDownCount\022+\n\rshowdown_list\030"
    "\001 \003(\0132\024.MsgDouShiSiShowDown\022#\n\nroom_stat"
    "e\030\002 \001(\0162\017.TDouShiSiState\022\022\n\ngame_count\030\003"
    " \001(\r\022\021\n\tgame_over\030\004 \001(\010\022\022\n\nother_card\030\005 "
    "\003(\r\022\023\n\013other_count\030\006 \001(\r\022\014\n\004time\030\007 \001(\r\022\016"
    "\n\006param1\030\010 \001(\r\022\020\n\010hu_state\030\t \001(\r\"6\n\024MsgD"
    "ouShiSiRoleState\022\017\n\007role_id\030\001 \001(\004\022\r\n\005sta"
    "te\030\002 \001(\r\"F\n\031MsgDouShiSiRoleStateCount\022)\n"
    "\nrole_state\030\001 \003(\0132\025.MsgDouShiSiRoleState"
    "\"7\n\023MsgDouShiSiRoleHost\022\017\n\007role_id\030\001 \001(\004"
    "\022\017\n\007host_id\030\002 \001(\r\"W\n\030MsgDouShiSiRoleHost"
    "Count\022\022\n\nrole_state\030\001 \001(\r\022\'\n\thost_list\030\002"
    " \003(\0132\024.MsgDouShiSiRoleHost\"\333\001\n\027MsgDouShi"
    "SiRoomShowDown\022#\n\nroom_state\030\001 \001(\0162\017.TDo"
    "uShiSiState\022\022\n\nstate_time\030\002 \001(\r\022\'\n\013playe"
    "r_list\030\003 \003(\0132\022.MsgDouShiSiPlayer\022\017\n\007room"
    "_id\030\004 \001(\004\022\022\n\ngame_count\030\005 \001(\r\022\014\n\004time\030\006 "
    "\001(\r\022+\n\tover_info\030\007 \003(\0132\030.MsgDouShiSiGame"
    "OverInfo\"z\n\027MsgDouShiSiGameOverInfo\022\017\n\007r"
    "ole_id\030\001 \001(\004\022\021\n\tmax_score\030\002 \001(\003\022\024\n\014zhada"
    "n_count\030\003 \001(\r\022\021\n\twin_count\030\004 \001(\r\022\022\n\nlose"
    "_count\030\005 \001(\r*\224\002\n\022TDouShiSiRoleState\022\023\n\017S"
    "TATE_DSS_READY\020\001\022\024\n\020STATE_DSS_LISTEN\020\002\022\023"
    "\n\017STATE_DSS_TRUST\020\004\022\025\n\021STATE_DSS_NEWROLE"
    "\020\010\022\030\n\024STATE_DSS_ROOM_OWNER\020\020\022\023\n\017STATE_DS"
    "S_LEAVE\020 \022\025\n\021STATE_DSS_RELIEVE\020@\022\024\n\017STAT"
    "E_DSS_LIMIT\020\200\001\022\026\n\021STATE_DSS_OFFLINE\020\200\002\022\026"
    "\n\021STATE_DSS_MINGLOU\020\200\004\022\033\n\026STATE_DSS_CONT"
    "IUE_GAME\020\200\010*\365\002\n\026TDouShiSiShowDownEvent\022\024"
    "\n\020EVENT_DSS_XIAOHU\020\001\022\023\n\017EVENT_DSS_SIDUI\020"
    "\002\022\023\n\017EVENT_DSS_HEIHU\020\003\022\024\n\020EVENT_DSS_HONG"
    "HU\020\004\022\027\n\023EVENT_DSS_TUOGOUFAN\020\005\022\026\n\022EVENT_D"
    "SS_JINERSHI\020\006\022\032\n\026EVENT_DSS_GANGSHANGHUA\020"
    "\007\022\032\n\026EVENT_DSS_PENGSHANGHUA\020\010\022\024\n\020EVENT_D"
    "SS_TIANHU\020\t\022\025\n\021EVENT_DSS_BAOJIAO\020\n\022\022\n\016EV"
    "ENT_DSS_PENG\020\013\022\022\n\016EVENT_DSS_GANG\020\014\022\022\n\016EV"
    "ENT_DSS_WANG\020\r\022\032\n\026EVENT_DSS_HONGHU_WUSHI"
    "\020\016\022\027\n\023EVENT_DSS_HEI_WUSHI\020\017*\300\001\n\014TDouShiS"
    "iASK\022\020\n\014ASK_DSS_NULL\020\000\022\017\n\013ASK_DSS_EAT\020\001\022"
    "\020\n\014ASK_DSS_PENG\020\002\022\020\n\014ASK_DSS_GANG\020\004\022\022\n\016A"
    "SK_DSS_LISTEN\020\010\022\021\n\rASK_DSS_CHIHU\020\020\022\023\n\017AS"
    "K_DSS_MINGLOU\020 \022\022\n\016ASK_DSS_TOUPAI\020@\022\031\n\024A"
    "SK_DSS_AUTH_SUCCEED\020\200\001*e\n\022TDouShiSiDirec"
    "tion\022\017\n\013DT_DSS_NULL\020\000\022\017\n\013DT_DSS_DONG\020\001\022\016"
    "\n\nDT_DSS_NAN\020\002\022\r\n\tDT_DSS_XI\020\003\022\016\n\nDT_DSS_"
    "BEI\020\004*\352\006\n\016TDouShiSiState\022\026\n\022TDouShiSiSta"
    "teWait\020\000\022 \n\034TDouShiSiStateCheckStartGame"
    "\020\001\022\033\n\027TDouShiSiStateStartGame\020\002\022\034\n\030TDouS"
    "hiSiStateMakeBanKer\020\003\022 \n\034TDouShiSiStateS"
    "endFirstBrand\020\004\022 \n\034TDouShiSiStateHandMen"
    "dFlower\020\005\022\030\n\024TDouShiSiStateTouPai\020\006\022\036\n\032T"
    "DouShiSiStateTouPaiFinish\020\007\022!\n\035TDouShiSi"
    "StateAholdMendFlower\020\010\022\030\n\024TDouShiSiState"
    "Action\020\t\022\032\n\026TDouShiSiStateShowdown\020\n\022\031\n\025"
    "TDouShiSiStateOutCard\020\013\022\034\n\030TDouShiSiStat"
    "eUserChoice\020\014\022\034\n\030TDouShiSiStateSelfChoic"
    "e\020\r\022\033\n\027TDouShiSiStateTouchCard\020\016\022\031\n\025TDou"
    "ShiSiStateBarCard\020\017\022\031\n\025TDouShiSiStateEat"
    "Card\020\020\022!\n\035TDouShiSiStateTouchCardFinish\020"
    "\021\022\037\n\033TDouShiSiStateBarCardFinish\020\022\022\037\n\033TD"
    "ouShiSiStateEatCardFinish\020\023\022\033\n\027TDouShiSi"
    "StateDianPaoHu\020\024\022\030\n\024TDouShiSiStateZiMoHu"
    "\020\025\022\031\n\025TDouShiSiStateLiuJuHu\020\026\022\035\n\031TDouShi"
    "SiStateMingLouCard\020\027\022\030\n\024TDouShiSiStateFa"
    "nPai\020\030\022\036\n\032TDouShiSiStateFanPaiFinish\020\031\022\031"
    "\n\025TDouShiSiStateRelieve\020\032\022\033\n\027TDouShiSiSt"
    "ateTranslate\020\033\022\032\n\026TDouShiSiStateMendCard"
    "\020\034*\245\001\n\021TDouShiSiBarState\022\027\n\023STATE_DSS_GA"
    "NG_NULL\020\000\022\027\n\023STATE_DSS_MING_GANG\020\001\022\025\n\021ST"
    "ATE_DSS_AN_GANG\020\002\022\027\n\023STATE_DSS_ERCI_GANG"
    "\020\003\022\027\n\023STATE_DSS_MING_PENG\020\004\022\025\n\021STATE_DSS"
    "_AN_PENG\020\005", 5530);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_doushisi.proto", &protobuf_RegisterTypes);
  MsgDouShiSiUserOperate::default_instance_ = new MsgDouShiSiUserOperate();
  MsgDouShiSiMendFlower::default_instance_ = new MsgDouShiSiMendFlower();
  MsgDouShiSiFanPai::default_instance_ = new MsgDouShiSiFanPai();
  MsgDouShiSiUserAction::default_instance_ = new MsgDouShiSiUserAction();
  MsgDouShiSiUserPower::default_instance_ = new MsgDouShiSiUserPower();
  MsgDouShiSiListen::default_instance_ = new MsgDouShiSiListen();
  MsgDouShiSiOutCard::default_instance_ = new MsgDouShiSiOutCard();
  MsgDouShiSiRoleScore::default_instance_ = new MsgDouShiSiRoleScore();
  MsgDouShiSiCardData::default_instance_ = new MsgDouShiSiCardData();
  MsgDouShiSiPlayer::default_instance_ = new MsgDouShiSiPlayer();
  MsgDouShiSiRoom::default_instance_ = new MsgDouShiSiRoom();
  MsgDouShiSiPrivateRoom::default_instance_ = new MsgDouShiSiPrivateRoom();
  MsgDouShiSiWeaveCard::default_instance_ = new MsgDouShiSiWeaveCard();
  MsgDouShiSiFlowerData::default_instance_ = new MsgDouShiSiFlowerData();
  MsgDouShiSiShowDown::default_instance_ = new MsgDouShiSiShowDown();
  MsgDouShiSiShowDownEvent::default_instance_ = new MsgDouShiSiShowDownEvent();
  MsgDouShiSiShowDownCount::default_instance_ = new MsgDouShiSiShowDownCount();
  MsgDouShiSiRoleState::default_instance_ = new MsgDouShiSiRoleState();
  MsgDouShiSiRoleStateCount::default_instance_ = new MsgDouShiSiRoleStateCount();
  MsgDouShiSiRoleHost::default_instance_ = new MsgDouShiSiRoleHost();
  MsgDouShiSiRoleHostCount::default_instance_ = new MsgDouShiSiRoleHostCount();
  MsgDouShiSiRoomShowDown::default_instance_ = new MsgDouShiSiRoomShowDown();
  MsgDouShiSiGameOverInfo::default_instance_ = new MsgDouShiSiGameOverInfo();
  MsgDouShiSiUserOperate::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiMendFlower::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiFanPai::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiUserAction::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiUserPower::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiListen::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiOutCard::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiRoleScore::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiCardData::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiPlayer::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiRoom::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiPrivateRoom::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiWeaveCard::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiFlowerData::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiShowDown::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiShowDownEvent::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiShowDownCount::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiRoleState::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiRoleStateCount::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiRoleHost::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiRoleHostCount::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiRoomShowDown::default_instance_->InitAsDefaultInstance();
  MsgDouShiSiGameOverInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fdoushisi_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fdoushisi_2eproto {
  StaticDescriptorInitializer_msg_5fdoushisi_2eproto() {
    protobuf_AddDesc_msg_5fdoushisi_2eproto();
  }
} static_descriptor_initializer_msg_5fdoushisi_2eproto_;
const ::google::protobuf::EnumDescriptor* TDouShiSiRoleState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDouShiSiRoleState_descriptor_;
}
bool TDouShiSiRoleState_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TDouShiSiShowDownEvent_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDouShiSiShowDownEvent_descriptor_;
}
bool TDouShiSiShowDownEvent_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TDouShiSiASK_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDouShiSiASK_descriptor_;
}
bool TDouShiSiASK_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TDouShiSiDirection_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDouShiSiDirection_descriptor_;
}
bool TDouShiSiDirection_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TDouShiSiState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDouShiSiState_descriptor_;
}
bool TDouShiSiState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TDouShiSiBarState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDouShiSiBarState_descriptor_;
}
bool TDouShiSiBarState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiUserOperate::kWikFieldNumber;
const int MsgDouShiSiUserOperate::kCardFieldNumber;
const int MsgDouShiSiUserOperate::kTouCardFieldNumber;
const int MsgDouShiSiUserOperate::kEatCardFieldNumber;
const int MsgDouShiSiUserOperate::kBarCardFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiUserOperate::MsgDouShiSiUserOperate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiUserOperate)
}

void MsgDouShiSiUserOperate::InitAsDefaultInstance() {
}

MsgDouShiSiUserOperate::MsgDouShiSiUserOperate(const MsgDouShiSiUserOperate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiUserOperate)
}

void MsgDouShiSiUserOperate::SharedCtor() {
  _cached_size_ = 0;
  wik_ = 0u;
  card_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiUserOperate::~MsgDouShiSiUserOperate() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiUserOperate)
  SharedDtor();
}

void MsgDouShiSiUserOperate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiUserOperate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiUserOperate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiUserOperate_descriptor_;
}

const MsgDouShiSiUserOperate& MsgDouShiSiUserOperate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiUserOperate* MsgDouShiSiUserOperate::default_instance_ = NULL;

MsgDouShiSiUserOperate* MsgDouShiSiUserOperate::New() const {
  return new MsgDouShiSiUserOperate;
}

void MsgDouShiSiUserOperate::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiUserOperate*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(wik_, card_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  tou_card_.Clear();
  eat_card_.Clear();
  bar_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiUserOperate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiUserOperate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 wik = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_card;
        break;
      }

      // optional uint32 card = 2;
      case 2: {
        if (tag == 16) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_)));
          set_has_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tou_card;
        break;
      }

      // repeated uint32 tou_card = 3;
      case 3: {
        if (tag == 24) {
         parse_tou_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_tou_card())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tou_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tou_card;
        if (input->ExpectTag(32)) goto parse_eat_card;
        break;
      }

      // repeated uint32 eat_card = 4;
      case 4: {
        if (tag == 32) {
         parse_eat_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_eat_card())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_eat_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eat_card;
        if (input->ExpectTag(40)) goto parse_bar_card;
        break;
      }

      // repeated uint32 bar_card = 5;
      case 5: {
        if (tag == 40) {
         parse_bar_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_bar_card())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bar_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bar_card;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiUserOperate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiUserOperate)
  return false;
#undef DO_
}

void MsgDouShiSiUserOperate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiUserOperate)
  // optional uint32 wik = 1;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->wik(), output);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->card(), output);
  }

  // repeated uint32 tou_card = 3;
  for (int i = 0; i < this->tou_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->tou_card(i), output);
  }

  // repeated uint32 eat_card = 4;
  for (int i = 0; i < this->eat_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->eat_card(i), output);
  }

  // repeated uint32 bar_card = 5;
  for (int i = 0; i < this->bar_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->bar_card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiUserOperate)
}

::google::protobuf::uint8* MsgDouShiSiUserOperate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiUserOperate)
  // optional uint32 wik = 1;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->wik(), target);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->card(), target);
  }

  // repeated uint32 tou_card = 3;
  for (int i = 0; i < this->tou_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->tou_card(i), target);
  }

  // repeated uint32 eat_card = 4;
  for (int i = 0; i < this->eat_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->eat_card(i), target);
  }

  // repeated uint32 bar_card = 5;
  for (int i = 0; i < this->bar_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->bar_card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiUserOperate)
  return target;
}

int MsgDouShiSiUserOperate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 wik = 1;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional uint32 card = 2;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->card());
    }

  }
  // repeated uint32 tou_card = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->tou_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->tou_card(i));
    }
    total_size += 1 * this->tou_card_size() + data_size;
  }

  // repeated uint32 eat_card = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->eat_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->eat_card(i));
    }
    total_size += 1 * this->eat_card_size() + data_size;
  }

  // repeated uint32 bar_card = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->bar_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->bar_card(i));
    }
    total_size += 1 * this->bar_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiUserOperate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiUserOperate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiUserOperate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiUserOperate::MergeFrom(const MsgDouShiSiUserOperate& from) {
  GOOGLE_CHECK_NE(&from, this);
  tou_card_.MergeFrom(from.tou_card_);
  eat_card_.MergeFrom(from.eat_card_);
  bar_card_.MergeFrom(from.bar_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_card()) {
      set_card(from.card());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiUserOperate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiUserOperate::CopyFrom(const MsgDouShiSiUserOperate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiUserOperate::IsInitialized() const {

  return true;
}

void MsgDouShiSiUserOperate::Swap(MsgDouShiSiUserOperate* other) {
  if (other != this) {
    std::swap(wik_, other->wik_);
    std::swap(card_, other->card_);
    tou_card_.Swap(&other->tou_card_);
    eat_card_.Swap(&other->eat_card_);
    bar_card_.Swap(&other->bar_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiUserOperate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiUserOperate_descriptor_;
  metadata.reflection = MsgDouShiSiUserOperate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiMendFlower::kIdFieldNumber;
const int MsgDouShiSiMendFlower::kHandcardFieldNumber;
const int MsgDouShiSiMendFlower::kHandNumFieldNumber;
const int MsgDouShiSiMendFlower::kFlowerNumFieldNumber;
const int MsgDouShiSiMendFlower::kSurplusHandNumFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiMendFlower::MsgDouShiSiMendFlower()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiMendFlower)
}

void MsgDouShiSiMendFlower::InitAsDefaultInstance() {
}

MsgDouShiSiMendFlower::MsgDouShiSiMendFlower(const MsgDouShiSiMendFlower& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiMendFlower)
}

void MsgDouShiSiMendFlower::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  hand_num_ = 0u;
  flower_num_ = 0u;
  surplus_hand_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiMendFlower::~MsgDouShiSiMendFlower() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiMendFlower)
  SharedDtor();
}

void MsgDouShiSiMendFlower::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiMendFlower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiMendFlower::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiMendFlower_descriptor_;
}

const MsgDouShiSiMendFlower& MsgDouShiSiMendFlower::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiMendFlower* MsgDouShiSiMendFlower::default_instance_ = NULL;

MsgDouShiSiMendFlower* MsgDouShiSiMendFlower::New() const {
  return new MsgDouShiSiMendFlower;
}

void MsgDouShiSiMendFlower::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiMendFlower*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 29) {
    ZR_(hand_num_, surplus_hand_num_);
    id_ = GOOGLE_ULONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  handcard_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiMendFlower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiMendFlower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_handcard;
        break;
      }

      // repeated uint32 handcard = 2;
      case 2: {
        if (tag == 16) {
         parse_handcard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_handcard())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_handcard())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_handcard;
        if (input->ExpectTag(24)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 3;
      case 3: {
        if (tag == 24) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_flower_num;
        break;
      }

      // optional uint32 flower_num = 4;
      case 4: {
        if (tag == 32) {
         parse_flower_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flower_num_)));
          set_has_flower_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_surplus_hand_num;
        break;
      }

      // optional uint32 surplus_hand_num = 5;
      case 5: {
        if (tag == 40) {
         parse_surplus_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &surplus_hand_num_)));
          set_has_surplus_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiMendFlower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiMendFlower)
  return false;
#undef DO_
}

void MsgDouShiSiMendFlower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiMendFlower)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // repeated uint32 handcard = 2;
  for (int i = 0; i < this->handcard_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->handcard(i), output);
  }

  // optional uint32 hand_num = 3;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hand_num(), output);
  }

  // optional uint32 flower_num = 4;
  if (has_flower_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->flower_num(), output);
  }

  // optional uint32 surplus_hand_num = 5;
  if (has_surplus_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->surplus_hand_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiMendFlower)
}

::google::protobuf::uint8* MsgDouShiSiMendFlower::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiMendFlower)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // repeated uint32 handcard = 2;
  for (int i = 0; i < this->handcard_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->handcard(i), target);
  }

  // optional uint32 hand_num = 3;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hand_num(), target);
  }

  // optional uint32 flower_num = 4;
  if (has_flower_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->flower_num(), target);
  }

  // optional uint32 surplus_hand_num = 5;
  if (has_surplus_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->surplus_hand_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiMendFlower)
  return target;
}

int MsgDouShiSiMendFlower::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 hand_num = 3;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

    // optional uint32 flower_num = 4;
    if (has_flower_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flower_num());
    }

    // optional uint32 surplus_hand_num = 5;
    if (has_surplus_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->surplus_hand_num());
    }

  }
  // repeated uint32 handcard = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->handcard_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->handcard(i));
    }
    total_size += 1 * this->handcard_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiMendFlower::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiMendFlower* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiMendFlower*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiMendFlower::MergeFrom(const MsgDouShiSiMendFlower& from) {
  GOOGLE_CHECK_NE(&from, this);
  handcard_.MergeFrom(from.handcard_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
    if (from.has_flower_num()) {
      set_flower_num(from.flower_num());
    }
    if (from.has_surplus_hand_num()) {
      set_surplus_hand_num(from.surplus_hand_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiMendFlower::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiMendFlower::CopyFrom(const MsgDouShiSiMendFlower& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiMendFlower::IsInitialized() const {

  return true;
}

void MsgDouShiSiMendFlower::Swap(MsgDouShiSiMendFlower* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    handcard_.Swap(&other->handcard_);
    std::swap(hand_num_, other->hand_num_);
    std::swap(flower_num_, other->flower_num_);
    std::swap(surplus_hand_num_, other->surplus_hand_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiMendFlower::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiMendFlower_descriptor_;
  metadata.reflection = MsgDouShiSiMendFlower_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiFanPai::kIdFieldNumber;
const int MsgDouShiSiFanPai::kCardFieldNumber;
const int MsgDouShiSiFanPai::kWikFieldNumber;
const int MsgDouShiSiFanPai::kSurplusHandNumFieldNumber;
const int MsgDouShiSiFanPai::kGangCardFieldNumber;
const int MsgDouShiSiFanPai::kEatCardFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiFanPai::MsgDouShiSiFanPai()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiFanPai)
}

void MsgDouShiSiFanPai::InitAsDefaultInstance() {
}

MsgDouShiSiFanPai::MsgDouShiSiFanPai(const MsgDouShiSiFanPai& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiFanPai)
}

void MsgDouShiSiFanPai::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  card_ = 0u;
  wik_ = 0u;
  surplus_hand_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiFanPai::~MsgDouShiSiFanPai() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiFanPai)
  SharedDtor();
}

void MsgDouShiSiFanPai::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiFanPai::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiFanPai::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiFanPai_descriptor_;
}

const MsgDouShiSiFanPai& MsgDouShiSiFanPai::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiFanPai* MsgDouShiSiFanPai::default_instance_ = NULL;

MsgDouShiSiFanPai* MsgDouShiSiFanPai::New() const {
  return new MsgDouShiSiFanPai;
}

void MsgDouShiSiFanPai::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiFanPai*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(id_, wik_);
    surplus_hand_num_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  gang_card_.Clear();
  eat_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiFanPai::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiFanPai)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_card;
        break;
      }

      // optional uint32 card = 2;
      case 2: {
        if (tag == 16) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_)));
          set_has_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 3;
      case 3: {
        if (tag == 24) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_surplus_hand_num;
        break;
      }

      // optional uint32 surplus_hand_num = 4;
      case 4: {
        if (tag == 32) {
         parse_surplus_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &surplus_hand_num_)));
          set_has_surplus_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gang_card;
        break;
      }

      // repeated uint32 gang_card = 5;
      case 5: {
        if (tag == 40) {
         parse_gang_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_gang_card())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gang_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gang_card;
        if (input->ExpectTag(48)) goto parse_eat_card;
        break;
      }

      // repeated uint32 eat_card = 6;
      case 6: {
        if (tag == 48) {
         parse_eat_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_eat_card())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_eat_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_eat_card;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiFanPai)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiFanPai)
  return false;
#undef DO_
}

void MsgDouShiSiFanPai::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiFanPai)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->card(), output);
  }

  // optional uint32 wik = 3;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->wik(), output);
  }

  // optional uint32 surplus_hand_num = 4;
  if (has_surplus_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->surplus_hand_num(), output);
  }

  // repeated uint32 gang_card = 5;
  for (int i = 0; i < this->gang_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->gang_card(i), output);
  }

  // repeated uint32 eat_card = 6;
  for (int i = 0; i < this->eat_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->eat_card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiFanPai)
}

::google::protobuf::uint8* MsgDouShiSiFanPai::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiFanPai)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->card(), target);
  }

  // optional uint32 wik = 3;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->wik(), target);
  }

  // optional uint32 surplus_hand_num = 4;
  if (has_surplus_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->surplus_hand_num(), target);
  }

  // repeated uint32 gang_card = 5;
  for (int i = 0; i < this->gang_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->gang_card(i), target);
  }

  // repeated uint32 eat_card = 6;
  for (int i = 0; i < this->eat_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->eat_card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiFanPai)
  return target;
}

int MsgDouShiSiFanPai::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 card = 2;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->card());
    }

    // optional uint32 wik = 3;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional uint32 surplus_hand_num = 4;
    if (has_surplus_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->surplus_hand_num());
    }

  }
  // repeated uint32 gang_card = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->gang_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gang_card(i));
    }
    total_size += 1 * this->gang_card_size() + data_size;
  }

  // repeated uint32 eat_card = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->eat_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->eat_card(i));
    }
    total_size += 1 * this->eat_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiFanPai::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiFanPai* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiFanPai*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiFanPai::MergeFrom(const MsgDouShiSiFanPai& from) {
  GOOGLE_CHECK_NE(&from, this);
  gang_card_.MergeFrom(from.gang_card_);
  eat_card_.MergeFrom(from.eat_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_card()) {
      set_card(from.card());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_surplus_hand_num()) {
      set_surplus_hand_num(from.surplus_hand_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiFanPai::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiFanPai::CopyFrom(const MsgDouShiSiFanPai& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiFanPai::IsInitialized() const {

  return true;
}

void MsgDouShiSiFanPai::Swap(MsgDouShiSiFanPai* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(card_, other->card_);
    std::swap(wik_, other->wik_);
    std::swap(surplus_hand_num_, other->surplus_hand_num_);
    gang_card_.Swap(&other->gang_card_);
    eat_card_.Swap(&other->eat_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiFanPai::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiFanPai_descriptor_;
  metadata.reflection = MsgDouShiSiFanPai_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiUserAction::kIdFieldNumber;
const int MsgDouShiSiUserAction::kRoomStateFieldNumber;
const int MsgDouShiSiUserAction::kLastRoomStateFieldNumber;
const int MsgDouShiSiUserAction::kCardFieldNumber;
const int MsgDouShiSiUserAction::kFlowerNumFieldNumber;
const int MsgDouShiSiUserAction::kWikFieldNumber;
const int MsgDouShiSiUserAction::kGangCardFieldNumber;
const int MsgDouShiSiUserAction::kTouCardFieldNumber;
const int MsgDouShiSiUserAction::kSurplusHandNumFieldNumber;
const int MsgDouShiSiUserAction::kHandNumFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiUserAction::MsgDouShiSiUserAction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiUserAction)
}

void MsgDouShiSiUserAction::InitAsDefaultInstance() {
}

MsgDouShiSiUserAction::MsgDouShiSiUserAction(const MsgDouShiSiUserAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiUserAction)
}

void MsgDouShiSiUserAction::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  room_state_ = 0;
  last_room_state_ = 0;
  card_ = 0u;
  flower_num_ = 0u;
  wik_ = 0u;
  surplus_hand_num_ = 0u;
  hand_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiUserAction::~MsgDouShiSiUserAction() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiUserAction)
  SharedDtor();
}

void MsgDouShiSiUserAction::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiUserAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiUserAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiUserAction_descriptor_;
}

const MsgDouShiSiUserAction& MsgDouShiSiUserAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiUserAction* MsgDouShiSiUserAction::default_instance_ = NULL;

MsgDouShiSiUserAction* MsgDouShiSiUserAction::New() const {
  return new MsgDouShiSiUserAction;
}

void MsgDouShiSiUserAction::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiUserAction*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(id_, flower_num_);
    wik_ = 0u;
  }
  if (_has_bits_[8 / 32] & 768) {
    surplus_hand_num_ = 0u;
    hand_num_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  gang_card_.Clear();
  tou_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiUserAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiUserAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_state;
        break;
      }

      // optional .TDouShiSiState room_state = 2;
      case 2: {
        if (tag == 16) {
         parse_room_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TDouShiSiState_IsValid(value)) {
            set_room_state(static_cast< ::TDouShiSiState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_last_room_state;
        break;
      }

      // optional .TDouShiSiState last_room_state = 3;
      case 3: {
        if (tag == 24) {
         parse_last_room_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TDouShiSiState_IsValid(value)) {
            set_last_room_state(static_cast< ::TDouShiSiState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_card;
        break;
      }

      // optional uint32 card = 4;
      case 4: {
        if (tag == 32) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_)));
          set_has_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_flower_num;
        break;
      }

      // optional uint32 flower_num = 5;
      case 5: {
        if (tag == 40) {
         parse_flower_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flower_num_)));
          set_has_flower_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 6;
      case 6: {
        if (tag == 48) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_gang_card;
        break;
      }

      // repeated uint32 gang_card = 7;
      case 7: {
        if (tag == 56) {
         parse_gang_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_gang_card())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gang_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_gang_card;
        if (input->ExpectTag(64)) goto parse_tou_card;
        break;
      }

      // repeated uint32 tou_card = 8;
      case 8: {
        if (tag == 64) {
         parse_tou_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64, input, this->mutable_tou_card())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tou_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_tou_card;
        if (input->ExpectTag(72)) goto parse_surplus_hand_num;
        break;
      }

      // optional uint32 surplus_hand_num = 9;
      case 9: {
        if (tag == 72) {
         parse_surplus_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &surplus_hand_num_)));
          set_has_surplus_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 10;
      case 10: {
        if (tag == 80) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiUserAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiUserAction)
  return false;
#undef DO_
}

void MsgDouShiSiUserAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiUserAction)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional .TDouShiSiState room_state = 2;
  if (has_room_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->room_state(), output);
  }

  // optional .TDouShiSiState last_room_state = 3;
  if (has_last_room_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->last_room_state(), output);
  }

  // optional uint32 card = 4;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->card(), output);
  }

  // optional uint32 flower_num = 5;
  if (has_flower_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->flower_num(), output);
  }

  // optional uint32 wik = 6;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->wik(), output);
  }

  // repeated uint32 gang_card = 7;
  for (int i = 0; i < this->gang_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->gang_card(i), output);
  }

  // repeated uint32 tou_card = 8;
  for (int i = 0; i < this->tou_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->tou_card(i), output);
  }

  // optional uint32 surplus_hand_num = 9;
  if (has_surplus_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->surplus_hand_num(), output);
  }

  // optional uint32 hand_num = 10;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->hand_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiUserAction)
}

::google::protobuf::uint8* MsgDouShiSiUserAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiUserAction)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional .TDouShiSiState room_state = 2;
  if (has_room_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->room_state(), target);
  }

  // optional .TDouShiSiState last_room_state = 3;
  if (has_last_room_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->last_room_state(), target);
  }

  // optional uint32 card = 4;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->card(), target);
  }

  // optional uint32 flower_num = 5;
  if (has_flower_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->flower_num(), target);
  }

  // optional uint32 wik = 6;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->wik(), target);
  }

  // repeated uint32 gang_card = 7;
  for (int i = 0; i < this->gang_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->gang_card(i), target);
  }

  // repeated uint32 tou_card = 8;
  for (int i = 0; i < this->tou_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->tou_card(i), target);
  }

  // optional uint32 surplus_hand_num = 9;
  if (has_surplus_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->surplus_hand_num(), target);
  }

  // optional uint32 hand_num = 10;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->hand_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiUserAction)
  return target;
}

int MsgDouShiSiUserAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional .TDouShiSiState room_state = 2;
    if (has_room_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_state());
    }

    // optional .TDouShiSiState last_room_state = 3;
    if (has_last_room_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->last_room_state());
    }

    // optional uint32 card = 4;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->card());
    }

    // optional uint32 flower_num = 5;
    if (has_flower_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flower_num());
    }

    // optional uint32 wik = 6;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 surplus_hand_num = 9;
    if (has_surplus_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->surplus_hand_num());
    }

    // optional uint32 hand_num = 10;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

  }
  // repeated uint32 gang_card = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->gang_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gang_card(i));
    }
    total_size += 1 * this->gang_card_size() + data_size;
  }

  // repeated uint32 tou_card = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->tou_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->tou_card(i));
    }
    total_size += 1 * this->tou_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiUserAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiUserAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiUserAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiUserAction::MergeFrom(const MsgDouShiSiUserAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  gang_card_.MergeFrom(from.gang_card_);
  tou_card_.MergeFrom(from.tou_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_room_state()) {
      set_room_state(from.room_state());
    }
    if (from.has_last_room_state()) {
      set_last_room_state(from.last_room_state());
    }
    if (from.has_card()) {
      set_card(from.card());
    }
    if (from.has_flower_num()) {
      set_flower_num(from.flower_num());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_surplus_hand_num()) {
      set_surplus_hand_num(from.surplus_hand_num());
    }
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiUserAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiUserAction::CopyFrom(const MsgDouShiSiUserAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiUserAction::IsInitialized() const {

  return true;
}

void MsgDouShiSiUserAction::Swap(MsgDouShiSiUserAction* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(room_state_, other->room_state_);
    std::swap(last_room_state_, other->last_room_state_);
    std::swap(card_, other->card_);
    std::swap(flower_num_, other->flower_num_);
    std::swap(wik_, other->wik_);
    gang_card_.Swap(&other->gang_card_);
    tou_card_.Swap(&other->tou_card_);
    std::swap(surplus_hand_num_, other->surplus_hand_num_);
    std::swap(hand_num_, other->hand_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiUserAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiUserAction_descriptor_;
  metadata.reflection = MsgDouShiSiUserAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiUserPower::kIdFieldNumber;
const int MsgDouShiSiUserPower::kWikFieldNumber;
const int MsgDouShiSiUserPower::kRoomStateFieldNumber;
const int MsgDouShiSiUserPower::kGangCardFieldNumber;
const int MsgDouShiSiUserPower::kTouCardFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiUserPower::MsgDouShiSiUserPower()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiUserPower)
}

void MsgDouShiSiUserPower::InitAsDefaultInstance() {
}

MsgDouShiSiUserPower::MsgDouShiSiUserPower(const MsgDouShiSiUserPower& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiUserPower)
}

void MsgDouShiSiUserPower::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  wik_ = 0u;
  room_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiUserPower::~MsgDouShiSiUserPower() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiUserPower)
  SharedDtor();
}

void MsgDouShiSiUserPower::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiUserPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiUserPower::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiUserPower_descriptor_;
}

const MsgDouShiSiUserPower& MsgDouShiSiUserPower::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiUserPower* MsgDouShiSiUserPower::default_instance_ = NULL;

MsgDouShiSiUserPower* MsgDouShiSiUserPower::New() const {
  return new MsgDouShiSiUserPower;
}

void MsgDouShiSiUserPower::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiUserPower*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, room_state_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  gang_card_.Clear();
  tou_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiUserPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiUserPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 2;
      case 2: {
        if (tag == 16) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_room_state;
        break;
      }

      // optional .TDouShiSiState room_state = 3;
      case 3: {
        if (tag == 24) {
         parse_room_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TDouShiSiState_IsValid(value)) {
            set_room_state(static_cast< ::TDouShiSiState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gang_card;
        break;
      }

      // repeated uint32 gang_card = 4;
      case 4: {
        if (tag == 32) {
         parse_gang_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_gang_card())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gang_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gang_card;
        if (input->ExpectTag(40)) goto parse_tou_card;
        break;
      }

      // repeated uint32 tou_card = 5;
      case 5: {
        if (tag == 40) {
         parse_tou_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_tou_card())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tou_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_tou_card;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiUserPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiUserPower)
  return false;
#undef DO_
}

void MsgDouShiSiUserPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiUserPower)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint32 wik = 2;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wik(), output);
  }

  // optional .TDouShiSiState room_state = 3;
  if (has_room_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->room_state(), output);
  }

  // repeated uint32 gang_card = 4;
  for (int i = 0; i < this->gang_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->gang_card(i), output);
  }

  // repeated uint32 tou_card = 5;
  for (int i = 0; i < this->tou_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->tou_card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiUserPower)
}

::google::protobuf::uint8* MsgDouShiSiUserPower::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiUserPower)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint32 wik = 2;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wik(), target);
  }

  // optional .TDouShiSiState room_state = 3;
  if (has_room_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->room_state(), target);
  }

  // repeated uint32 gang_card = 4;
  for (int i = 0; i < this->gang_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->gang_card(i), target);
  }

  // repeated uint32 tou_card = 5;
  for (int i = 0; i < this->tou_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->tou_card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiUserPower)
  return target;
}

int MsgDouShiSiUserPower::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 wik = 2;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional .TDouShiSiState room_state = 3;
    if (has_room_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_state());
    }

  }
  // repeated uint32 gang_card = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->gang_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gang_card(i));
    }
    total_size += 1 * this->gang_card_size() + data_size;
  }

  // repeated uint32 tou_card = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->tou_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->tou_card(i));
    }
    total_size += 1 * this->tou_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiUserPower::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiUserPower* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiUserPower*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiUserPower::MergeFrom(const MsgDouShiSiUserPower& from) {
  GOOGLE_CHECK_NE(&from, this);
  gang_card_.MergeFrom(from.gang_card_);
  tou_card_.MergeFrom(from.tou_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_room_state()) {
      set_room_state(from.room_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiUserPower::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiUserPower::CopyFrom(const MsgDouShiSiUserPower& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiUserPower::IsInitialized() const {

  return true;
}

void MsgDouShiSiUserPower::Swap(MsgDouShiSiUserPower* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(wik_, other->wik_);
    std::swap(room_state_, other->room_state_);
    gang_card_.Swap(&other->gang_card_);
    tou_card_.Swap(&other->tou_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiUserPower::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiUserPower_descriptor_;
  metadata.reflection = MsgDouShiSiUserPower_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiListen::kIdFieldNumber;
const int MsgDouShiSiListen::kStateFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiListen::MsgDouShiSiListen()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiListen)
}

void MsgDouShiSiListen::InitAsDefaultInstance() {
}

MsgDouShiSiListen::MsgDouShiSiListen(const MsgDouShiSiListen& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiListen)
}

void MsgDouShiSiListen::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  state_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiListen::~MsgDouShiSiListen() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiListen)
  SharedDtor();
}

void MsgDouShiSiListen::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiListen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiListen::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiListen_descriptor_;
}

const MsgDouShiSiListen& MsgDouShiSiListen::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiListen* MsgDouShiSiListen::default_instance_ = NULL;

MsgDouShiSiListen* MsgDouShiSiListen::New() const {
  return new MsgDouShiSiListen;
}

void MsgDouShiSiListen::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiListen*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, state_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiListen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiListen)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional uint32 state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiListen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiListen)
  return false;
#undef DO_
}

void MsgDouShiSiListen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiListen)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiListen)
}

::google::protobuf::uint8* MsgDouShiSiListen::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiListen)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiListen)
  return target;
}

int MsgDouShiSiListen::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiListen::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiListen* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiListen*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiListen::MergeFrom(const MsgDouShiSiListen& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiListen::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiListen::CopyFrom(const MsgDouShiSiListen& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiListen::IsInitialized() const {

  return true;
}

void MsgDouShiSiListen::Swap(MsgDouShiSiListen* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiListen::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiListen_descriptor_;
  metadata.reflection = MsgDouShiSiListen_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiOutCard::kIdFieldNumber;
const int MsgDouShiSiOutCard::kCardFieldNumber;
const int MsgDouShiSiOutCard::kIndexFieldNumber;
const int MsgDouShiSiOutCard::kHandNumFieldNumber;
const int MsgDouShiSiOutCard::kHandCardFieldNumber;
const int MsgDouShiSiOutCard::kRoleStateFieldNumber;
const int MsgDouShiSiOutCard::kRiverNumFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiOutCard::MsgDouShiSiOutCard()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiOutCard)
}

void MsgDouShiSiOutCard::InitAsDefaultInstance() {
}

MsgDouShiSiOutCard::MsgDouShiSiOutCard(const MsgDouShiSiOutCard& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiOutCard)
}

void MsgDouShiSiOutCard::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  card_ = 0u;
  index_ = 0;
  hand_num_ = 0u;
  role_state_ = 0u;
  river_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiOutCard::~MsgDouShiSiOutCard() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiOutCard)
  SharedDtor();
}

void MsgDouShiSiOutCard::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiOutCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiOutCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiOutCard_descriptor_;
}

const MsgDouShiSiOutCard& MsgDouShiSiOutCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiOutCard* MsgDouShiSiOutCard::default_instance_ = NULL;

MsgDouShiSiOutCard* MsgDouShiSiOutCard::New() const {
  return new MsgDouShiSiOutCard;
}

void MsgDouShiSiOutCard::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiOutCard*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 111) {
    ZR_(id_, index_);
    ZR_(hand_num_, river_num_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  hand_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiOutCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiOutCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_card;
        break;
      }

      // optional uint32 card = 2;
      case 2: {
        if (tag == 16) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_)));
          set_has_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }

      // optional int32 index = 3;
      case 3: {
        if (tag == 24) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 4;
      case 4: {
        if (tag == 32) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_hand_card;
        break;
      }

      // repeated uint32 hand_card = 5;
      case 5: {
        if (tag == 40) {
         parse_hand_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_hand_card())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_hand_card;
        if (input->ExpectTag(48)) goto parse_role_state;
        break;
      }

      // optional uint32 role_state = 6;
      case 6: {
        if (tag == 48) {
         parse_role_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &role_state_)));
          set_has_role_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_river_num;
        break;
      }

      // optional uint32 river_num = 7;
      case 7: {
        if (tag == 56) {
         parse_river_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &river_num_)));
          set_has_river_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiOutCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiOutCard)
  return false;
#undef DO_
}

void MsgDouShiSiOutCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiOutCard)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->card(), output);
  }

  // optional int32 index = 3;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }

  // optional uint32 hand_num = 4;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hand_num(), output);
  }

  // repeated uint32 hand_card = 5;
  for (int i = 0; i < this->hand_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->hand_card(i), output);
  }

  // optional uint32 role_state = 6;
  if (has_role_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->role_state(), output);
  }

  // optional uint32 river_num = 7;
  if (has_river_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->river_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiOutCard)
}

::google::protobuf::uint8* MsgDouShiSiOutCard::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiOutCard)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->card(), target);
  }

  // optional int32 index = 3;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }

  // optional uint32 hand_num = 4;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hand_num(), target);
  }

  // repeated uint32 hand_card = 5;
  for (int i = 0; i < this->hand_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->hand_card(i), target);
  }

  // optional uint32 role_state = 6;
  if (has_role_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->role_state(), target);
  }

  // optional uint32 river_num = 7;
  if (has_river_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->river_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiOutCard)
  return target;
}

int MsgDouShiSiOutCard::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 card = 2;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->card());
    }

    // optional int32 index = 3;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional uint32 hand_num = 4;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

    // optional uint32 role_state = 6;
    if (has_role_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->role_state());
    }

    // optional uint32 river_num = 7;
    if (has_river_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->river_num());
    }

  }
  // repeated uint32 hand_card = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_card(i));
    }
    total_size += 1 * this->hand_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiOutCard::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiOutCard* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiOutCard*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiOutCard::MergeFrom(const MsgDouShiSiOutCard& from) {
  GOOGLE_CHECK_NE(&from, this);
  hand_card_.MergeFrom(from.hand_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_card()) {
      set_card(from.card());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
    if (from.has_role_state()) {
      set_role_state(from.role_state());
    }
    if (from.has_river_num()) {
      set_river_num(from.river_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiOutCard::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiOutCard::CopyFrom(const MsgDouShiSiOutCard& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiOutCard::IsInitialized() const {

  return true;
}

void MsgDouShiSiOutCard::Swap(MsgDouShiSiOutCard* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(card_, other->card_);
    std::swap(index_, other->index_);
    std::swap(hand_num_, other->hand_num_);
    hand_card_.Swap(&other->hand_card_);
    std::swap(role_state_, other->role_state_);
    std::swap(river_num_, other->river_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiOutCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiOutCard_descriptor_;
  metadata.reflection = MsgDouShiSiOutCard_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiRoleScore::kIdFieldNumber;
const int MsgDouShiSiRoleScore::kScoreFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiRoleScore::MsgDouShiSiRoleScore()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiRoleScore)
}

void MsgDouShiSiRoleScore::InitAsDefaultInstance() {
}

MsgDouShiSiRoleScore::MsgDouShiSiRoleScore(const MsgDouShiSiRoleScore& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiRoleScore)
}

void MsgDouShiSiRoleScore::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  score_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiRoleScore::~MsgDouShiSiRoleScore() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiRoleScore)
  SharedDtor();
}

void MsgDouShiSiRoleScore::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiRoleScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiRoleScore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiRoleScore_descriptor_;
}

const MsgDouShiSiRoleScore& MsgDouShiSiRoleScore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiRoleScore* MsgDouShiSiRoleScore::default_instance_ = NULL;

MsgDouShiSiRoleScore* MsgDouShiSiRoleScore::New() const {
  return new MsgDouShiSiRoleScore;
}

void MsgDouShiSiRoleScore::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiRoleScore*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, score_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiRoleScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiRoleScore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_score;
        break;
      }

      // optional int64 score = 2;
      case 2: {
        if (tag == 16) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiRoleScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiRoleScore)
  return false;
#undef DO_
}

void MsgDouShiSiRoleScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiRoleScore)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional int64 score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiRoleScore)
}

::google::protobuf::uint8* MsgDouShiSiRoleScore::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiRoleScore)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional int64 score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiRoleScore)
  return target;
}

int MsgDouShiSiRoleScore::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional int64 score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiRoleScore::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiRoleScore* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiRoleScore*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiRoleScore::MergeFrom(const MsgDouShiSiRoleScore& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiRoleScore::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiRoleScore::CopyFrom(const MsgDouShiSiRoleScore& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiRoleScore::IsInitialized() const {

  return true;
}

void MsgDouShiSiRoleScore::Swap(MsgDouShiSiRoleScore* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(score_, other->score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiRoleScore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiRoleScore_descriptor_;
  metadata.reflection = MsgDouShiSiRoleScore_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiCardData::kCardFieldNumber;
const int MsgDouShiSiCardData::kWikFieldNumber;
const int MsgDouShiSiCardData::kTaridFieldNumber;
const int MsgDouShiSiCardData::kSrcidFieldNumber;
const int MsgDouShiSiCardData::kBarkindFieldNumber;
const int MsgDouShiSiCardData::kCardListFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiCardData::MsgDouShiSiCardData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiCardData)
}

void MsgDouShiSiCardData::InitAsDefaultInstance() {
}

MsgDouShiSiCardData::MsgDouShiSiCardData(const MsgDouShiSiCardData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiCardData)
}

void MsgDouShiSiCardData::SharedCtor() {
  _cached_size_ = 0;
  card_ = 0u;
  wik_ = 0u;
  tarid_ = GOOGLE_ULONGLONG(0);
  srcid_ = GOOGLE_ULONGLONG(0);
  barkind_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiCardData::~MsgDouShiSiCardData() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiCardData)
  SharedDtor();
}

void MsgDouShiSiCardData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiCardData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiCardData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiCardData_descriptor_;
}

const MsgDouShiSiCardData& MsgDouShiSiCardData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiCardData* MsgDouShiSiCardData::default_instance_ = NULL;

MsgDouShiSiCardData* MsgDouShiSiCardData::New() const {
  return new MsgDouShiSiCardData;
}

void MsgDouShiSiCardData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiCardData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(card_, srcid_);
    barkind_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  card_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiCardData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiCardData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 card = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_)));
          set_has_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 2;
      case 2: {
        if (tag == 16) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tarid;
        break;
      }

      // optional uint64 tarid = 3;
      case 3: {
        if (tag == 24) {
         parse_tarid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tarid_)));
          set_has_tarid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_srcid;
        break;
      }

      // optional uint64 srcid = 4;
      case 4: {
        if (tag == 32) {
         parse_srcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &srcid_)));
          set_has_srcid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_barkind;
        break;
      }

      // optional uint32 barkind = 5;
      case 5: {
        if (tag == 40) {
         parse_barkind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &barkind_)));
          set_has_barkind();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_card_list;
        break;
      }

      // repeated uint32 card_list = 6;
      case 6: {
        if (tag == 48) {
         parse_card_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_card_list())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_card_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_card_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiCardData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiCardData)
  return false;
#undef DO_
}

void MsgDouShiSiCardData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiCardData)
  // optional uint32 card = 1;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->card(), output);
  }

  // optional uint32 wik = 2;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wik(), output);
  }

  // optional uint64 tarid = 3;
  if (has_tarid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->tarid(), output);
  }

  // optional uint64 srcid = 4;
  if (has_srcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->srcid(), output);
  }

  // optional uint32 barkind = 5;
  if (has_barkind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->barkind(), output);
  }

  // repeated uint32 card_list = 6;
  for (int i = 0; i < this->card_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->card_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiCardData)
}

::google::protobuf::uint8* MsgDouShiSiCardData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiCardData)
  // optional uint32 card = 1;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->card(), target);
  }

  // optional uint32 wik = 2;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wik(), target);
  }

  // optional uint64 tarid = 3;
  if (has_tarid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->tarid(), target);
  }

  // optional uint64 srcid = 4;
  if (has_srcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->srcid(), target);
  }

  // optional uint32 barkind = 5;
  if (has_barkind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->barkind(), target);
  }

  // repeated uint32 card_list = 6;
  for (int i = 0; i < this->card_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->card_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiCardData)
  return target;
}

int MsgDouShiSiCardData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 card = 1;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->card());
    }

    // optional uint32 wik = 2;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional uint64 tarid = 3;
    if (has_tarid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tarid());
    }

    // optional uint64 srcid = 4;
    if (has_srcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->srcid());
    }

    // optional uint32 barkind = 5;
    if (has_barkind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->barkind());
    }

  }
  // repeated uint32 card_list = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->card_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->card_list(i));
    }
    total_size += 1 * this->card_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiCardData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiCardData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiCardData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiCardData::MergeFrom(const MsgDouShiSiCardData& from) {
  GOOGLE_CHECK_NE(&from, this);
  card_list_.MergeFrom(from.card_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_card()) {
      set_card(from.card());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_tarid()) {
      set_tarid(from.tarid());
    }
    if (from.has_srcid()) {
      set_srcid(from.srcid());
    }
    if (from.has_barkind()) {
      set_barkind(from.barkind());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiCardData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiCardData::CopyFrom(const MsgDouShiSiCardData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiCardData::IsInitialized() const {

  return true;
}

void MsgDouShiSiCardData::Swap(MsgDouShiSiCardData* other) {
  if (other != this) {
    std::swap(card_, other->card_);
    std::swap(wik_, other->wik_);
    std::swap(tarid_, other->tarid_);
    std::swap(srcid_, other->srcid_);
    std::swap(barkind_, other->barkind_);
    card_list_.Swap(&other->card_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiCardData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiCardData_descriptor_;
  metadata.reflection = MsgDouShiSiCardData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiPlayer::kPlayerInfoFieldNumber;
const int MsgDouShiSiPlayer::kStateFieldNumber;
const int MsgDouShiSiPlayer::kHandNumFieldNumber;
const int MsgDouShiSiPlayer::kRiverCardFieldNumber;
const int MsgDouShiSiPlayer::kWeaveCardFieldNumber;
const int MsgDouShiSiPlayer::kFlowerNumFieldNumber;
const int MsgDouShiSiPlayer::kWikFieldNumber;
const int MsgDouShiSiPlayer::kTdFieldNumber;
const int MsgDouShiSiPlayer::kMendHandcardFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiPlayer::MsgDouShiSiPlayer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiPlayer)
}

void MsgDouShiSiPlayer::InitAsDefaultInstance() {
  player_info_ = const_cast< ::MsgPlayerInfo*>(&::MsgPlayerInfo::default_instance());
}

MsgDouShiSiPlayer::MsgDouShiSiPlayer(const MsgDouShiSiPlayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiPlayer)
}

void MsgDouShiSiPlayer::SharedCtor() {
  _cached_size_ = 0;
  player_info_ = NULL;
  state_ = 0u;
  hand_num_ = 0u;
  flower_num_ = 0u;
  wik_ = 0u;
  td_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiPlayer::~MsgDouShiSiPlayer() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiPlayer)
  SharedDtor();
}

void MsgDouShiSiPlayer::SharedDtor() {
  if (this != default_instance_) {
    delete player_info_;
  }
}

void MsgDouShiSiPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiPlayer_descriptor_;
}

const MsgDouShiSiPlayer& MsgDouShiSiPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiPlayer* MsgDouShiSiPlayer::default_instance_ = NULL;

MsgDouShiSiPlayer* MsgDouShiSiPlayer::New() const {
  return new MsgDouShiSiPlayer;
}

void MsgDouShiSiPlayer::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiPlayer*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 231) {
    ZR_(state_, hand_num_);
    ZR_(flower_num_, wik_);
    if (has_player_info()) {
      if (player_info_ != NULL) player_info_->::MsgPlayerInfo::Clear();
    }
    td_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  river_card_.Clear();
  weave_card_.Clear();
  mend_handcard_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPlayerInfo player_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional uint32 state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 3;
      case 3: {
        if (tag == 24) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_river_card;
        break;
      }

      // repeated uint32 river_card = 4;
      case 4: {
        if (tag == 32) {
         parse_river_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_river_card())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_river_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_river_card;
        if (input->ExpectTag(42)) goto parse_weave_card;
        break;
      }

      // repeated .MsgDouShiSiCardData weave_card = 5;
      case 5: {
        if (tag == 42) {
         parse_weave_card:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_weave_card()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_weave_card;
        if (input->ExpectTag(48)) goto parse_flower_num;
        break;
      }

      // optional uint32 flower_num = 6;
      case 6: {
        if (tag == 48) {
         parse_flower_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flower_num_)));
          set_has_flower_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 7;
      case 7: {
        if (tag == 56) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_td;
        break;
      }

      // optional .TDouShiSiDirection td = 8;
      case 8: {
        if (tag == 64) {
         parse_td:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TDouShiSiDirection_IsValid(value)) {
            set_td(static_cast< ::TDouShiSiDirection >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_mend_handcard;
        break;
      }

      // repeated uint32 mend_handcard = 9;
      case 9: {
        if (tag == 72) {
         parse_mend_handcard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_mend_handcard())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mend_handcard())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_mend_handcard;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiPlayer)
  return false;
#undef DO_
}

void MsgDouShiSiPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiPlayer)
  // optional .MsgPlayerInfo player_info = 1;
  if (has_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player_info(), output);
  }

  // optional uint32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // optional uint32 hand_num = 3;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hand_num(), output);
  }

  // repeated uint32 river_card = 4;
  for (int i = 0; i < this->river_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->river_card(i), output);
  }

  // repeated .MsgDouShiSiCardData weave_card = 5;
  for (int i = 0; i < this->weave_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->weave_card(i), output);
  }

  // optional uint32 flower_num = 6;
  if (has_flower_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->flower_num(), output);
  }

  // optional uint32 wik = 7;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->wik(), output);
  }

  // optional .TDouShiSiDirection td = 8;
  if (has_td()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->td(), output);
  }

  // repeated uint32 mend_handcard = 9;
  for (int i = 0; i < this->mend_handcard_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->mend_handcard(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiPlayer)
}

::google::protobuf::uint8* MsgDouShiSiPlayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiPlayer)
  // optional .MsgPlayerInfo player_info = 1;
  if (has_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->player_info(), target);
  }

  // optional uint32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // optional uint32 hand_num = 3;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hand_num(), target);
  }

  // repeated uint32 river_card = 4;
  for (int i = 0; i < this->river_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->river_card(i), target);
  }

  // repeated .MsgDouShiSiCardData weave_card = 5;
  for (int i = 0; i < this->weave_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->weave_card(i), target);
  }

  // optional uint32 flower_num = 6;
  if (has_flower_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->flower_num(), target);
  }

  // optional uint32 wik = 7;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->wik(), target);
  }

  // optional .TDouShiSiDirection td = 8;
  if (has_td()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->td(), target);
  }

  // repeated uint32 mend_handcard = 9;
  for (int i = 0; i < this->mend_handcard_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->mend_handcard(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiPlayer)
  return target;
}

int MsgDouShiSiPlayer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPlayerInfo player_info = 1;
    if (has_player_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_info());
    }

    // optional uint32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // optional uint32 hand_num = 3;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

    // optional uint32 flower_num = 6;
    if (has_flower_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flower_num());
    }

    // optional uint32 wik = 7;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional .TDouShiSiDirection td = 8;
    if (has_td()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->td());
    }

  }
  // repeated uint32 river_card = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->river_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->river_card(i));
    }
    total_size += 1 * this->river_card_size() + data_size;
  }

  // repeated .MsgDouShiSiCardData weave_card = 5;
  total_size += 1 * this->weave_card_size();
  for (int i = 0; i < this->weave_card_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->weave_card(i));
  }

  // repeated uint32 mend_handcard = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->mend_handcard_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->mend_handcard(i));
    }
    total_size += 1 * this->mend_handcard_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiPlayer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiPlayer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiPlayer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiPlayer::MergeFrom(const MsgDouShiSiPlayer& from) {
  GOOGLE_CHECK_NE(&from, this);
  river_card_.MergeFrom(from.river_card_);
  weave_card_.MergeFrom(from.weave_card_);
  mend_handcard_.MergeFrom(from.mend_handcard_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_info()) {
      mutable_player_info()->::MsgPlayerInfo::MergeFrom(from.player_info());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
    if (from.has_flower_num()) {
      set_flower_num(from.flower_num());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_td()) {
      set_td(from.td());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiPlayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiPlayer::CopyFrom(const MsgDouShiSiPlayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiPlayer::IsInitialized() const {

  return true;
}

void MsgDouShiSiPlayer::Swap(MsgDouShiSiPlayer* other) {
  if (other != this) {
    std::swap(player_info_, other->player_info_);
    std::swap(state_, other->state_);
    std::swap(hand_num_, other->hand_num_);
    river_card_.Swap(&other->river_card_);
    weave_card_.Swap(&other->weave_card_);
    std::swap(flower_num_, other->flower_num_);
    std::swap(wik_, other->wik_);
    std::swap(td_, other->td_);
    mend_handcard_.Swap(&other->mend_handcard_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiPlayer_descriptor_;
  metadata.reflection = MsgDouShiSiPlayer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiRoom::kRoomStateFieldNumber;
const int MsgDouShiSiRoom::kPlayerListFieldNumber;
const int MsgDouShiSiRoom::kBankerIdFieldNumber;
const int MsgDouShiSiRoom::kActionIdFieldNumber;
const int MsgDouShiSiRoom::kHandCardFieldNumber;
const int MsgDouShiSiRoom::kSurplusHandNumFieldNumber;
const int MsgDouShiSiRoom::kSendCardFieldNumber;
const int MsgDouShiSiRoom::kRoomIdFieldNumber;
const int MsgDouShiSiRoom::kRoomTypeFieldNumber;
const int MsgDouShiSiRoom::kGameCountFieldNumber;
const int MsgDouShiSiRoom::kStateRunTimeFieldNumber;
const int MsgDouShiSiRoom::kPrivateRoomFieldNumber;
const int MsgDouShiSiRoom::kGameCircleFieldNumber;
const int MsgDouShiSiRoom::kOutCardFieldNumber;
const int MsgDouShiSiRoom::kParam1FieldNumber;
const int MsgDouShiSiRoom::kParamListFieldNumber;
const int MsgDouShiSiRoom::kGangCardFieldNumber;
const int MsgDouShiSiRoom::kTouCardFieldNumber;
const int MsgDouShiSiRoom::kEatCardFieldNumber;
const int MsgDouShiSiRoom::kShowDownInfoFieldNumber;
const int MsgDouShiSiRoom::kRoleHostFieldNumber;
const int MsgDouShiSiRoom::kRoleStateFieldNumber;
const int MsgDouShiSiRoom::kWikFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiRoom::MsgDouShiSiRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiRoom)
}

void MsgDouShiSiRoom::InitAsDefaultInstance() {
  private_room_ = const_cast< ::MsgCreatePrivateRoom*>(&::MsgCreatePrivateRoom::default_instance());
  show_down_info_ = const_cast< ::MsgDouShiSiShowDownCount*>(&::MsgDouShiSiShowDownCount::default_instance());
  role_host_ = const_cast< ::MsgDouShiSiRoleHostCount*>(&::MsgDouShiSiRoleHostCount::default_instance());
  role_state_ = const_cast< ::MsgDouShiSiRoleStateCount*>(&::MsgDouShiSiRoleStateCount::default_instance());
}

MsgDouShiSiRoom::MsgDouShiSiRoom(const MsgDouShiSiRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiRoom)
}

void MsgDouShiSiRoom::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  room_state_ = 0;
  banker_id_ = GOOGLE_ULONGLONG(0);
  action_id_ = GOOGLE_ULONGLONG(0);
  surplus_hand_num_ = 0u;
  send_card_ = 0u;
  room_id_ = GOOGLE_ULONGLONG(0);
  room_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_count_ = 0u;
  state_run_time_ = 0u;
  private_room_ = NULL;
  game_circle_ = 0u;
  out_card_ = 0u;
  param1_ = 0u;
  show_down_info_ = NULL;
  role_host_ = NULL;
  role_state_ = NULL;
  wik_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiRoom::~MsgDouShiSiRoom() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiRoom)
  SharedDtor();
}

void MsgDouShiSiRoom::SharedDtor() {
  if (room_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_type_;
  }
  if (this != default_instance_) {
    delete private_room_;
    delete show_down_info_;
    delete role_host_;
    delete role_state_;
  }
}

void MsgDouShiSiRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiRoom_descriptor_;
}

const MsgDouShiSiRoom& MsgDouShiSiRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiRoom* MsgDouShiSiRoom::default_instance_ = NULL;

MsgDouShiSiRoom* MsgDouShiSiRoom::New() const {
  return new MsgDouShiSiRoom;
}

void MsgDouShiSiRoom::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiRoom*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 237) {
    ZR_(banker_id_, action_id_);
    ZR_(room_id_, send_card_);
  }
  if (_has_bits_[8 / 32] & 32512) {
    ZR_(state_run_time_, param1_);
    if (has_room_type()) {
      if (room_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        room_type_->clear();
      }
    }
    game_count_ = 0u;
    if (has_private_room()) {
      if (private_room_ != NULL) private_room_->::MsgCreatePrivateRoom::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 7864320) {
    if (has_show_down_info()) {
      if (show_down_info_ != NULL) show_down_info_->::MsgDouShiSiShowDownCount::Clear();
    }
    if (has_role_host()) {
      if (role_host_ != NULL) role_host_->::MsgDouShiSiRoleHostCount::Clear();
    }
    if (has_role_state()) {
      if (role_state_ != NULL) role_state_->::MsgDouShiSiRoleStateCount::Clear();
    }
    wik_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  player_list_.Clear();
  hand_card_.Clear();
  param_list_.Clear();
  gang_card_.Clear();
  tou_card_.Clear();
  eat_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TDouShiSiState room_state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TDouShiSiState_IsValid(value)) {
            set_room_state(static_cast< ::TDouShiSiState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_player_list;
        break;
      }

      // repeated .MsgDouShiSiPlayer player_list = 2;
      case 2: {
        if (tag == 18) {
         parse_player_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_player_list;
        if (input->ExpectTag(24)) goto parse_banker_id;
        break;
      }

      // optional uint64 banker_id = 3;
      case 3: {
        if (tag == 24) {
         parse_banker_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &banker_id_)));
          set_has_banker_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_action_id;
        break;
      }

      // optional uint64 action_id = 4;
      case 4: {
        if (tag == 32) {
         parse_action_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &action_id_)));
          set_has_action_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_hand_card;
        break;
      }

      // repeated uint32 hand_card = 5;
      case 5: {
        if (tag == 40) {
         parse_hand_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_hand_card())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_hand_card;
        if (input->ExpectTag(48)) goto parse_surplus_hand_num;
        break;
      }

      // optional uint32 surplus_hand_num = 6;
      case 6: {
        if (tag == 48) {
         parse_surplus_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &surplus_hand_num_)));
          set_has_surplus_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_send_card;
        break;
      }

      // optional uint32 send_card = 7;
      case 7: {
        if (tag == 56) {
         parse_send_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &send_card_)));
          set_has_send_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_room_id;
        break;
      }

      // optional uint64 room_id = 8;
      case 8: {
        if (tag == 64) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_room_type;
        break;
      }

      // optional string room_type = 9;
      case 9: {
        if (tag == 74) {
         parse_room_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->room_type().data(), this->room_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "room_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_game_count;
        break;
      }

      // optional uint32 game_count = 10;
      case 10: {
        if (tag == 80) {
         parse_game_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_count_)));
          set_has_game_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_state_run_time;
        break;
      }

      // optional uint32 state_run_time = 11;
      case 11: {
        if (tag == 88) {
         parse_state_run_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_run_time_)));
          set_has_state_run_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_private_room;
        break;
      }

      // optional .MsgCreatePrivateRoom private_room = 12;
      case 12: {
        if (tag == 98) {
         parse_private_room:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_private_room()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_game_circle;
        break;
      }

      // optional uint32 game_circle = 13;
      case 13: {
        if (tag == 104) {
         parse_game_circle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_circle_)));
          set_has_game_circle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_out_card;
        break;
      }

      // optional uint32 out_card = 14;
      case 14: {
        if (tag == 112) {
         parse_out_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_card_)));
          set_has_out_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_param1;
        break;
      }

      // optional uint32 param1 = 15;
      case 15: {
        if (tag == 120) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_param_list;
        break;
      }

      // repeated uint32 param_list = 16;
      case 16: {
        if (tag == 128) {
         parse_param_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 128, input, this->mutable_param_list())));
        } else if (tag == 130) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_param_list;
        if (input->ExpectTag(136)) goto parse_gang_card;
        break;
      }

      // repeated uint32 gang_card = 17;
      case 17: {
        if (tag == 136) {
         parse_gang_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 136, input, this->mutable_gang_card())));
        } else if (tag == 138) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gang_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_gang_card;
        if (input->ExpectTag(144)) goto parse_tou_card;
        break;
      }

      // repeated uint32 tou_card = 18;
      case 18: {
        if (tag == 144) {
         parse_tou_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 144, input, this->mutable_tou_card())));
        } else if (tag == 146) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tou_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_tou_card;
        if (input->ExpectTag(152)) goto parse_eat_card;
        break;
      }

      // repeated uint32 eat_card = 19;
      case 19: {
        if (tag == 152) {
         parse_eat_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 152, input, this->mutable_eat_card())));
        } else if (tag == 154) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_eat_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_eat_card;
        if (input->ExpectTag(162)) goto parse_show_down_info;
        break;
      }

      // optional .MsgDouShiSiShowDownCount show_down_info = 20;
      case 20: {
        if (tag == 162) {
         parse_show_down_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_show_down_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_role_host;
        break;
      }

      // optional .MsgDouShiSiRoleHostCount role_host = 21;
      case 21: {
        if (tag == 170) {
         parse_role_host:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_host()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_role_state;
        break;
      }

      // optional .MsgDouShiSiRoleStateCount role_state = 22;
      case 22: {
        if (tag == 178) {
         parse_role_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 23;
      case 23: {
        if (tag == 184) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiRoom)
  return false;
#undef DO_
}

void MsgDouShiSiRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiRoom)
  // optional .TDouShiSiState room_state = 1;
  if (has_room_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->room_state(), output);
  }

  // repeated .MsgDouShiSiPlayer player_list = 2;
  for (int i = 0; i < this->player_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player_list(i), output);
  }

  // optional uint64 banker_id = 3;
  if (has_banker_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->banker_id(), output);
  }

  // optional uint64 action_id = 4;
  if (has_action_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->action_id(), output);
  }

  // repeated uint32 hand_card = 5;
  for (int i = 0; i < this->hand_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->hand_card(i), output);
  }

  // optional uint32 surplus_hand_num = 6;
  if (has_surplus_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->surplus_hand_num(), output);
  }

  // optional uint32 send_card = 7;
  if (has_send_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->send_card(), output);
  }

  // optional uint64 room_id = 8;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->room_id(), output);
  }

  // optional string room_type = 9;
  if (has_room_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_type().data(), this->room_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "room_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->room_type(), output);
  }

  // optional uint32 game_count = 10;
  if (has_game_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->game_count(), output);
  }

  // optional uint32 state_run_time = 11;
  if (has_state_run_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->state_run_time(), output);
  }

  // optional .MsgCreatePrivateRoom private_room = 12;
  if (has_private_room()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->private_room(), output);
  }

  // optional uint32 game_circle = 13;
  if (has_game_circle()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->game_circle(), output);
  }

  // optional uint32 out_card = 14;
  if (has_out_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->out_card(), output);
  }

  // optional uint32 param1 = 15;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->param1(), output);
  }

  // repeated uint32 param_list = 16;
  for (int i = 0; i < this->param_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      16, this->param_list(i), output);
  }

  // repeated uint32 gang_card = 17;
  for (int i = 0; i < this->gang_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      17, this->gang_card(i), output);
  }

  // repeated uint32 tou_card = 18;
  for (int i = 0; i < this->tou_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      18, this->tou_card(i), output);
  }

  // repeated uint32 eat_card = 19;
  for (int i = 0; i < this->eat_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      19, this->eat_card(i), output);
  }

  // optional .MsgDouShiSiShowDownCount show_down_info = 20;
  if (has_show_down_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->show_down_info(), output);
  }

  // optional .MsgDouShiSiRoleHostCount role_host = 21;
  if (has_role_host()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->role_host(), output);
  }

  // optional .MsgDouShiSiRoleStateCount role_state = 22;
  if (has_role_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->role_state(), output);
  }

  // optional uint32 wik = 23;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->wik(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiRoom)
}

::google::protobuf::uint8* MsgDouShiSiRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiRoom)
  // optional .TDouShiSiState room_state = 1;
  if (has_room_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->room_state(), target);
  }

  // repeated .MsgDouShiSiPlayer player_list = 2;
  for (int i = 0; i < this->player_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->player_list(i), target);
  }

  // optional uint64 banker_id = 3;
  if (has_banker_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->banker_id(), target);
  }

  // optional uint64 action_id = 4;
  if (has_action_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->action_id(), target);
  }

  // repeated uint32 hand_card = 5;
  for (int i = 0; i < this->hand_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->hand_card(i), target);
  }

  // optional uint32 surplus_hand_num = 6;
  if (has_surplus_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->surplus_hand_num(), target);
  }

  // optional uint32 send_card = 7;
  if (has_send_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->send_card(), target);
  }

  // optional uint64 room_id = 8;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->room_id(), target);
  }

  // optional string room_type = 9;
  if (has_room_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_type().data(), this->room_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "room_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->room_type(), target);
  }

  // optional uint32 game_count = 10;
  if (has_game_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->game_count(), target);
  }

  // optional uint32 state_run_time = 11;
  if (has_state_run_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->state_run_time(), target);
  }

  // optional .MsgCreatePrivateRoom private_room = 12;
  if (has_private_room()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->private_room(), target);
  }

  // optional uint32 game_circle = 13;
  if (has_game_circle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->game_circle(), target);
  }

  // optional uint32 out_card = 14;
  if (has_out_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->out_card(), target);
  }

  // optional uint32 param1 = 15;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->param1(), target);
  }

  // repeated uint32 param_list = 16;
  for (int i = 0; i < this->param_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(16, this->param_list(i), target);
  }

  // repeated uint32 gang_card = 17;
  for (int i = 0; i < this->gang_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(17, this->gang_card(i), target);
  }

  // repeated uint32 tou_card = 18;
  for (int i = 0; i < this->tou_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(18, this->tou_card(i), target);
  }

  // repeated uint32 eat_card = 19;
  for (int i = 0; i < this->eat_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(19, this->eat_card(i), target);
  }

  // optional .MsgDouShiSiShowDownCount show_down_info = 20;
  if (has_show_down_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->show_down_info(), target);
  }

  // optional .MsgDouShiSiRoleHostCount role_host = 21;
  if (has_role_host()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->role_host(), target);
  }

  // optional .MsgDouShiSiRoleStateCount role_state = 22;
  if (has_role_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->role_state(), target);
  }

  // optional uint32 wik = 23;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->wik(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiRoom)
  return target;
}

int MsgDouShiSiRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .TDouShiSiState room_state = 1;
    if (has_room_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_state());
    }

    // optional uint64 banker_id = 3;
    if (has_banker_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->banker_id());
    }

    // optional uint64 action_id = 4;
    if (has_action_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->action_id());
    }

    // optional uint32 surplus_hand_num = 6;
    if (has_surplus_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->surplus_hand_num());
    }

    // optional uint32 send_card = 7;
    if (has_send_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->send_card());
    }

    // optional uint64 room_id = 8;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->room_id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string room_type = 9;
    if (has_room_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->room_type());
    }

    // optional uint32 game_count = 10;
    if (has_game_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_count());
    }

    // optional uint32 state_run_time = 11;
    if (has_state_run_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state_run_time());
    }

    // optional .MsgCreatePrivateRoom private_room = 12;
    if (has_private_room()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->private_room());
    }

    // optional uint32 game_circle = 13;
    if (has_game_circle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_circle());
    }

    // optional uint32 out_card = 14;
    if (has_out_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->out_card());
    }

    // optional uint32 param1 = 15;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param1());
    }

  }
  if (_has_bits_[19 / 32] & (0xffu << (19 % 32))) {
    // optional .MsgDouShiSiShowDownCount show_down_info = 20;
    if (has_show_down_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->show_down_info());
    }

    // optional .MsgDouShiSiRoleHostCount role_host = 21;
    if (has_role_host()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->role_host());
    }

    // optional .MsgDouShiSiRoleStateCount role_state = 22;
    if (has_role_state()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->role_state());
    }

    // optional uint32 wik = 23;
    if (has_wik()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

  }
  // repeated .MsgDouShiSiPlayer player_list = 2;
  total_size += 1 * this->player_list_size();
  for (int i = 0; i < this->player_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player_list(i));
  }

  // repeated uint32 hand_card = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_card(i));
    }
    total_size += 1 * this->hand_card_size() + data_size;
  }

  // repeated uint32 param_list = 16;
  {
    int data_size = 0;
    for (int i = 0; i < this->param_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->param_list(i));
    }
    total_size += 2 * this->param_list_size() + data_size;
  }

  // repeated uint32 gang_card = 17;
  {
    int data_size = 0;
    for (int i = 0; i < this->gang_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gang_card(i));
    }
    total_size += 2 * this->gang_card_size() + data_size;
  }

  // repeated uint32 tou_card = 18;
  {
    int data_size = 0;
    for (int i = 0; i < this->tou_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->tou_card(i));
    }
    total_size += 2 * this->tou_card_size() + data_size;
  }

  // repeated uint32 eat_card = 19;
  {
    int data_size = 0;
    for (int i = 0; i < this->eat_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->eat_card(i));
    }
    total_size += 2 * this->eat_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiRoom::MergeFrom(const MsgDouShiSiRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_list_.MergeFrom(from.player_list_);
  hand_card_.MergeFrom(from.hand_card_);
  param_list_.MergeFrom(from.param_list_);
  gang_card_.MergeFrom(from.gang_card_);
  tou_card_.MergeFrom(from.tou_card_);
  eat_card_.MergeFrom(from.eat_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_state()) {
      set_room_state(from.room_state());
    }
    if (from.has_banker_id()) {
      set_banker_id(from.banker_id());
    }
    if (from.has_action_id()) {
      set_action_id(from.action_id());
    }
    if (from.has_surplus_hand_num()) {
      set_surplus_hand_num(from.surplus_hand_num());
    }
    if (from.has_send_card()) {
      set_send_card(from.send_card());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_room_type()) {
      set_room_type(from.room_type());
    }
    if (from.has_game_count()) {
      set_game_count(from.game_count());
    }
    if (from.has_state_run_time()) {
      set_state_run_time(from.state_run_time());
    }
    if (from.has_private_room()) {
      mutable_private_room()->::MsgCreatePrivateRoom::MergeFrom(from.private_room());
    }
    if (from.has_game_circle()) {
      set_game_circle(from.game_circle());
    }
    if (from.has_out_card()) {
      set_out_card(from.out_card());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
  }
  if (from._has_bits_[19 / 32] & (0xffu << (19 % 32))) {
    if (from.has_show_down_info()) {
      mutable_show_down_info()->::MsgDouShiSiShowDownCount::MergeFrom(from.show_down_info());
    }
    if (from.has_role_host()) {
      mutable_role_host()->::MsgDouShiSiRoleHostCount::MergeFrom(from.role_host());
    }
    if (from.has_role_state()) {
      mutable_role_state()->::MsgDouShiSiRoleStateCount::MergeFrom(from.role_state());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiRoom::CopyFrom(const MsgDouShiSiRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiRoom::IsInitialized() const {

  return true;
}

void MsgDouShiSiRoom::Swap(MsgDouShiSiRoom* other) {
  if (other != this) {
    std::swap(room_state_, other->room_state_);
    player_list_.Swap(&other->player_list_);
    std::swap(banker_id_, other->banker_id_);
    std::swap(action_id_, other->action_id_);
    hand_card_.Swap(&other->hand_card_);
    std::swap(surplus_hand_num_, other->surplus_hand_num_);
    std::swap(send_card_, other->send_card_);
    std::swap(room_id_, other->room_id_);
    std::swap(room_type_, other->room_type_);
    std::swap(game_count_, other->game_count_);
    std::swap(state_run_time_, other->state_run_time_);
    std::swap(private_room_, other->private_room_);
    std::swap(game_circle_, other->game_circle_);
    std::swap(out_card_, other->out_card_);
    std::swap(param1_, other->param1_);
    param_list_.Swap(&other->param_list_);
    gang_card_.Swap(&other->gang_card_);
    tou_card_.Swap(&other->tou_card_);
    eat_card_.Swap(&other->eat_card_);
    std::swap(show_down_info_, other->show_down_info_);
    std::swap(role_host_, other->role_host_);
    std::swap(role_state_, other->role_state_);
    std::swap(wik_, other->wik_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiRoom_descriptor_;
  metadata.reflection = MsgDouShiSiRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiPrivateRoom::kSpecialKindFieldNumber;
const int MsgDouShiSiPrivateRoom::kConsumeIdFieldNumber;
const int MsgDouShiSiPrivateRoom::kScoreFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiPrivateRoom::MsgDouShiSiPrivateRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiPrivateRoom)
}

void MsgDouShiSiPrivateRoom::InitAsDefaultInstance() {
}

MsgDouShiSiPrivateRoom::MsgDouShiSiPrivateRoom(const MsgDouShiSiPrivateRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiPrivateRoom)
}

void MsgDouShiSiPrivateRoom::SharedCtor() {
  _cached_size_ = 0;
  special_kind_ = 0u;
  consume_id_ = 0u;
  score_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiPrivateRoom::~MsgDouShiSiPrivateRoom() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiPrivateRoom)
  SharedDtor();
}

void MsgDouShiSiPrivateRoom::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiPrivateRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiPrivateRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiPrivateRoom_descriptor_;
}

const MsgDouShiSiPrivateRoom& MsgDouShiSiPrivateRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiPrivateRoom* MsgDouShiSiPrivateRoom::default_instance_ = NULL;

MsgDouShiSiPrivateRoom* MsgDouShiSiPrivateRoom::New() const {
  return new MsgDouShiSiPrivateRoom;
}

void MsgDouShiSiPrivateRoom::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiPrivateRoom*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(special_kind_, score_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiPrivateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiPrivateRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 special_kind = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &special_kind_)));
          set_has_special_kind();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_consume_id;
        break;
      }

      // optional uint32 consume_id = 2;
      case 2: {
        if (tag == 16) {
         parse_consume_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consume_id_)));
          set_has_consume_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_score;
        break;
      }

      // optional uint32 score = 3;
      case 3: {
        if (tag == 24) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiPrivateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiPrivateRoom)
  return false;
#undef DO_
}

void MsgDouShiSiPrivateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiPrivateRoom)
  // optional uint32 special_kind = 1;
  if (has_special_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->special_kind(), output);
  }

  // optional uint32 consume_id = 2;
  if (has_consume_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->consume_id(), output);
  }

  // optional uint32 score = 3;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiPrivateRoom)
}

::google::protobuf::uint8* MsgDouShiSiPrivateRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiPrivateRoom)
  // optional uint32 special_kind = 1;
  if (has_special_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->special_kind(), target);
  }

  // optional uint32 consume_id = 2;
  if (has_consume_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->consume_id(), target);
  }

  // optional uint32 score = 3;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiPrivateRoom)
  return target;
}

int MsgDouShiSiPrivateRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 special_kind = 1;
    if (has_special_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->special_kind());
    }

    // optional uint32 consume_id = 2;
    if (has_consume_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consume_id());
    }

    // optional uint32 score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiPrivateRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiPrivateRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiPrivateRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiPrivateRoom::MergeFrom(const MsgDouShiSiPrivateRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_special_kind()) {
      set_special_kind(from.special_kind());
    }
    if (from.has_consume_id()) {
      set_consume_id(from.consume_id());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiPrivateRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiPrivateRoom::CopyFrom(const MsgDouShiSiPrivateRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiPrivateRoom::IsInitialized() const {

  return true;
}

void MsgDouShiSiPrivateRoom::Swap(MsgDouShiSiPrivateRoom* other) {
  if (other != this) {
    std::swap(special_kind_, other->special_kind_);
    std::swap(consume_id_, other->consume_id_);
    std::swap(score_, other->score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiPrivateRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiPrivateRoom_descriptor_;
  metadata.reflection = MsgDouShiSiPrivateRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiWeaveCard::kCarddataFieldNumber;
const int MsgDouShiSiWeaveCard::kHandNumFieldNumber;
const int MsgDouShiSiWeaveCard::kHandCardFieldNumber;
const int MsgDouShiSiWeaveCard::kRoleScoreFieldNumber;
const int MsgDouShiSiWeaveCard::kPlayerListFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiWeaveCard::MsgDouShiSiWeaveCard()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiWeaveCard)
}

void MsgDouShiSiWeaveCard::InitAsDefaultInstance() {
}

MsgDouShiSiWeaveCard::MsgDouShiSiWeaveCard(const MsgDouShiSiWeaveCard& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiWeaveCard)
}

void MsgDouShiSiWeaveCard::SharedCtor() {
  _cached_size_ = 0;
  hand_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiWeaveCard::~MsgDouShiSiWeaveCard() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiWeaveCard)
  SharedDtor();
}

void MsgDouShiSiWeaveCard::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiWeaveCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiWeaveCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiWeaveCard_descriptor_;
}

const MsgDouShiSiWeaveCard& MsgDouShiSiWeaveCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiWeaveCard* MsgDouShiSiWeaveCard::default_instance_ = NULL;

MsgDouShiSiWeaveCard* MsgDouShiSiWeaveCard::New() const {
  return new MsgDouShiSiWeaveCard;
}

void MsgDouShiSiWeaveCard::Clear() {
  hand_num_ = 0u;
  carddata_.Clear();
  hand_card_.Clear();
  role_score_.Clear();
  player_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiWeaveCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiWeaveCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgDouShiSiCardData carddata = 1;
      case 1: {
        if (tag == 10) {
         parse_carddata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_carddata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_carddata;
        if (input->ExpectTag(16)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 2;
      case 2: {
        if (tag == 16) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hand_card;
        break;
      }

      // repeated uint32 hand_card = 3;
      case 3: {
        if (tag == 24) {
         parse_hand_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_hand_card())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hand_card;
        if (input->ExpectTag(34)) goto parse_role_score;
        break;
      }

      // repeated .MsgDouShiSiRoleScore role_score = 4;
      case 4: {
        if (tag == 34) {
         parse_role_score:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_score()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_role_score;
        if (input->ExpectTag(42)) goto parse_player_list;
        break;
      }

      // repeated .MsgDouShiSiPlayer player_list = 5;
      case 5: {
        if (tag == 42) {
         parse_player_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_player_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiWeaveCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiWeaveCard)
  return false;
#undef DO_
}

void MsgDouShiSiWeaveCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiWeaveCard)
  // repeated .MsgDouShiSiCardData carddata = 1;
  for (int i = 0; i < this->carddata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->carddata(i), output);
  }

  // optional uint32 hand_num = 2;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hand_num(), output);
  }

  // repeated uint32 hand_card = 3;
  for (int i = 0; i < this->hand_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->hand_card(i), output);
  }

  // repeated .MsgDouShiSiRoleScore role_score = 4;
  for (int i = 0; i < this->role_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->role_score(i), output);
  }

  // repeated .MsgDouShiSiPlayer player_list = 5;
  for (int i = 0; i < this->player_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->player_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiWeaveCard)
}

::google::protobuf::uint8* MsgDouShiSiWeaveCard::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiWeaveCard)
  // repeated .MsgDouShiSiCardData carddata = 1;
  for (int i = 0; i < this->carddata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->carddata(i), target);
  }

  // optional uint32 hand_num = 2;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hand_num(), target);
  }

  // repeated uint32 hand_card = 3;
  for (int i = 0; i < this->hand_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->hand_card(i), target);
  }

  // repeated .MsgDouShiSiRoleScore role_score = 4;
  for (int i = 0; i < this->role_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->role_score(i), target);
  }

  // repeated .MsgDouShiSiPlayer player_list = 5;
  for (int i = 0; i < this->player_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->player_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiWeaveCard)
  return target;
}

int MsgDouShiSiWeaveCard::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 hand_num = 2;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

  }
  // repeated .MsgDouShiSiCardData carddata = 1;
  total_size += 1 * this->carddata_size();
  for (int i = 0; i < this->carddata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->carddata(i));
  }

  // repeated uint32 hand_card = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_card(i));
    }
    total_size += 1 * this->hand_card_size() + data_size;
  }

  // repeated .MsgDouShiSiRoleScore role_score = 4;
  total_size += 1 * this->role_score_size();
  for (int i = 0; i < this->role_score_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_score(i));
  }

  // repeated .MsgDouShiSiPlayer player_list = 5;
  total_size += 1 * this->player_list_size();
  for (int i = 0; i < this->player_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiWeaveCard::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiWeaveCard* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiWeaveCard*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiWeaveCard::MergeFrom(const MsgDouShiSiWeaveCard& from) {
  GOOGLE_CHECK_NE(&from, this);
  carddata_.MergeFrom(from.carddata_);
  hand_card_.MergeFrom(from.hand_card_);
  role_score_.MergeFrom(from.role_score_);
  player_list_.MergeFrom(from.player_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiWeaveCard::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiWeaveCard::CopyFrom(const MsgDouShiSiWeaveCard& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiWeaveCard::IsInitialized() const {

  return true;
}

void MsgDouShiSiWeaveCard::Swap(MsgDouShiSiWeaveCard* other) {
  if (other != this) {
    carddata_.Swap(&other->carddata_);
    std::swap(hand_num_, other->hand_num_);
    hand_card_.Swap(&other->hand_card_);
    role_score_.Swap(&other->role_score_);
    player_list_.Swap(&other->player_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiWeaveCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiWeaveCard_descriptor_;
  metadata.reflection = MsgDouShiSiWeaveCard_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiFlowerData::kRoleidFieldNumber;
const int MsgDouShiSiFlowerData::kCardFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiFlowerData::MsgDouShiSiFlowerData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiFlowerData)
}

void MsgDouShiSiFlowerData::InitAsDefaultInstance() {
}

MsgDouShiSiFlowerData::MsgDouShiSiFlowerData(const MsgDouShiSiFlowerData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiFlowerData)
}

void MsgDouShiSiFlowerData::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiFlowerData::~MsgDouShiSiFlowerData() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiFlowerData)
  SharedDtor();
}

void MsgDouShiSiFlowerData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiFlowerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiFlowerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiFlowerData_descriptor_;
}

const MsgDouShiSiFlowerData& MsgDouShiSiFlowerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiFlowerData* MsgDouShiSiFlowerData::default_instance_ = NULL;

MsgDouShiSiFlowerData* MsgDouShiSiFlowerData::New() const {
  return new MsgDouShiSiFlowerData;
}

void MsgDouShiSiFlowerData::Clear() {
  roleid_ = GOOGLE_ULONGLONG(0);
  card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiFlowerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiFlowerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 roleid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_card;
        break;
      }

      // repeated uint32 card = 2;
      case 2: {
        if (tag == 16) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_card())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_card;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiFlowerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiFlowerData)
  return false;
#undef DO_
}

void MsgDouShiSiFlowerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiFlowerData)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // repeated uint32 card = 2;
  for (int i = 0; i < this->card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiFlowerData)
}

::google::protobuf::uint8* MsgDouShiSiFlowerData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiFlowerData)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // repeated uint32 card = 2;
  for (int i = 0; i < this->card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiFlowerData)
  return target;
}

int MsgDouShiSiFlowerData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

  }
  // repeated uint32 card = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->card(i));
    }
    total_size += 1 * this->card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiFlowerData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiFlowerData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiFlowerData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiFlowerData::MergeFrom(const MsgDouShiSiFlowerData& from) {
  GOOGLE_CHECK_NE(&from, this);
  card_.MergeFrom(from.card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiFlowerData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiFlowerData::CopyFrom(const MsgDouShiSiFlowerData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiFlowerData::IsInitialized() const {

  return true;
}

void MsgDouShiSiFlowerData::Swap(MsgDouShiSiFlowerData* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    card_.Swap(&other->card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiFlowerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiFlowerData_descriptor_;
  metadata.reflection = MsgDouShiSiFlowerData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiShowDown::kRoleidFieldNumber;
const int MsgDouShiSiShowDown::kMoneyFieldNumber;
const int MsgDouShiSiShowDown::kHukindFieldNumber;
const int MsgDouShiSiShowDown::kHandCardFieldNumber;
const int MsgDouShiSiShowDown::kHardFlowerFieldNumber;
const int MsgDouShiSiShowDown::kMildFlowerFieldNumber;
const int MsgDouShiSiShowDown::kBaotaFlowerFieldNumber;
const int MsgDouShiSiShowDown::kHuCardFieldNumber;
const int MsgDouShiSiShowDown::kTotalMoneyFieldNumber;
const int MsgDouShiSiShowDown::kPackScoreFieldNumber;
const int MsgDouShiSiShowDown::kTotalPackScoreFieldNumber;
const int MsgDouShiSiShowDown::kEventCountFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiShowDown::MsgDouShiSiShowDown()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiShowDown)
}

void MsgDouShiSiShowDown::InitAsDefaultInstance() {
}

MsgDouShiSiShowDown::MsgDouShiSiShowDown(const MsgDouShiSiShowDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiShowDown)
}

void MsgDouShiSiShowDown::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  money_ = GOOGLE_LONGLONG(0);
  hukind_ = 0u;
  hard_flower_ = 0u;
  mild_flower_ = 0u;
  baota_flower_ = 0u;
  hu_card_ = 0u;
  total_money_ = GOOGLE_LONGLONG(0);
  pack_score_ = GOOGLE_LONGLONG(0);
  total_pack_score_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiShowDown::~MsgDouShiSiShowDown() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiShowDown)
  SharedDtor();
}

void MsgDouShiSiShowDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiShowDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiShowDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiShowDown_descriptor_;
}

const MsgDouShiSiShowDown& MsgDouShiSiShowDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiShowDown* MsgDouShiSiShowDown::default_instance_ = NULL;

MsgDouShiSiShowDown* MsgDouShiSiShowDown::New() const {
  return new MsgDouShiSiShowDown;
}

void MsgDouShiSiShowDown::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiShowDown*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 247) {
    ZR_(roleid_, money_);
    ZR_(hukind_, baota_flower_);
    hu_card_ = 0u;
  }
  ZR_(total_money_, total_pack_score_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  hand_card_.Clear();
  event_count_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiShowDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiShowDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 roleid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_money;
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (tag == 16) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hukind;
        break;
      }

      // optional uint32 hukind = 3;
      case 3: {
        if (tag == 24) {
         parse_hukind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hukind_)));
          set_has_hukind();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hand_card;
        break;
      }

      // repeated uint32 hand_card = 4;
      case 4: {
        if (tag == 32) {
         parse_hand_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_hand_card())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hand_card;
        if (input->ExpectTag(40)) goto parse_hard_flower;
        break;
      }

      // optional uint32 hard_flower = 5;
      case 5: {
        if (tag == 40) {
         parse_hard_flower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hard_flower_)));
          set_has_hard_flower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mild_flower;
        break;
      }

      // optional uint32 mild_flower = 6;
      case 6: {
        if (tag == 48) {
         parse_mild_flower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mild_flower_)));
          set_has_mild_flower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_baota_flower;
        break;
      }

      // optional uint32 baota_flower = 7;
      case 7: {
        if (tag == 56) {
         parse_baota_flower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baota_flower_)));
          set_has_baota_flower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_hu_card;
        break;
      }

      // optional uint32 hu_card = 8;
      case 8: {
        if (tag == 64) {
         parse_hu_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hu_card_)));
          set_has_hu_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_total_money;
        break;
      }

      // optional int64 total_money = 9;
      case 9: {
        if (tag == 72) {
         parse_total_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_money_)));
          set_has_total_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_pack_score;
        break;
      }

      // optional int64 pack_score = 10;
      case 10: {
        if (tag == 80) {
         parse_pack_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pack_score_)));
          set_has_pack_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_total_pack_score;
        break;
      }

      // optional int64 total_pack_score = 11;
      case 11: {
        if (tag == 88) {
         parse_total_pack_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_pack_score_)));
          set_has_total_pack_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_event_count;
        break;
      }

      // repeated .MsgDouShiSiShowDownEvent event_count = 12;
      case 12: {
        if (tag == 98) {
         parse_event_count:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_event_count()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_event_count;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiShowDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiShowDown)
  return false;
#undef DO_
}

void MsgDouShiSiShowDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiShowDown)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int64 money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  // optional uint32 hukind = 3;
  if (has_hukind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hukind(), output);
  }

  // repeated uint32 hand_card = 4;
  for (int i = 0; i < this->hand_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->hand_card(i), output);
  }

  // optional uint32 hard_flower = 5;
  if (has_hard_flower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hard_flower(), output);
  }

  // optional uint32 mild_flower = 6;
  if (has_mild_flower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mild_flower(), output);
  }

  // optional uint32 baota_flower = 7;
  if (has_baota_flower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->baota_flower(), output);
  }

  // optional uint32 hu_card = 8;
  if (has_hu_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->hu_card(), output);
  }

  // optional int64 total_money = 9;
  if (has_total_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->total_money(), output);
  }

  // optional int64 pack_score = 10;
  if (has_pack_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->pack_score(), output);
  }

  // optional int64 total_pack_score = 11;
  if (has_total_pack_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->total_pack_score(), output);
  }

  // repeated .MsgDouShiSiShowDownEvent event_count = 12;
  for (int i = 0; i < this->event_count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->event_count(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiShowDown)
}

::google::protobuf::uint8* MsgDouShiSiShowDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiShowDown)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int64 money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  // optional uint32 hukind = 3;
  if (has_hukind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hukind(), target);
  }

  // repeated uint32 hand_card = 4;
  for (int i = 0; i < this->hand_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->hand_card(i), target);
  }

  // optional uint32 hard_flower = 5;
  if (has_hard_flower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hard_flower(), target);
  }

  // optional uint32 mild_flower = 6;
  if (has_mild_flower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mild_flower(), target);
  }

  // optional uint32 baota_flower = 7;
  if (has_baota_flower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->baota_flower(), target);
  }

  // optional uint32 hu_card = 8;
  if (has_hu_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->hu_card(), target);
  }

  // optional int64 total_money = 9;
  if (has_total_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->total_money(), target);
  }

  // optional int64 pack_score = 10;
  if (has_pack_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->pack_score(), target);
  }

  // optional int64 total_pack_score = 11;
  if (has_total_pack_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->total_pack_score(), target);
  }

  // repeated .MsgDouShiSiShowDownEvent event_count = 12;
  for (int i = 0; i < this->event_count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->event_count(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiShowDown)
  return target;
}

int MsgDouShiSiShowDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional uint32 hukind = 3;
    if (has_hukind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hukind());
    }

    // optional uint32 hard_flower = 5;
    if (has_hard_flower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hard_flower());
    }

    // optional uint32 mild_flower = 6;
    if (has_mild_flower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mild_flower());
    }

    // optional uint32 baota_flower = 7;
    if (has_baota_flower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baota_flower());
    }

    // optional uint32 hu_card = 8;
    if (has_hu_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hu_card());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 total_money = 9;
    if (has_total_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total_money());
    }

    // optional int64 pack_score = 10;
    if (has_pack_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pack_score());
    }

    // optional int64 total_pack_score = 11;
    if (has_total_pack_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total_pack_score());
    }

  }
  // repeated uint32 hand_card = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_card(i));
    }
    total_size += 1 * this->hand_card_size() + data_size;
  }

  // repeated .MsgDouShiSiShowDownEvent event_count = 12;
  total_size += 1 * this->event_count_size();
  for (int i = 0; i < this->event_count_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->event_count(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiShowDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiShowDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiShowDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiShowDown::MergeFrom(const MsgDouShiSiShowDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  hand_card_.MergeFrom(from.hand_card_);
  event_count_.MergeFrom(from.event_count_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_hukind()) {
      set_hukind(from.hukind());
    }
    if (from.has_hard_flower()) {
      set_hard_flower(from.hard_flower());
    }
    if (from.has_mild_flower()) {
      set_mild_flower(from.mild_flower());
    }
    if (from.has_baota_flower()) {
      set_baota_flower(from.baota_flower());
    }
    if (from.has_hu_card()) {
      set_hu_card(from.hu_card());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_total_money()) {
      set_total_money(from.total_money());
    }
    if (from.has_pack_score()) {
      set_pack_score(from.pack_score());
    }
    if (from.has_total_pack_score()) {
      set_total_pack_score(from.total_pack_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiShowDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiShowDown::CopyFrom(const MsgDouShiSiShowDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiShowDown::IsInitialized() const {

  return true;
}

void MsgDouShiSiShowDown::Swap(MsgDouShiSiShowDown* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    std::swap(money_, other->money_);
    std::swap(hukind_, other->hukind_);
    hand_card_.Swap(&other->hand_card_);
    std::swap(hard_flower_, other->hard_flower_);
    std::swap(mild_flower_, other->mild_flower_);
    std::swap(baota_flower_, other->baota_flower_);
    std::swap(hu_card_, other->hu_card_);
    std::swap(total_money_, other->total_money_);
    std::swap(pack_score_, other->pack_score_);
    std::swap(total_pack_score_, other->total_pack_score_);
    event_count_.Swap(&other->event_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiShowDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiShowDown_descriptor_;
  metadata.reflection = MsgDouShiSiShowDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiShowDownEvent::kEventIdFieldNumber;
const int MsgDouShiSiShowDownEvent::kCountFieldNumber;
const int MsgDouShiSiShowDownEvent::kScoreFieldNumber;
const int MsgDouShiSiShowDownEvent::kScoreCountFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiShowDownEvent::MsgDouShiSiShowDownEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiShowDownEvent)
}

void MsgDouShiSiShowDownEvent::InitAsDefaultInstance() {
}

MsgDouShiSiShowDownEvent::MsgDouShiSiShowDownEvent(const MsgDouShiSiShowDownEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiShowDownEvent)
}

void MsgDouShiSiShowDownEvent::SharedCtor() {
  _cached_size_ = 0;
  event_id_ = 0u;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiShowDownEvent::~MsgDouShiSiShowDownEvent() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiShowDownEvent)
  SharedDtor();
}

void MsgDouShiSiShowDownEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiShowDownEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiShowDownEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiShowDownEvent_descriptor_;
}

const MsgDouShiSiShowDownEvent& MsgDouShiSiShowDownEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiShowDownEvent* MsgDouShiSiShowDownEvent::default_instance_ = NULL;

MsgDouShiSiShowDownEvent* MsgDouShiSiShowDownEvent::New() const {
  return new MsgDouShiSiShowDownEvent;
}

void MsgDouShiSiShowDownEvent::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiShowDownEvent*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(event_id_, count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  score_.Clear();
  score_count_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiShowDownEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiShowDownEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 event_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_id_)));
          set_has_event_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_score;
        break;
      }

      // repeated int32 score = 3;
      case 3: {
        if (tag == 24) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_score())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_score())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_score;
        if (input->ExpectTag(32)) goto parse_score_count;
        break;
      }

      // repeated uint32 score_count = 4;
      case 4: {
        if (tag == 32) {
         parse_score_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_score_count())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_score_count())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_score_count;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiShowDownEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiShowDownEvent)
  return false;
#undef DO_
}

void MsgDouShiSiShowDownEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiShowDownEvent)
  // optional uint32 event_id = 1;
  if (has_event_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->event_id(), output);
  }

  // optional uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated int32 score = 3;
  for (int i = 0; i < this->score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->score(i), output);
  }

  // repeated uint32 score_count = 4;
  for (int i = 0; i < this->score_count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->score_count(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiShowDownEvent)
}

::google::protobuf::uint8* MsgDouShiSiShowDownEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiShowDownEvent)
  // optional uint32 event_id = 1;
  if (has_event_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->event_id(), target);
  }

  // optional uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated int32 score = 3;
  for (int i = 0; i < this->score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->score(i), target);
  }

  // repeated uint32 score_count = 4;
  for (int i = 0; i < this->score_count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->score_count(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiShowDownEvent)
  return target;
}

int MsgDouShiSiShowDownEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 event_id = 1;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_id());
    }

    // optional uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  // repeated int32 score = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->score_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->score(i));
    }
    total_size += 1 * this->score_size() + data_size;
  }

  // repeated uint32 score_count = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->score_count_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->score_count(i));
    }
    total_size += 1 * this->score_count_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiShowDownEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiShowDownEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiShowDownEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiShowDownEvent::MergeFrom(const MsgDouShiSiShowDownEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  score_.MergeFrom(from.score_);
  score_count_.MergeFrom(from.score_count_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_id()) {
      set_event_id(from.event_id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiShowDownEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiShowDownEvent::CopyFrom(const MsgDouShiSiShowDownEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiShowDownEvent::IsInitialized() const {

  return true;
}

void MsgDouShiSiShowDownEvent::Swap(MsgDouShiSiShowDownEvent* other) {
  if (other != this) {
    std::swap(event_id_, other->event_id_);
    std::swap(count_, other->count_);
    score_.Swap(&other->score_);
    score_count_.Swap(&other->score_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiShowDownEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiShowDownEvent_descriptor_;
  metadata.reflection = MsgDouShiSiShowDownEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiShowDownCount::kShowdownListFieldNumber;
const int MsgDouShiSiShowDownCount::kRoomStateFieldNumber;
const int MsgDouShiSiShowDownCount::kGameCountFieldNumber;
const int MsgDouShiSiShowDownCount::kGameOverFieldNumber;
const int MsgDouShiSiShowDownCount::kOtherCardFieldNumber;
const int MsgDouShiSiShowDownCount::kOtherCountFieldNumber;
const int MsgDouShiSiShowDownCount::kTimeFieldNumber;
const int MsgDouShiSiShowDownCount::kParam1FieldNumber;
const int MsgDouShiSiShowDownCount::kHuStateFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiShowDownCount::MsgDouShiSiShowDownCount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiShowDownCount)
}

void MsgDouShiSiShowDownCount::InitAsDefaultInstance() {
}

MsgDouShiSiShowDownCount::MsgDouShiSiShowDownCount(const MsgDouShiSiShowDownCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiShowDownCount)
}

void MsgDouShiSiShowDownCount::SharedCtor() {
  _cached_size_ = 0;
  room_state_ = 0;
  game_count_ = 0u;
  game_over_ = false;
  other_count_ = 0u;
  time_ = 0u;
  param1_ = 0u;
  hu_state_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiShowDownCount::~MsgDouShiSiShowDownCount() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiShowDownCount)
  SharedDtor();
}

void MsgDouShiSiShowDownCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiShowDownCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiShowDownCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiShowDownCount_descriptor_;
}

const MsgDouShiSiShowDownCount& MsgDouShiSiShowDownCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiShowDownCount* MsgDouShiSiShowDownCount::default_instance_ = NULL;

MsgDouShiSiShowDownCount* MsgDouShiSiShowDownCount::New() const {
  return new MsgDouShiSiShowDownCount;
}

void MsgDouShiSiShowDownCount::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiShowDownCount*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 238) {
    ZR_(room_state_, game_count_);
    ZR_(game_over_, param1_);
  }
  hu_state_ = 0u;

#undef OFFSET_OF_FIELD_
#undef ZR_

  showdown_list_.Clear();
  other_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiShowDownCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiShowDownCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgDouShiSiShowDown showdown_list = 1;
      case 1: {
        if (tag == 10) {
         parse_showdown_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_showdown_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_showdown_list;
        if (input->ExpectTag(16)) goto parse_room_state;
        break;
      }

      // optional .TDouShiSiState room_state = 2;
      case 2: {
        if (tag == 16) {
         parse_room_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TDouShiSiState_IsValid(value)) {
            set_room_state(static_cast< ::TDouShiSiState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_game_count;
        break;
      }

      // optional uint32 game_count = 3;
      case 3: {
        if (tag == 24) {
         parse_game_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_count_)));
          set_has_game_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_game_over;
        break;
      }

      // optional bool game_over = 4;
      case 4: {
        if (tag == 32) {
         parse_game_over:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &game_over_)));
          set_has_game_over();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_other_card;
        break;
      }

      // repeated uint32 other_card = 5;
      case 5: {
        if (tag == 40) {
         parse_other_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_other_card())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_other_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_other_card;
        if (input->ExpectTag(48)) goto parse_other_count;
        break;
      }

      // optional uint32 other_count = 6;
      case 6: {
        if (tag == 48) {
         parse_other_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &other_count_)));
          set_has_other_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_time;
        break;
      }

      // optional uint32 time = 7;
      case 7: {
        if (tag == 56) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_param1;
        break;
      }

      // optional uint32 param1 = 8;
      case 8: {
        if (tag == 64) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_hu_state;
        break;
      }

      // optional uint32 hu_state = 9;
      case 9: {
        if (tag == 72) {
         parse_hu_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hu_state_)));
          set_has_hu_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiShowDownCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiShowDownCount)
  return false;
#undef DO_
}

void MsgDouShiSiShowDownCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiShowDownCount)
  // repeated .MsgDouShiSiShowDown showdown_list = 1;
  for (int i = 0; i < this->showdown_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->showdown_list(i), output);
  }

  // optional .TDouShiSiState room_state = 2;
  if (has_room_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->room_state(), output);
  }

  // optional uint32 game_count = 3;
  if (has_game_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_count(), output);
  }

  // optional bool game_over = 4;
  if (has_game_over()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->game_over(), output);
  }

  // repeated uint32 other_card = 5;
  for (int i = 0; i < this->other_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->other_card(i), output);
  }

  // optional uint32 other_count = 6;
  if (has_other_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->other_count(), output);
  }

  // optional uint32 time = 7;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->time(), output);
  }

  // optional uint32 param1 = 8;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->param1(), output);
  }

  // optional uint32 hu_state = 9;
  if (has_hu_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->hu_state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiShowDownCount)
}

::google::protobuf::uint8* MsgDouShiSiShowDownCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiShowDownCount)
  // repeated .MsgDouShiSiShowDown showdown_list = 1;
  for (int i = 0; i < this->showdown_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->showdown_list(i), target);
  }

  // optional .TDouShiSiState room_state = 2;
  if (has_room_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->room_state(), target);
  }

  // optional uint32 game_count = 3;
  if (has_game_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_count(), target);
  }

  // optional bool game_over = 4;
  if (has_game_over()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->game_over(), target);
  }

  // repeated uint32 other_card = 5;
  for (int i = 0; i < this->other_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->other_card(i), target);
  }

  // optional uint32 other_count = 6;
  if (has_other_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->other_count(), target);
  }

  // optional uint32 time = 7;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->time(), target);
  }

  // optional uint32 param1 = 8;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->param1(), target);
  }

  // optional uint32 hu_state = 9;
  if (has_hu_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->hu_state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiShowDownCount)
  return target;
}

int MsgDouShiSiShowDownCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .TDouShiSiState room_state = 2;
    if (has_room_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_state());
    }

    // optional uint32 game_count = 3;
    if (has_game_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_count());
    }

    // optional bool game_over = 4;
    if (has_game_over()) {
      total_size += 1 + 1;
    }

    // optional uint32 other_count = 6;
    if (has_other_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->other_count());
    }

    // optional uint32 time = 7;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint32 param1 = 8;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 hu_state = 9;
    if (has_hu_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hu_state());
    }

  }
  // repeated .MsgDouShiSiShowDown showdown_list = 1;
  total_size += 1 * this->showdown_list_size();
  for (int i = 0; i < this->showdown_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->showdown_list(i));
  }

  // repeated uint32 other_card = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->other_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->other_card(i));
    }
    total_size += 1 * this->other_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiShowDownCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiShowDownCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiShowDownCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiShowDownCount::MergeFrom(const MsgDouShiSiShowDownCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  showdown_list_.MergeFrom(from.showdown_list_);
  other_card_.MergeFrom(from.other_card_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_room_state()) {
      set_room_state(from.room_state());
    }
    if (from.has_game_count()) {
      set_game_count(from.game_count());
    }
    if (from.has_game_over()) {
      set_game_over(from.game_over());
    }
    if (from.has_other_count()) {
      set_other_count(from.other_count());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_hu_state()) {
      set_hu_state(from.hu_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiShowDownCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiShowDownCount::CopyFrom(const MsgDouShiSiShowDownCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiShowDownCount::IsInitialized() const {

  return true;
}

void MsgDouShiSiShowDownCount::Swap(MsgDouShiSiShowDownCount* other) {
  if (other != this) {
    showdown_list_.Swap(&other->showdown_list_);
    std::swap(room_state_, other->room_state_);
    std::swap(game_count_, other->game_count_);
    std::swap(game_over_, other->game_over_);
    other_card_.Swap(&other->other_card_);
    std::swap(other_count_, other->other_count_);
    std::swap(time_, other->time_);
    std::swap(param1_, other->param1_);
    std::swap(hu_state_, other->hu_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiShowDownCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiShowDownCount_descriptor_;
  metadata.reflection = MsgDouShiSiShowDownCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiRoleState::kRoleIdFieldNumber;
const int MsgDouShiSiRoleState::kStateFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiRoleState::MsgDouShiSiRoleState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiRoleState)
}

void MsgDouShiSiRoleState::InitAsDefaultInstance() {
}

MsgDouShiSiRoleState::MsgDouShiSiRoleState(const MsgDouShiSiRoleState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiRoleState)
}

void MsgDouShiSiRoleState::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_ULONGLONG(0);
  state_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiRoleState::~MsgDouShiSiRoleState() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiRoleState)
  SharedDtor();
}

void MsgDouShiSiRoleState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiRoleState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiRoleState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiRoleState_descriptor_;
}

const MsgDouShiSiRoleState& MsgDouShiSiRoleState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiRoleState* MsgDouShiSiRoleState::default_instance_ = NULL;

MsgDouShiSiRoleState* MsgDouShiSiRoleState::New() const {
  return new MsgDouShiSiRoleState;
}

void MsgDouShiSiRoleState::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiRoleState*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(role_id_, state_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiRoleState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiRoleState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 role_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional uint32 state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiRoleState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiRoleState)
  return false;
#undef DO_
}

void MsgDouShiSiRoleState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiRoleState)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->role_id(), output);
  }

  // optional uint32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiRoleState)
}

::google::protobuf::uint8* MsgDouShiSiRoleState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiRoleState)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->role_id(), target);
  }

  // optional uint32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiRoleState)
  return target;
}

int MsgDouShiSiRoleState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->role_id());
    }

    // optional uint32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiRoleState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiRoleState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiRoleState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiRoleState::MergeFrom(const MsgDouShiSiRoleState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiRoleState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiRoleState::CopyFrom(const MsgDouShiSiRoleState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiRoleState::IsInitialized() const {

  return true;
}

void MsgDouShiSiRoleState::Swap(MsgDouShiSiRoleState* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiRoleState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiRoleState_descriptor_;
  metadata.reflection = MsgDouShiSiRoleState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiRoleStateCount::kRoleStateFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiRoleStateCount::MsgDouShiSiRoleStateCount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiRoleStateCount)
}

void MsgDouShiSiRoleStateCount::InitAsDefaultInstance() {
}

MsgDouShiSiRoleStateCount::MsgDouShiSiRoleStateCount(const MsgDouShiSiRoleStateCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiRoleStateCount)
}

void MsgDouShiSiRoleStateCount::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiRoleStateCount::~MsgDouShiSiRoleStateCount() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiRoleStateCount)
  SharedDtor();
}

void MsgDouShiSiRoleStateCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiRoleStateCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiRoleStateCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiRoleStateCount_descriptor_;
}

const MsgDouShiSiRoleStateCount& MsgDouShiSiRoleStateCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiRoleStateCount* MsgDouShiSiRoleStateCount::default_instance_ = NULL;

MsgDouShiSiRoleStateCount* MsgDouShiSiRoleStateCount::New() const {
  return new MsgDouShiSiRoleStateCount;
}

void MsgDouShiSiRoleStateCount::Clear() {
  role_state_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiRoleStateCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiRoleStateCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgDouShiSiRoleState role_state = 1;
      case 1: {
        if (tag == 10) {
         parse_role_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_role_state;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiRoleStateCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiRoleStateCount)
  return false;
#undef DO_
}

void MsgDouShiSiRoleStateCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiRoleStateCount)
  // repeated .MsgDouShiSiRoleState role_state = 1;
  for (int i = 0; i < this->role_state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role_state(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiRoleStateCount)
}

::google::protobuf::uint8* MsgDouShiSiRoleStateCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiRoleStateCount)
  // repeated .MsgDouShiSiRoleState role_state = 1;
  for (int i = 0; i < this->role_state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role_state(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiRoleStateCount)
  return target;
}

int MsgDouShiSiRoleStateCount::ByteSize() const {
  int total_size = 0;

  // repeated .MsgDouShiSiRoleState role_state = 1;
  total_size += 1 * this->role_state_size();
  for (int i = 0; i < this->role_state_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_state(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiRoleStateCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiRoleStateCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiRoleStateCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiRoleStateCount::MergeFrom(const MsgDouShiSiRoleStateCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_state_.MergeFrom(from.role_state_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiRoleStateCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiRoleStateCount::CopyFrom(const MsgDouShiSiRoleStateCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiRoleStateCount::IsInitialized() const {

  return true;
}

void MsgDouShiSiRoleStateCount::Swap(MsgDouShiSiRoleStateCount* other) {
  if (other != this) {
    role_state_.Swap(&other->role_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiRoleStateCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiRoleStateCount_descriptor_;
  metadata.reflection = MsgDouShiSiRoleStateCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiRoleHost::kRoleIdFieldNumber;
const int MsgDouShiSiRoleHost::kHostIdFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiRoleHost::MsgDouShiSiRoleHost()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiRoleHost)
}

void MsgDouShiSiRoleHost::InitAsDefaultInstance() {
}

MsgDouShiSiRoleHost::MsgDouShiSiRoleHost(const MsgDouShiSiRoleHost& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiRoleHost)
}

void MsgDouShiSiRoleHost::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_ULONGLONG(0);
  host_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiRoleHost::~MsgDouShiSiRoleHost() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiRoleHost)
  SharedDtor();
}

void MsgDouShiSiRoleHost::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiRoleHost::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiRoleHost::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiRoleHost_descriptor_;
}

const MsgDouShiSiRoleHost& MsgDouShiSiRoleHost::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiRoleHost* MsgDouShiSiRoleHost::default_instance_ = NULL;

MsgDouShiSiRoleHost* MsgDouShiSiRoleHost::New() const {
  return new MsgDouShiSiRoleHost;
}

void MsgDouShiSiRoleHost::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiRoleHost*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(role_id_, host_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiRoleHost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiRoleHost)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 role_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_host_id;
        break;
      }

      // optional uint32 host_id = 2;
      case 2: {
        if (tag == 16) {
         parse_host_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_id_)));
          set_has_host_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiRoleHost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiRoleHost)
  return false;
#undef DO_
}

void MsgDouShiSiRoleHost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiRoleHost)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->role_id(), output);
  }

  // optional uint32 host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->host_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiRoleHost)
}

::google::protobuf::uint8* MsgDouShiSiRoleHost::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiRoleHost)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->role_id(), target);
  }

  // optional uint32 host_id = 2;
  if (has_host_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->host_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiRoleHost)
  return target;
}

int MsgDouShiSiRoleHost::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->role_id());
    }

    // optional uint32 host_id = 2;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->host_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiRoleHost::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiRoleHost* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiRoleHost*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiRoleHost::MergeFrom(const MsgDouShiSiRoleHost& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_host_id()) {
      set_host_id(from.host_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiRoleHost::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiRoleHost::CopyFrom(const MsgDouShiSiRoleHost& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiRoleHost::IsInitialized() const {

  return true;
}

void MsgDouShiSiRoleHost::Swap(MsgDouShiSiRoleHost* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(host_id_, other->host_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiRoleHost::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiRoleHost_descriptor_;
  metadata.reflection = MsgDouShiSiRoleHost_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiRoleHostCount::kRoleStateFieldNumber;
const int MsgDouShiSiRoleHostCount::kHostListFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiRoleHostCount::MsgDouShiSiRoleHostCount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiRoleHostCount)
}

void MsgDouShiSiRoleHostCount::InitAsDefaultInstance() {
}

MsgDouShiSiRoleHostCount::MsgDouShiSiRoleHostCount(const MsgDouShiSiRoleHostCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiRoleHostCount)
}

void MsgDouShiSiRoleHostCount::SharedCtor() {
  _cached_size_ = 0;
  role_state_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiRoleHostCount::~MsgDouShiSiRoleHostCount() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiRoleHostCount)
  SharedDtor();
}

void MsgDouShiSiRoleHostCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiRoleHostCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiRoleHostCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiRoleHostCount_descriptor_;
}

const MsgDouShiSiRoleHostCount& MsgDouShiSiRoleHostCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiRoleHostCount* MsgDouShiSiRoleHostCount::default_instance_ = NULL;

MsgDouShiSiRoleHostCount* MsgDouShiSiRoleHostCount::New() const {
  return new MsgDouShiSiRoleHostCount;
}

void MsgDouShiSiRoleHostCount::Clear() {
  role_state_ = 0u;
  host_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiRoleHostCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiRoleHostCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 role_state = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &role_state_)));
          set_has_role_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host_list;
        break;
      }

      // repeated .MsgDouShiSiRoleHost host_list = 2;
      case 2: {
        if (tag == 18) {
         parse_host_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_host_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiRoleHostCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiRoleHostCount)
  return false;
#undef DO_
}

void MsgDouShiSiRoleHostCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiRoleHostCount)
  // optional uint32 role_state = 1;
  if (has_role_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->role_state(), output);
  }

  // repeated .MsgDouShiSiRoleHost host_list = 2;
  for (int i = 0; i < this->host_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->host_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiRoleHostCount)
}

::google::protobuf::uint8* MsgDouShiSiRoleHostCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiRoleHostCount)
  // optional uint32 role_state = 1;
  if (has_role_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->role_state(), target);
  }

  // repeated .MsgDouShiSiRoleHost host_list = 2;
  for (int i = 0; i < this->host_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->host_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiRoleHostCount)
  return target;
}

int MsgDouShiSiRoleHostCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 role_state = 1;
    if (has_role_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->role_state());
    }

  }
  // repeated .MsgDouShiSiRoleHost host_list = 2;
  total_size += 1 * this->host_list_size();
  for (int i = 0; i < this->host_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->host_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiRoleHostCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiRoleHostCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiRoleHostCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiRoleHostCount::MergeFrom(const MsgDouShiSiRoleHostCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  host_list_.MergeFrom(from.host_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_state()) {
      set_role_state(from.role_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiRoleHostCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiRoleHostCount::CopyFrom(const MsgDouShiSiRoleHostCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiRoleHostCount::IsInitialized() const {

  return true;
}

void MsgDouShiSiRoleHostCount::Swap(MsgDouShiSiRoleHostCount* other) {
  if (other != this) {
    std::swap(role_state_, other->role_state_);
    host_list_.Swap(&other->host_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiRoleHostCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiRoleHostCount_descriptor_;
  metadata.reflection = MsgDouShiSiRoleHostCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiRoomShowDown::kRoomStateFieldNumber;
const int MsgDouShiSiRoomShowDown::kStateTimeFieldNumber;
const int MsgDouShiSiRoomShowDown::kPlayerListFieldNumber;
const int MsgDouShiSiRoomShowDown::kRoomIdFieldNumber;
const int MsgDouShiSiRoomShowDown::kGameCountFieldNumber;
const int MsgDouShiSiRoomShowDown::kTimeFieldNumber;
const int MsgDouShiSiRoomShowDown::kOverInfoFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiRoomShowDown::MsgDouShiSiRoomShowDown()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiRoomShowDown)
}

void MsgDouShiSiRoomShowDown::InitAsDefaultInstance() {
}

MsgDouShiSiRoomShowDown::MsgDouShiSiRoomShowDown(const MsgDouShiSiRoomShowDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiRoomShowDown)
}

void MsgDouShiSiRoomShowDown::SharedCtor() {
  _cached_size_ = 0;
  room_state_ = 0;
  state_time_ = 0u;
  room_id_ = GOOGLE_ULONGLONG(0);
  game_count_ = 0u;
  time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiRoomShowDown::~MsgDouShiSiRoomShowDown() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiRoomShowDown)
  SharedDtor();
}

void MsgDouShiSiRoomShowDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiRoomShowDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiRoomShowDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiRoomShowDown_descriptor_;
}

const MsgDouShiSiRoomShowDown& MsgDouShiSiRoomShowDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiRoomShowDown* MsgDouShiSiRoomShowDown::default_instance_ = NULL;

MsgDouShiSiRoomShowDown* MsgDouShiSiRoomShowDown::New() const {
  return new MsgDouShiSiRoomShowDown;
}

void MsgDouShiSiRoomShowDown::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiRoomShowDown*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 59) {
    ZR_(room_state_, state_time_);
    ZR_(room_id_, time_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  player_list_.Clear();
  over_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiRoomShowDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiRoomShowDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TDouShiSiState room_state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TDouShiSiState_IsValid(value)) {
            set_room_state(static_cast< ::TDouShiSiState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state_time;
        break;
      }

      // optional uint32 state_time = 2;
      case 2: {
        if (tag == 16) {
         parse_state_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_time_)));
          set_has_state_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_player_list;
        break;
      }

      // repeated .MsgDouShiSiPlayer player_list = 3;
      case 3: {
        if (tag == 26) {
         parse_player_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_player_list;
        if (input->ExpectTag(32)) goto parse_room_id;
        break;
      }

      // optional uint64 room_id = 4;
      case 4: {
        if (tag == 32) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_game_count;
        break;
      }

      // optional uint32 game_count = 5;
      case 5: {
        if (tag == 40) {
         parse_game_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_count_)));
          set_has_game_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_time;
        break;
      }

      // optional uint32 time = 6;
      case 6: {
        if (tag == 48) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_over_info;
        break;
      }

      // repeated .MsgDouShiSiGameOverInfo over_info = 7;
      case 7: {
        if (tag == 58) {
         parse_over_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_over_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_over_info;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiRoomShowDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiRoomShowDown)
  return false;
#undef DO_
}

void MsgDouShiSiRoomShowDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiRoomShowDown)
  // optional .TDouShiSiState room_state = 1;
  if (has_room_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->room_state(), output);
  }

  // optional uint32 state_time = 2;
  if (has_state_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state_time(), output);
  }

  // repeated .MsgDouShiSiPlayer player_list = 3;
  for (int i = 0; i < this->player_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->player_list(i), output);
  }

  // optional uint64 room_id = 4;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->room_id(), output);
  }

  // optional uint32 game_count = 5;
  if (has_game_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->game_count(), output);
  }

  // optional uint32 time = 6;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->time(), output);
  }

  // repeated .MsgDouShiSiGameOverInfo over_info = 7;
  for (int i = 0; i < this->over_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->over_info(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiRoomShowDown)
}

::google::protobuf::uint8* MsgDouShiSiRoomShowDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiRoomShowDown)
  // optional .TDouShiSiState room_state = 1;
  if (has_room_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->room_state(), target);
  }

  // optional uint32 state_time = 2;
  if (has_state_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state_time(), target);
  }

  // repeated .MsgDouShiSiPlayer player_list = 3;
  for (int i = 0; i < this->player_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->player_list(i), target);
  }

  // optional uint64 room_id = 4;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->room_id(), target);
  }

  // optional uint32 game_count = 5;
  if (has_game_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->game_count(), target);
  }

  // optional uint32 time = 6;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->time(), target);
  }

  // repeated .MsgDouShiSiGameOverInfo over_info = 7;
  for (int i = 0; i < this->over_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->over_info(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiRoomShowDown)
  return target;
}

int MsgDouShiSiRoomShowDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .TDouShiSiState room_state = 1;
    if (has_room_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_state());
    }

    // optional uint32 state_time = 2;
    if (has_state_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state_time());
    }

    // optional uint64 room_id = 4;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->room_id());
    }

    // optional uint32 game_count = 5;
    if (has_game_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_count());
    }

    // optional uint32 time = 6;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

  }
  // repeated .MsgDouShiSiPlayer player_list = 3;
  total_size += 1 * this->player_list_size();
  for (int i = 0; i < this->player_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player_list(i));
  }

  // repeated .MsgDouShiSiGameOverInfo over_info = 7;
  total_size += 1 * this->over_info_size();
  for (int i = 0; i < this->over_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->over_info(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiRoomShowDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiRoomShowDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiRoomShowDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiRoomShowDown::MergeFrom(const MsgDouShiSiRoomShowDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_list_.MergeFrom(from.player_list_);
  over_info_.MergeFrom(from.over_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_state()) {
      set_room_state(from.room_state());
    }
    if (from.has_state_time()) {
      set_state_time(from.state_time());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_game_count()) {
      set_game_count(from.game_count());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiRoomShowDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiRoomShowDown::CopyFrom(const MsgDouShiSiRoomShowDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiRoomShowDown::IsInitialized() const {

  return true;
}

void MsgDouShiSiRoomShowDown::Swap(MsgDouShiSiRoomShowDown* other) {
  if (other != this) {
    std::swap(room_state_, other->room_state_);
    std::swap(state_time_, other->state_time_);
    player_list_.Swap(&other->player_list_);
    std::swap(room_id_, other->room_id_);
    std::swap(game_count_, other->game_count_);
    std::swap(time_, other->time_);
    over_info_.Swap(&other->over_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiRoomShowDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiRoomShowDown_descriptor_;
  metadata.reflection = MsgDouShiSiRoomShowDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDouShiSiGameOverInfo::kRoleIdFieldNumber;
const int MsgDouShiSiGameOverInfo::kMaxScoreFieldNumber;
const int MsgDouShiSiGameOverInfo::kZhadanCountFieldNumber;
const int MsgDouShiSiGameOverInfo::kWinCountFieldNumber;
const int MsgDouShiSiGameOverInfo::kLoseCountFieldNumber;
#endif  // !_MSC_VER

MsgDouShiSiGameOverInfo::MsgDouShiSiGameOverInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDouShiSiGameOverInfo)
}

void MsgDouShiSiGameOverInfo::InitAsDefaultInstance() {
}

MsgDouShiSiGameOverInfo::MsgDouShiSiGameOverInfo(const MsgDouShiSiGameOverInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDouShiSiGameOverInfo)
}

void MsgDouShiSiGameOverInfo::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_ULONGLONG(0);
  max_score_ = GOOGLE_LONGLONG(0);
  zhadan_count_ = 0u;
  win_count_ = 0u;
  lose_count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDouShiSiGameOverInfo::~MsgDouShiSiGameOverInfo() {
  // @@protoc_insertion_point(destructor:MsgDouShiSiGameOverInfo)
  SharedDtor();
}

void MsgDouShiSiGameOverInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDouShiSiGameOverInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDouShiSiGameOverInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDouShiSiGameOverInfo_descriptor_;
}

const MsgDouShiSiGameOverInfo& MsgDouShiSiGameOverInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdoushisi_2eproto();
  return *default_instance_;
}

MsgDouShiSiGameOverInfo* MsgDouShiSiGameOverInfo::default_instance_ = NULL;

MsgDouShiSiGameOverInfo* MsgDouShiSiGameOverInfo::New() const {
  return new MsgDouShiSiGameOverInfo;
}

void MsgDouShiSiGameOverInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDouShiSiGameOverInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(role_id_, lose_count_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDouShiSiGameOverInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDouShiSiGameOverInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 role_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_score;
        break;
      }

      // optional int64 max_score = 2;
      case 2: {
        if (tag == 16) {
         parse_max_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_score_)));
          set_has_max_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_zhadan_count;
        break;
      }

      // optional uint32 zhadan_count = 3;
      case 3: {
        if (tag == 24) {
         parse_zhadan_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zhadan_count_)));
          set_has_zhadan_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_win_count;
        break;
      }

      // optional uint32 win_count = 4;
      case 4: {
        if (tag == 32) {
         parse_win_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &win_count_)));
          set_has_win_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_lose_count;
        break;
      }

      // optional uint32 lose_count = 5;
      case 5: {
        if (tag == 40) {
         parse_lose_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lose_count_)));
          set_has_lose_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDouShiSiGameOverInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDouShiSiGameOverInfo)
  return false;
#undef DO_
}

void MsgDouShiSiGameOverInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDouShiSiGameOverInfo)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->role_id(), output);
  }

  // optional int64 max_score = 2;
  if (has_max_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->max_score(), output);
  }

  // optional uint32 zhadan_count = 3;
  if (has_zhadan_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->zhadan_count(), output);
  }

  // optional uint32 win_count = 4;
  if (has_win_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->win_count(), output);
  }

  // optional uint32 lose_count = 5;
  if (has_lose_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->lose_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDouShiSiGameOverInfo)
}

::google::protobuf::uint8* MsgDouShiSiGameOverInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDouShiSiGameOverInfo)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->role_id(), target);
  }

  // optional int64 max_score = 2;
  if (has_max_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->max_score(), target);
  }

  // optional uint32 zhadan_count = 3;
  if (has_zhadan_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->zhadan_count(), target);
  }

  // optional uint32 win_count = 4;
  if (has_win_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->win_count(), target);
  }

  // optional uint32 lose_count = 5;
  if (has_lose_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->lose_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDouShiSiGameOverInfo)
  return target;
}

int MsgDouShiSiGameOverInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->role_id());
    }

    // optional int64 max_score = 2;
    if (has_max_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->max_score());
    }

    // optional uint32 zhadan_count = 3;
    if (has_zhadan_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->zhadan_count());
    }

    // optional uint32 win_count = 4;
    if (has_win_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->win_count());
    }

    // optional uint32 lose_count = 5;
    if (has_lose_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lose_count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDouShiSiGameOverInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDouShiSiGameOverInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDouShiSiGameOverInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDouShiSiGameOverInfo::MergeFrom(const MsgDouShiSiGameOverInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_max_score()) {
      set_max_score(from.max_score());
    }
    if (from.has_zhadan_count()) {
      set_zhadan_count(from.zhadan_count());
    }
    if (from.has_win_count()) {
      set_win_count(from.win_count());
    }
    if (from.has_lose_count()) {
      set_lose_count(from.lose_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDouShiSiGameOverInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDouShiSiGameOverInfo::CopyFrom(const MsgDouShiSiGameOverInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDouShiSiGameOverInfo::IsInitialized() const {

  return true;
}

void MsgDouShiSiGameOverInfo::Swap(MsgDouShiSiGameOverInfo* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(max_score_, other->max_score_);
    std::swap(zhadan_count_, other->zhadan_count_);
    std::swap(win_count_, other->win_count_);
    std::swap(lose_count_, other->lose_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDouShiSiGameOverInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDouShiSiGameOverInfo_descriptor_;
  metadata.reflection = MsgDouShiSiGameOverInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
