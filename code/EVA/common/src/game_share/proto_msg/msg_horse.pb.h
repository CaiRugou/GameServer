// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_horse.proto

#ifndef PROTOBUF_msg_5fhorse_2eproto__INCLUDED
#define PROTOBUF_msg_5fhorse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "public_pro.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5fhorse_2eproto();
void protobuf_AssignDesc_msg_5fhorse_2eproto();
void protobuf_ShutdownFile_msg_5fhorse_2eproto();

class MsgHorseRoundBetInfo;
class MsgHorsePlayerBetInfo;
class MsgSerialBetInfo;
class MsgHorsePlayerInfo;
class MsgHorsePlayerRankInfo;
class MsgHorseRaceResult;
class MsgHorseGroup;
class MsgAllBetAndOddInfo;
class MsgHorseShowPlayerInfo;
class MsgHorseRoomInfo;

enum THorseState {
  HorseStateStartPour = 1,
  HorseStateFinish = 2
};
bool THorseState_IsValid(int value);
const THorseState THorseState_MIN = HorseStateStartPour;
const THorseState THorseState_MAX = HorseStateFinish;
const int THorseState_ARRAYSIZE = THorseState_MAX + 1;

const ::google::protobuf::EnumDescriptor* THorseState_descriptor();
inline const ::std::string& THorseState_Name(THorseState value) {
  return ::google::protobuf::internal::NameOfEnum(
    THorseState_descriptor(), value);
}
inline bool THorseState_Parse(
    const ::std::string& name, THorseState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<THorseState>(
    THorseState_descriptor(), name, value);
}
enum THorseRoundBetType {
  WinBet = 1,
  PlaceBet = 2,
  ShowBet = 3
};
bool THorseRoundBetType_IsValid(int value);
const THorseRoundBetType THorseRoundBetType_MIN = WinBet;
const THorseRoundBetType THorseRoundBetType_MAX = ShowBet;
const int THorseRoundBetType_ARRAYSIZE = THorseRoundBetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* THorseRoundBetType_descriptor();
inline const ::std::string& THorseRoundBetType_Name(THorseRoundBetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    THorseRoundBetType_descriptor(), value);
}
inline bool THorseRoundBetType_Parse(
    const ::std::string& name, THorseRoundBetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<THorseRoundBetType>(
    THorseRoundBetType_descriptor(), name, value);
}
enum THorseBetResultType {
  ResultWin = 1,
  ResultLose = 2,
  ResultWait = 3
};
bool THorseBetResultType_IsValid(int value);
const THorseBetResultType THorseBetResultType_MIN = ResultWin;
const THorseBetResultType THorseBetResultType_MAX = ResultWait;
const int THorseBetResultType_ARRAYSIZE = THorseBetResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* THorseBetResultType_descriptor();
inline const ::std::string& THorseBetResultType_Name(THorseBetResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    THorseBetResultType_descriptor(), value);
}
inline bool THorseBetResultType_Parse(
    const ::std::string& name, THorseBetResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<THorseBetResultType>(
    THorseBetResultType_descriptor(), name, value);
}
// ===================================================================

class MsgHorseRoundBetInfo : public ::google::protobuf::Message {
 public:
  MsgHorseRoundBetInfo();
  virtual ~MsgHorseRoundBetInfo();

  MsgHorseRoundBetInfo(const MsgHorseRoundBetInfo& from);

  inline MsgHorseRoundBetInfo& operator=(const MsgHorseRoundBetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHorseRoundBetInfo& default_instance();

  void Swap(MsgHorseRoundBetInfo* other);

  // implements Message ----------------------------------------------

  MsgHorseRoundBetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHorseRoundBetInfo& from);
  void MergeFrom(const MsgHorseRoundBetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 horse_id = 1;
  inline bool has_horse_id() const;
  inline void clear_horse_id();
  static const int kHorseIdFieldNumber = 1;
  inline ::google::protobuf::uint32 horse_id() const;
  inline void set_horse_id(::google::protobuf::uint32 value);

  // optional uint32 bet_round = 2;
  inline bool has_bet_round() const;
  inline void clear_bet_round();
  static const int kBetRoundFieldNumber = 2;
  inline ::google::protobuf::uint32 bet_round() const;
  inline void set_bet_round(::google::protobuf::uint32 value);

  // optional .THorseRoundBetType bet_type = 3;
  inline bool has_bet_type() const;
  inline void clear_bet_type();
  static const int kBetTypeFieldNumber = 3;
  inline ::THorseRoundBetType bet_type() const;
  inline void set_bet_type(::THorseRoundBetType value);

  // optional uint64 bet_money = 4;
  inline bool has_bet_money() const;
  inline void clear_bet_money();
  static const int kBetMoneyFieldNumber = 4;
  inline ::google::protobuf::uint64 bet_money() const;
  inline void set_bet_money(::google::protobuf::uint64 value);

  // optional uint64 bet_odd = 5;
  inline bool has_bet_odd() const;
  inline void clear_bet_odd();
  static const int kBetOddFieldNumber = 5;
  inline ::google::protobuf::uint64 bet_odd() const;
  inline void set_bet_odd(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MsgHorseRoundBetInfo)
 private:
  inline void set_has_horse_id();
  inline void clear_has_horse_id();
  inline void set_has_bet_round();
  inline void clear_has_bet_round();
  inline void set_has_bet_type();
  inline void clear_has_bet_type();
  inline void set_has_bet_money();
  inline void clear_has_bet_money();
  inline void set_has_bet_odd();
  inline void clear_has_bet_odd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 horse_id_;
  ::google::protobuf::uint32 bet_round_;
  ::google::protobuf::uint64 bet_money_;
  ::google::protobuf::uint64 bet_odd_;
  int bet_type_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgHorseRoundBetInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgHorsePlayerBetInfo : public ::google::protobuf::Message {
 public:
  MsgHorsePlayerBetInfo();
  virtual ~MsgHorsePlayerBetInfo();

  MsgHorsePlayerBetInfo(const MsgHorsePlayerBetInfo& from);

  inline MsgHorsePlayerBetInfo& operator=(const MsgHorsePlayerBetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHorsePlayerBetInfo& default_instance();

  void Swap(MsgHorsePlayerBetInfo* other);

  // implements Message ----------------------------------------------

  MsgHorsePlayerBetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHorsePlayerBetInfo& from);
  void MergeFrom(const MsgHorsePlayerBetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ply_money = 1;
  inline bool has_ply_money() const;
  inline void clear_ply_money();
  static const int kPlyMoneyFieldNumber = 1;
  inline ::google::protobuf::uint64 ply_money() const;
  inline void set_ply_money(::google::protobuf::uint64 value);

  // repeated .MsgHorseRoundBetInfo round_bet_list = 2;
  inline int round_bet_list_size() const;
  inline void clear_round_bet_list();
  static const int kRoundBetListFieldNumber = 2;
  inline const ::MsgHorseRoundBetInfo& round_bet_list(int index) const;
  inline ::MsgHorseRoundBetInfo* mutable_round_bet_list(int index);
  inline ::MsgHorseRoundBetInfo* add_round_bet_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo >&
      round_bet_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo >*
      mutable_round_bet_list();

  // @@protoc_insertion_point(class_scope:MsgHorsePlayerBetInfo)
 private:
  inline void set_has_ply_money();
  inline void clear_has_ply_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ply_money_;
  ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo > round_bet_list_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgHorsePlayerBetInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgSerialBetInfo : public ::google::protobuf::Message {
 public:
  MsgSerialBetInfo();
  virtual ~MsgSerialBetInfo();

  MsgSerialBetInfo(const MsgSerialBetInfo& from);

  inline MsgSerialBetInfo& operator=(const MsgSerialBetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSerialBetInfo& default_instance();

  void Swap(MsgSerialBetInfo* other);

  // implements Message ----------------------------------------------

  MsgSerialBetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSerialBetInfo& from);
  void MergeFrom(const MsgSerialBetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .THorseBetResultType single_result_list = 1;
  inline int single_result_list_size() const;
  inline void clear_single_result_list();
  static const int kSingleResultListFieldNumber = 1;
  inline ::THorseBetResultType single_result_list(int index) const;
  inline void set_single_result_list(int index, ::THorseBetResultType value);
  inline void add_single_result_list(::THorseBetResultType value);
  inline const ::google::protobuf::RepeatedField<int>& single_result_list() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_single_result_list();

  // @@protoc_insertion_point(class_scope:MsgSerialBetInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> single_result_list_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgSerialBetInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgHorsePlayerInfo : public ::google::protobuf::Message {
 public:
  MsgHorsePlayerInfo();
  virtual ~MsgHorsePlayerInfo();

  MsgHorsePlayerInfo(const MsgHorsePlayerInfo& from);

  inline MsgHorsePlayerInfo& operator=(const MsgHorsePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHorsePlayerInfo& default_instance();

  void Swap(MsgHorsePlayerInfo* other);

  // implements Message ----------------------------------------------

  MsgHorsePlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHorsePlayerInfo& from);
  void MergeFrom(const MsgHorsePlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPlayerInfo player_base = 1;
  inline bool has_player_base() const;
  inline void clear_player_base();
  static const int kPlayerBaseFieldNumber = 1;
  inline const ::MsgPlayerInfo& player_base() const;
  inline ::MsgPlayerInfo* mutable_player_base();
  inline ::MsgPlayerInfo* release_player_base();
  inline void set_allocated_player_base(::MsgPlayerInfo* player_base);

  // optional .MsgSerialBetInfo bet_result_list = 2;
  inline bool has_bet_result_list() const;
  inline void clear_bet_result_list();
  static const int kBetResultListFieldNumber = 2;
  inline const ::MsgSerialBetInfo& bet_result_list() const;
  inline ::MsgSerialBetInfo* mutable_bet_result_list();
  inline ::MsgSerialBetInfo* release_bet_result_list();
  inline void set_allocated_bet_result_list(::MsgSerialBetInfo* bet_result_list);

  // @@protoc_insertion_point(class_scope:MsgHorsePlayerInfo)
 private:
  inline void set_has_player_base();
  inline void clear_has_player_base();
  inline void set_has_bet_result_list();
  inline void clear_has_bet_result_list();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgPlayerInfo* player_base_;
  ::MsgSerialBetInfo* bet_result_list_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgHorsePlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgHorsePlayerRankInfo : public ::google::protobuf::Message {
 public:
  MsgHorsePlayerRankInfo();
  virtual ~MsgHorsePlayerRankInfo();

  MsgHorsePlayerRankInfo(const MsgHorsePlayerRankInfo& from);

  inline MsgHorsePlayerRankInfo& operator=(const MsgHorsePlayerRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHorsePlayerRankInfo& default_instance();

  void Swap(MsgHorsePlayerRankInfo* other);

  // implements Message ----------------------------------------------

  MsgHorsePlayerRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHorsePlayerRankInfo& from);
  void MergeFrom(const MsgHorsePlayerRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string player_name = 1;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 1;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const char* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  inline void set_allocated_player_name(::std::string* player_name);

  // optional uint32 bet_horse = 2;
  inline bool has_bet_horse() const;
  inline void clear_bet_horse();
  static const int kBetHorseFieldNumber = 2;
  inline ::google::protobuf::uint32 bet_horse() const;
  inline void set_bet_horse(::google::protobuf::uint32 value);

  // optional uint32 win_round = 3;
  inline bool has_win_round() const;
  inline void clear_win_round();
  static const int kWinRoundFieldNumber = 3;
  inline ::google::protobuf::uint32 win_round() const;
  inline void set_win_round(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgHorsePlayerRankInfo)
 private:
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_bet_horse();
  inline void clear_has_bet_horse();
  inline void set_has_win_round();
  inline void clear_has_win_round();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* player_name_;
  ::google::protobuf::uint32 bet_horse_;
  ::google::protobuf::uint32 win_round_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgHorsePlayerRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgHorseRaceResult : public ::google::protobuf::Message {
 public:
  MsgHorseRaceResult();
  virtual ~MsgHorseRaceResult();

  MsgHorseRaceResult(const MsgHorseRaceResult& from);

  inline MsgHorseRaceResult& operator=(const MsgHorseRaceResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHorseRaceResult& default_instance();

  void Swap(MsgHorseRaceResult* other);

  // implements Message ----------------------------------------------

  MsgHorseRaceResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHorseRaceResult& from);
  void MergeFrom(const MsgHorseRaceResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 result_list = 1;
  inline int result_list_size() const;
  inline void clear_result_list();
  static const int kResultListFieldNumber = 1;
  inline ::google::protobuf::uint32 result_list(int index) const;
  inline void set_result_list(int index, ::google::protobuf::uint32 value);
  inline void add_result_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      result_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_result_list();

  // optional uint32 random_int = 2;
  inline bool has_random_int() const;
  inline void clear_random_int();
  static const int kRandomIntFieldNumber = 2;
  inline ::google::protobuf::uint32 random_int() const;
  inline void set_random_int(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgHorseRaceResult)
 private:
  inline void set_has_random_int();
  inline void clear_has_random_int();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > result_list_;
  ::google::protobuf::uint32 random_int_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgHorseRaceResult* default_instance_;
};
// -------------------------------------------------------------------

class MsgHorseGroup : public ::google::protobuf::Message {
 public:
  MsgHorseGroup();
  virtual ~MsgHorseGroup();

  MsgHorseGroup(const MsgHorseGroup& from);

  inline MsgHorseGroup& operator=(const MsgHorseGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHorseGroup& default_instance();

  void Swap(MsgHorseGroup* other);

  // implements Message ----------------------------------------------

  MsgHorseGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHorseGroup& from);
  void MergeFrom(const MsgHorseGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 horse_id = 1;
  inline bool has_horse_id() const;
  inline void clear_horse_id();
  static const int kHorseIdFieldNumber = 1;
  inline ::google::protobuf::uint32 horse_id() const;
  inline void set_horse_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 put_bets = 3;
  inline bool has_put_bets() const;
  inline void clear_put_bets();
  static const int kPutBetsFieldNumber = 3;
  inline ::google::protobuf::uint64 put_bets() const;
  inline void set_put_bets(::google::protobuf::uint64 value);

  // optional uint32 last_rank = 4;
  inline bool has_last_rank() const;
  inline void clear_last_rank();
  static const int kLastRankFieldNumber = 4;
  inline ::google::protobuf::uint32 last_rank() const;
  inline void set_last_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgHorseGroup)
 private:
  inline void set_has_horse_id();
  inline void clear_has_horse_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_put_bets();
  inline void clear_has_put_bets();
  inline void set_has_last_rank();
  inline void clear_has_last_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 horse_id_;
  ::google::protobuf::uint32 last_rank_;
  ::google::protobuf::uint64 put_bets_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgHorseGroup* default_instance_;
};
// -------------------------------------------------------------------

class MsgAllBetAndOddInfo : public ::google::protobuf::Message {
 public:
  MsgAllBetAndOddInfo();
  virtual ~MsgAllBetAndOddInfo();

  MsgAllBetAndOddInfo(const MsgAllBetAndOddInfo& from);

  inline MsgAllBetAndOddInfo& operator=(const MsgAllBetAndOddInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAllBetAndOddInfo& default_instance();

  void Swap(MsgAllBetAndOddInfo* other);

  // implements Message ----------------------------------------------

  MsgAllBetAndOddInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAllBetAndOddInfo& from);
  void MergeFrom(const MsgAllBetAndOddInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgHorseRoundBetInfo all_info_list = 1;
  inline int all_info_list_size() const;
  inline void clear_all_info_list();
  static const int kAllInfoListFieldNumber = 1;
  inline const ::MsgHorseRoundBetInfo& all_info_list(int index) const;
  inline ::MsgHorseRoundBetInfo* mutable_all_info_list(int index);
  inline ::MsgHorseRoundBetInfo* add_all_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo >&
      all_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo >*
      mutable_all_info_list();

  // @@protoc_insertion_point(class_scope:MsgAllBetAndOddInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo > all_info_list_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgAllBetAndOddInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgHorseShowPlayerInfo : public ::google::protobuf::Message {
 public:
  MsgHorseShowPlayerInfo();
  virtual ~MsgHorseShowPlayerInfo();

  MsgHorseShowPlayerInfo(const MsgHorseShowPlayerInfo& from);

  inline MsgHorseShowPlayerInfo& operator=(const MsgHorseShowPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHorseShowPlayerInfo& default_instance();

  void Swap(MsgHorseShowPlayerInfo* other);

  // implements Message ----------------------------------------------

  MsgHorseShowPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHorseShowPlayerInfo& from);
  void MergeFrom(const MsgHorseShowPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional uint32 portrait_id = 3;
  inline bool has_portrait_id() const;
  inline void clear_portrait_id();
  static const int kPortraitIdFieldNumber = 3;
  inline ::google::protobuf::uint32 portrait_id() const;
  inline void set_portrait_id(::google::protobuf::uint32 value);

  // optional uint32 vip_level = 4;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgHorseShowPlayerInfo)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_portrait_id();
  inline void clear_has_portrait_id();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 player_id_;
  ::std::string* username_;
  ::google::protobuf::uint32 portrait_id_;
  ::google::protobuf::uint32 vip_level_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgHorseShowPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgHorseRoomInfo : public ::google::protobuf::Message {
 public:
  MsgHorseRoomInfo();
  virtual ~MsgHorseRoomInfo();

  MsgHorseRoomInfo(const MsgHorseRoomInfo& from);

  inline MsgHorseRoomInfo& operator=(const MsgHorseRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHorseRoomInfo& default_instance();

  void Swap(MsgHorseRoomInfo* other);

  // implements Message ----------------------------------------------

  MsgHorseRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHorseRoomInfo& from);
  void MergeFrom(const MsgHorseRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .THorseState room_state = 1;
  inline bool has_room_state() const;
  inline void clear_room_state();
  static const int kRoomStateFieldNumber = 1;
  inline ::THorseState room_state() const;
  inline void set_room_state(::THorseState value);

  // optional int64 sur_time = 2;
  inline bool has_sur_time() const;
  inline void clear_sur_time();
  static const int kSurTimeFieldNumber = 2;
  inline ::google::protobuf::int64 sur_time() const;
  inline void set_sur_time(::google::protobuf::int64 value);

  // optional .MsgHorsePlayerInfo self = 3;
  inline bool has_self() const;
  inline void clear_self();
  static const int kSelfFieldNumber = 3;
  inline const ::MsgHorsePlayerInfo& self() const;
  inline ::MsgHorsePlayerInfo* mutable_self();
  inline ::MsgHorsePlayerInfo* release_self();
  inline void set_allocated_self(::MsgHorsePlayerInfo* self);

  // repeated .MsgHorsePlayerRankInfo player_list = 4;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 4;
  inline const ::MsgHorsePlayerRankInfo& player_list(int index) const;
  inline ::MsgHorsePlayerRankInfo* mutable_player_list(int index);
  inline ::MsgHorsePlayerRankInfo* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgHorsePlayerRankInfo >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgHorsePlayerRankInfo >*
      mutable_player_list();

  // repeated .MsgHorseGroup six_horse = 5;
  inline int six_horse_size() const;
  inline void clear_six_horse();
  static const int kSixHorseFieldNumber = 5;
  inline const ::MsgHorseGroup& six_horse(int index) const;
  inline ::MsgHorseGroup* mutable_six_horse(int index);
  inline ::MsgHorseGroup* add_six_horse();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgHorseGroup >&
      six_horse() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgHorseGroup >*
      mutable_six_horse();

  // optional uint64 room_id = 6;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 6;
  inline ::google::protobuf::uint64 room_id() const;
  inline void set_room_id(::google::protobuf::uint64 value);

  // optional .MsgBaseRoomInfo room_info = 7;
  inline bool has_room_info() const;
  inline void clear_room_info();
  static const int kRoomInfoFieldNumber = 7;
  inline const ::MsgBaseRoomInfo& room_info() const;
  inline ::MsgBaseRoomInfo* mutable_room_info();
  inline ::MsgBaseRoomInfo* release_room_info();
  inline void set_allocated_room_info(::MsgBaseRoomInfo* room_info);

  // repeated .MsgHorseShowPlayerInfo show_player_list = 8;
  inline int show_player_list_size() const;
  inline void clear_show_player_list();
  static const int kShowPlayerListFieldNumber = 8;
  inline const ::MsgHorseShowPlayerInfo& show_player_list(int index) const;
  inline ::MsgHorseShowPlayerInfo* mutable_show_player_list(int index);
  inline ::MsgHorseShowPlayerInfo* add_show_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgHorseShowPlayerInfo >&
      show_player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgHorseShowPlayerInfo >*
      mutable_show_player_list();

  // @@protoc_insertion_point(class_scope:MsgHorseRoomInfo)
 private:
  inline void set_has_room_state();
  inline void clear_has_room_state();
  inline void set_has_sur_time();
  inline void clear_has_sur_time();
  inline void set_has_self();
  inline void clear_has_self();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_room_info();
  inline void clear_has_room_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 sur_time_;
  ::MsgHorsePlayerInfo* self_;
  ::google::protobuf::RepeatedPtrField< ::MsgHorsePlayerRankInfo > player_list_;
  ::google::protobuf::RepeatedPtrField< ::MsgHorseGroup > six_horse_;
  ::google::protobuf::uint64 room_id_;
  ::MsgBaseRoomInfo* room_info_;
  ::google::protobuf::RepeatedPtrField< ::MsgHorseShowPlayerInfo > show_player_list_;
  int room_state_;
  friend void  protobuf_AddDesc_msg_5fhorse_2eproto();
  friend void protobuf_AssignDesc_msg_5fhorse_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhorse_2eproto();

  void InitAsDefaultInstance();
  static MsgHorseRoomInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgHorseRoundBetInfo

// optional uint32 horse_id = 1;
inline bool MsgHorseRoundBetInfo::has_horse_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHorseRoundBetInfo::set_has_horse_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHorseRoundBetInfo::clear_has_horse_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHorseRoundBetInfo::clear_horse_id() {
  horse_id_ = 0u;
  clear_has_horse_id();
}
inline ::google::protobuf::uint32 MsgHorseRoundBetInfo::horse_id() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoundBetInfo.horse_id)
  return horse_id_;
}
inline void MsgHorseRoundBetInfo::set_horse_id(::google::protobuf::uint32 value) {
  set_has_horse_id();
  horse_id_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseRoundBetInfo.horse_id)
}

// optional uint32 bet_round = 2;
inline bool MsgHorseRoundBetInfo::has_bet_round() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHorseRoundBetInfo::set_has_bet_round() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHorseRoundBetInfo::clear_has_bet_round() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHorseRoundBetInfo::clear_bet_round() {
  bet_round_ = 0u;
  clear_has_bet_round();
}
inline ::google::protobuf::uint32 MsgHorseRoundBetInfo::bet_round() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoundBetInfo.bet_round)
  return bet_round_;
}
inline void MsgHorseRoundBetInfo::set_bet_round(::google::protobuf::uint32 value) {
  set_has_bet_round();
  bet_round_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseRoundBetInfo.bet_round)
}

// optional .THorseRoundBetType bet_type = 3;
inline bool MsgHorseRoundBetInfo::has_bet_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgHorseRoundBetInfo::set_has_bet_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgHorseRoundBetInfo::clear_has_bet_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgHorseRoundBetInfo::clear_bet_type() {
  bet_type_ = 1;
  clear_has_bet_type();
}
inline ::THorseRoundBetType MsgHorseRoundBetInfo::bet_type() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoundBetInfo.bet_type)
  return static_cast< ::THorseRoundBetType >(bet_type_);
}
inline void MsgHorseRoundBetInfo::set_bet_type(::THorseRoundBetType value) {
  assert(::THorseRoundBetType_IsValid(value));
  set_has_bet_type();
  bet_type_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseRoundBetInfo.bet_type)
}

// optional uint64 bet_money = 4;
inline bool MsgHorseRoundBetInfo::has_bet_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgHorseRoundBetInfo::set_has_bet_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgHorseRoundBetInfo::clear_has_bet_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgHorseRoundBetInfo::clear_bet_money() {
  bet_money_ = GOOGLE_ULONGLONG(0);
  clear_has_bet_money();
}
inline ::google::protobuf::uint64 MsgHorseRoundBetInfo::bet_money() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoundBetInfo.bet_money)
  return bet_money_;
}
inline void MsgHorseRoundBetInfo::set_bet_money(::google::protobuf::uint64 value) {
  set_has_bet_money();
  bet_money_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseRoundBetInfo.bet_money)
}

// optional uint64 bet_odd = 5;
inline bool MsgHorseRoundBetInfo::has_bet_odd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgHorseRoundBetInfo::set_has_bet_odd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgHorseRoundBetInfo::clear_has_bet_odd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgHorseRoundBetInfo::clear_bet_odd() {
  bet_odd_ = GOOGLE_ULONGLONG(0);
  clear_has_bet_odd();
}
inline ::google::protobuf::uint64 MsgHorseRoundBetInfo::bet_odd() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoundBetInfo.bet_odd)
  return bet_odd_;
}
inline void MsgHorseRoundBetInfo::set_bet_odd(::google::protobuf::uint64 value) {
  set_has_bet_odd();
  bet_odd_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseRoundBetInfo.bet_odd)
}

// -------------------------------------------------------------------

// MsgHorsePlayerBetInfo

// optional uint64 ply_money = 1;
inline bool MsgHorsePlayerBetInfo::has_ply_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHorsePlayerBetInfo::set_has_ply_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHorsePlayerBetInfo::clear_has_ply_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHorsePlayerBetInfo::clear_ply_money() {
  ply_money_ = GOOGLE_ULONGLONG(0);
  clear_has_ply_money();
}
inline ::google::protobuf::uint64 MsgHorsePlayerBetInfo::ply_money() const {
  // @@protoc_insertion_point(field_get:MsgHorsePlayerBetInfo.ply_money)
  return ply_money_;
}
inline void MsgHorsePlayerBetInfo::set_ply_money(::google::protobuf::uint64 value) {
  set_has_ply_money();
  ply_money_ = value;
  // @@protoc_insertion_point(field_set:MsgHorsePlayerBetInfo.ply_money)
}

// repeated .MsgHorseRoundBetInfo round_bet_list = 2;
inline int MsgHorsePlayerBetInfo::round_bet_list_size() const {
  return round_bet_list_.size();
}
inline void MsgHorsePlayerBetInfo::clear_round_bet_list() {
  round_bet_list_.Clear();
}
inline const ::MsgHorseRoundBetInfo& MsgHorsePlayerBetInfo::round_bet_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgHorsePlayerBetInfo.round_bet_list)
  return round_bet_list_.Get(index);
}
inline ::MsgHorseRoundBetInfo* MsgHorsePlayerBetInfo::mutable_round_bet_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgHorsePlayerBetInfo.round_bet_list)
  return round_bet_list_.Mutable(index);
}
inline ::MsgHorseRoundBetInfo* MsgHorsePlayerBetInfo::add_round_bet_list() {
  // @@protoc_insertion_point(field_add:MsgHorsePlayerBetInfo.round_bet_list)
  return round_bet_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo >&
MsgHorsePlayerBetInfo::round_bet_list() const {
  // @@protoc_insertion_point(field_list:MsgHorsePlayerBetInfo.round_bet_list)
  return round_bet_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo >*
MsgHorsePlayerBetInfo::mutable_round_bet_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgHorsePlayerBetInfo.round_bet_list)
  return &round_bet_list_;
}

// -------------------------------------------------------------------

// MsgSerialBetInfo

// repeated .THorseBetResultType single_result_list = 1;
inline int MsgSerialBetInfo::single_result_list_size() const {
  return single_result_list_.size();
}
inline void MsgSerialBetInfo::clear_single_result_list() {
  single_result_list_.Clear();
}
inline ::THorseBetResultType MsgSerialBetInfo::single_result_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgSerialBetInfo.single_result_list)
  return static_cast< ::THorseBetResultType >(single_result_list_.Get(index));
}
inline void MsgSerialBetInfo::set_single_result_list(int index, ::THorseBetResultType value) {
  assert(::THorseBetResultType_IsValid(value));
  single_result_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgSerialBetInfo.single_result_list)
}
inline void MsgSerialBetInfo::add_single_result_list(::THorseBetResultType value) {
  assert(::THorseBetResultType_IsValid(value));
  single_result_list_.Add(value);
  // @@protoc_insertion_point(field_add:MsgSerialBetInfo.single_result_list)
}
inline const ::google::protobuf::RepeatedField<int>&
MsgSerialBetInfo::single_result_list() const {
  // @@protoc_insertion_point(field_list:MsgSerialBetInfo.single_result_list)
  return single_result_list_;
}
inline ::google::protobuf::RepeatedField<int>*
MsgSerialBetInfo::mutable_single_result_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgSerialBetInfo.single_result_list)
  return &single_result_list_;
}

// -------------------------------------------------------------------

// MsgHorsePlayerInfo

// optional .MsgPlayerInfo player_base = 1;
inline bool MsgHorsePlayerInfo::has_player_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHorsePlayerInfo::set_has_player_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHorsePlayerInfo::clear_has_player_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHorsePlayerInfo::clear_player_base() {
  if (player_base_ != NULL) player_base_->::MsgPlayerInfo::Clear();
  clear_has_player_base();
}
inline const ::MsgPlayerInfo& MsgHorsePlayerInfo::player_base() const {
  // @@protoc_insertion_point(field_get:MsgHorsePlayerInfo.player_base)
  return player_base_ != NULL ? *player_base_ : *default_instance_->player_base_;
}
inline ::MsgPlayerInfo* MsgHorsePlayerInfo::mutable_player_base() {
  set_has_player_base();
  if (player_base_ == NULL) player_base_ = new ::MsgPlayerInfo;
  // @@protoc_insertion_point(field_mutable:MsgHorsePlayerInfo.player_base)
  return player_base_;
}
inline ::MsgPlayerInfo* MsgHorsePlayerInfo::release_player_base() {
  clear_has_player_base();
  ::MsgPlayerInfo* temp = player_base_;
  player_base_ = NULL;
  return temp;
}
inline void MsgHorsePlayerInfo::set_allocated_player_base(::MsgPlayerInfo* player_base) {
  delete player_base_;
  player_base_ = player_base;
  if (player_base) {
    set_has_player_base();
  } else {
    clear_has_player_base();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgHorsePlayerInfo.player_base)
}

// optional .MsgSerialBetInfo bet_result_list = 2;
inline bool MsgHorsePlayerInfo::has_bet_result_list() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHorsePlayerInfo::set_has_bet_result_list() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHorsePlayerInfo::clear_has_bet_result_list() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHorsePlayerInfo::clear_bet_result_list() {
  if (bet_result_list_ != NULL) bet_result_list_->::MsgSerialBetInfo::Clear();
  clear_has_bet_result_list();
}
inline const ::MsgSerialBetInfo& MsgHorsePlayerInfo::bet_result_list() const {
  // @@protoc_insertion_point(field_get:MsgHorsePlayerInfo.bet_result_list)
  return bet_result_list_ != NULL ? *bet_result_list_ : *default_instance_->bet_result_list_;
}
inline ::MsgSerialBetInfo* MsgHorsePlayerInfo::mutable_bet_result_list() {
  set_has_bet_result_list();
  if (bet_result_list_ == NULL) bet_result_list_ = new ::MsgSerialBetInfo;
  // @@protoc_insertion_point(field_mutable:MsgHorsePlayerInfo.bet_result_list)
  return bet_result_list_;
}
inline ::MsgSerialBetInfo* MsgHorsePlayerInfo::release_bet_result_list() {
  clear_has_bet_result_list();
  ::MsgSerialBetInfo* temp = bet_result_list_;
  bet_result_list_ = NULL;
  return temp;
}
inline void MsgHorsePlayerInfo::set_allocated_bet_result_list(::MsgSerialBetInfo* bet_result_list) {
  delete bet_result_list_;
  bet_result_list_ = bet_result_list;
  if (bet_result_list) {
    set_has_bet_result_list();
  } else {
    clear_has_bet_result_list();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgHorsePlayerInfo.bet_result_list)
}

// -------------------------------------------------------------------

// MsgHorsePlayerRankInfo

// optional string player_name = 1;
inline bool MsgHorsePlayerRankInfo::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHorsePlayerRankInfo::set_has_player_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHorsePlayerRankInfo::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHorsePlayerRankInfo::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& MsgHorsePlayerRankInfo::player_name() const {
  // @@protoc_insertion_point(field_get:MsgHorsePlayerRankInfo.player_name)
  return *player_name_;
}
inline void MsgHorsePlayerRankInfo::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgHorsePlayerRankInfo.player_name)
}
inline void MsgHorsePlayerRankInfo::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgHorsePlayerRankInfo.player_name)
}
inline void MsgHorsePlayerRankInfo::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgHorsePlayerRankInfo.player_name)
}
inline ::std::string* MsgHorsePlayerRankInfo::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    player_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgHorsePlayerRankInfo.player_name)
  return player_name_;
}
inline ::std::string* MsgHorsePlayerRankInfo::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgHorsePlayerRankInfo::set_allocated_player_name(::std::string* player_name) {
  if (player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete player_name_;
  }
  if (player_name) {
    set_has_player_name();
    player_name_ = player_name;
  } else {
    clear_has_player_name();
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgHorsePlayerRankInfo.player_name)
}

// optional uint32 bet_horse = 2;
inline bool MsgHorsePlayerRankInfo::has_bet_horse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHorsePlayerRankInfo::set_has_bet_horse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHorsePlayerRankInfo::clear_has_bet_horse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHorsePlayerRankInfo::clear_bet_horse() {
  bet_horse_ = 0u;
  clear_has_bet_horse();
}
inline ::google::protobuf::uint32 MsgHorsePlayerRankInfo::bet_horse() const {
  // @@protoc_insertion_point(field_get:MsgHorsePlayerRankInfo.bet_horse)
  return bet_horse_;
}
inline void MsgHorsePlayerRankInfo::set_bet_horse(::google::protobuf::uint32 value) {
  set_has_bet_horse();
  bet_horse_ = value;
  // @@protoc_insertion_point(field_set:MsgHorsePlayerRankInfo.bet_horse)
}

// optional uint32 win_round = 3;
inline bool MsgHorsePlayerRankInfo::has_win_round() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgHorsePlayerRankInfo::set_has_win_round() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgHorsePlayerRankInfo::clear_has_win_round() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgHorsePlayerRankInfo::clear_win_round() {
  win_round_ = 0u;
  clear_has_win_round();
}
inline ::google::protobuf::uint32 MsgHorsePlayerRankInfo::win_round() const {
  // @@protoc_insertion_point(field_get:MsgHorsePlayerRankInfo.win_round)
  return win_round_;
}
inline void MsgHorsePlayerRankInfo::set_win_round(::google::protobuf::uint32 value) {
  set_has_win_round();
  win_round_ = value;
  // @@protoc_insertion_point(field_set:MsgHorsePlayerRankInfo.win_round)
}

// -------------------------------------------------------------------

// MsgHorseRaceResult

// repeated uint32 result_list = 1;
inline int MsgHorseRaceResult::result_list_size() const {
  return result_list_.size();
}
inline void MsgHorseRaceResult::clear_result_list() {
  result_list_.Clear();
}
inline ::google::protobuf::uint32 MsgHorseRaceResult::result_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgHorseRaceResult.result_list)
  return result_list_.Get(index);
}
inline void MsgHorseRaceResult::set_result_list(int index, ::google::protobuf::uint32 value) {
  result_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgHorseRaceResult.result_list)
}
inline void MsgHorseRaceResult::add_result_list(::google::protobuf::uint32 value) {
  result_list_.Add(value);
  // @@protoc_insertion_point(field_add:MsgHorseRaceResult.result_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgHorseRaceResult::result_list() const {
  // @@protoc_insertion_point(field_list:MsgHorseRaceResult.result_list)
  return result_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgHorseRaceResult::mutable_result_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgHorseRaceResult.result_list)
  return &result_list_;
}

// optional uint32 random_int = 2;
inline bool MsgHorseRaceResult::has_random_int() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHorseRaceResult::set_has_random_int() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHorseRaceResult::clear_has_random_int() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHorseRaceResult::clear_random_int() {
  random_int_ = 0u;
  clear_has_random_int();
}
inline ::google::protobuf::uint32 MsgHorseRaceResult::random_int() const {
  // @@protoc_insertion_point(field_get:MsgHorseRaceResult.random_int)
  return random_int_;
}
inline void MsgHorseRaceResult::set_random_int(::google::protobuf::uint32 value) {
  set_has_random_int();
  random_int_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseRaceResult.random_int)
}

// -------------------------------------------------------------------

// MsgHorseGroup

// optional uint32 horse_id = 1;
inline bool MsgHorseGroup::has_horse_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHorseGroup::set_has_horse_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHorseGroup::clear_has_horse_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHorseGroup::clear_horse_id() {
  horse_id_ = 0u;
  clear_has_horse_id();
}
inline ::google::protobuf::uint32 MsgHorseGroup::horse_id() const {
  // @@protoc_insertion_point(field_get:MsgHorseGroup.horse_id)
  return horse_id_;
}
inline void MsgHorseGroup::set_horse_id(::google::protobuf::uint32 value) {
  set_has_horse_id();
  horse_id_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseGroup.horse_id)
}

// optional string name = 2;
inline bool MsgHorseGroup::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHorseGroup::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHorseGroup::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHorseGroup::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgHorseGroup::name() const {
  // @@protoc_insertion_point(field_get:MsgHorseGroup.name)
  return *name_;
}
inline void MsgHorseGroup::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgHorseGroup.name)
}
inline void MsgHorseGroup::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgHorseGroup.name)
}
inline void MsgHorseGroup::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgHorseGroup.name)
}
inline ::std::string* MsgHorseGroup::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgHorseGroup.name)
  return name_;
}
inline ::std::string* MsgHorseGroup::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgHorseGroup::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgHorseGroup.name)
}

// optional uint64 put_bets = 3;
inline bool MsgHorseGroup::has_put_bets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgHorseGroup::set_has_put_bets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgHorseGroup::clear_has_put_bets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgHorseGroup::clear_put_bets() {
  put_bets_ = GOOGLE_ULONGLONG(0);
  clear_has_put_bets();
}
inline ::google::protobuf::uint64 MsgHorseGroup::put_bets() const {
  // @@protoc_insertion_point(field_get:MsgHorseGroup.put_bets)
  return put_bets_;
}
inline void MsgHorseGroup::set_put_bets(::google::protobuf::uint64 value) {
  set_has_put_bets();
  put_bets_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseGroup.put_bets)
}

// optional uint32 last_rank = 4;
inline bool MsgHorseGroup::has_last_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgHorseGroup::set_has_last_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgHorseGroup::clear_has_last_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgHorseGroup::clear_last_rank() {
  last_rank_ = 0u;
  clear_has_last_rank();
}
inline ::google::protobuf::uint32 MsgHorseGroup::last_rank() const {
  // @@protoc_insertion_point(field_get:MsgHorseGroup.last_rank)
  return last_rank_;
}
inline void MsgHorseGroup::set_last_rank(::google::protobuf::uint32 value) {
  set_has_last_rank();
  last_rank_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseGroup.last_rank)
}

// -------------------------------------------------------------------

// MsgAllBetAndOddInfo

// repeated .MsgHorseRoundBetInfo all_info_list = 1;
inline int MsgAllBetAndOddInfo::all_info_list_size() const {
  return all_info_list_.size();
}
inline void MsgAllBetAndOddInfo::clear_all_info_list() {
  all_info_list_.Clear();
}
inline const ::MsgHorseRoundBetInfo& MsgAllBetAndOddInfo::all_info_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgAllBetAndOddInfo.all_info_list)
  return all_info_list_.Get(index);
}
inline ::MsgHorseRoundBetInfo* MsgAllBetAndOddInfo::mutable_all_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgAllBetAndOddInfo.all_info_list)
  return all_info_list_.Mutable(index);
}
inline ::MsgHorseRoundBetInfo* MsgAllBetAndOddInfo::add_all_info_list() {
  // @@protoc_insertion_point(field_add:MsgAllBetAndOddInfo.all_info_list)
  return all_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo >&
MsgAllBetAndOddInfo::all_info_list() const {
  // @@protoc_insertion_point(field_list:MsgAllBetAndOddInfo.all_info_list)
  return all_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgHorseRoundBetInfo >*
MsgAllBetAndOddInfo::mutable_all_info_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgAllBetAndOddInfo.all_info_list)
  return &all_info_list_;
}

// -------------------------------------------------------------------

// MsgHorseShowPlayerInfo

// optional uint64 player_id = 1;
inline bool MsgHorseShowPlayerInfo::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHorseShowPlayerInfo::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHorseShowPlayerInfo::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHorseShowPlayerInfo::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 MsgHorseShowPlayerInfo::player_id() const {
  // @@protoc_insertion_point(field_get:MsgHorseShowPlayerInfo.player_id)
  return player_id_;
}
inline void MsgHorseShowPlayerInfo::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseShowPlayerInfo.player_id)
}

// optional string username = 2;
inline bool MsgHorseShowPlayerInfo::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHorseShowPlayerInfo::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHorseShowPlayerInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHorseShowPlayerInfo::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& MsgHorseShowPlayerInfo::username() const {
  // @@protoc_insertion_point(field_get:MsgHorseShowPlayerInfo.username)
  return *username_;
}
inline void MsgHorseShowPlayerInfo::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:MsgHorseShowPlayerInfo.username)
}
inline void MsgHorseShowPlayerInfo::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgHorseShowPlayerInfo.username)
}
inline void MsgHorseShowPlayerInfo::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgHorseShowPlayerInfo.username)
}
inline ::std::string* MsgHorseShowPlayerInfo::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgHorseShowPlayerInfo.username)
  return username_;
}
inline ::std::string* MsgHorseShowPlayerInfo::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgHorseShowPlayerInfo::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgHorseShowPlayerInfo.username)
}

// optional uint32 portrait_id = 3;
inline bool MsgHorseShowPlayerInfo::has_portrait_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgHorseShowPlayerInfo::set_has_portrait_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgHorseShowPlayerInfo::clear_has_portrait_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgHorseShowPlayerInfo::clear_portrait_id() {
  portrait_id_ = 0u;
  clear_has_portrait_id();
}
inline ::google::protobuf::uint32 MsgHorseShowPlayerInfo::portrait_id() const {
  // @@protoc_insertion_point(field_get:MsgHorseShowPlayerInfo.portrait_id)
  return portrait_id_;
}
inline void MsgHorseShowPlayerInfo::set_portrait_id(::google::protobuf::uint32 value) {
  set_has_portrait_id();
  portrait_id_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseShowPlayerInfo.portrait_id)
}

// optional uint32 vip_level = 4;
inline bool MsgHorseShowPlayerInfo::has_vip_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgHorseShowPlayerInfo::set_has_vip_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgHorseShowPlayerInfo::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgHorseShowPlayerInfo::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 MsgHorseShowPlayerInfo::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgHorseShowPlayerInfo.vip_level)
  return vip_level_;
}
inline void MsgHorseShowPlayerInfo::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseShowPlayerInfo.vip_level)
}

// -------------------------------------------------------------------

// MsgHorseRoomInfo

// optional .THorseState room_state = 1;
inline bool MsgHorseRoomInfo::has_room_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHorseRoomInfo::set_has_room_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHorseRoomInfo::clear_has_room_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHorseRoomInfo::clear_room_state() {
  room_state_ = 1;
  clear_has_room_state();
}
inline ::THorseState MsgHorseRoomInfo::room_state() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoomInfo.room_state)
  return static_cast< ::THorseState >(room_state_);
}
inline void MsgHorseRoomInfo::set_room_state(::THorseState value) {
  assert(::THorseState_IsValid(value));
  set_has_room_state();
  room_state_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseRoomInfo.room_state)
}

// optional int64 sur_time = 2;
inline bool MsgHorseRoomInfo::has_sur_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHorseRoomInfo::set_has_sur_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHorseRoomInfo::clear_has_sur_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHorseRoomInfo::clear_sur_time() {
  sur_time_ = GOOGLE_LONGLONG(0);
  clear_has_sur_time();
}
inline ::google::protobuf::int64 MsgHorseRoomInfo::sur_time() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoomInfo.sur_time)
  return sur_time_;
}
inline void MsgHorseRoomInfo::set_sur_time(::google::protobuf::int64 value) {
  set_has_sur_time();
  sur_time_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseRoomInfo.sur_time)
}

// optional .MsgHorsePlayerInfo self = 3;
inline bool MsgHorseRoomInfo::has_self() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgHorseRoomInfo::set_has_self() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgHorseRoomInfo::clear_has_self() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgHorseRoomInfo::clear_self() {
  if (self_ != NULL) self_->::MsgHorsePlayerInfo::Clear();
  clear_has_self();
}
inline const ::MsgHorsePlayerInfo& MsgHorseRoomInfo::self() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoomInfo.self)
  return self_ != NULL ? *self_ : *default_instance_->self_;
}
inline ::MsgHorsePlayerInfo* MsgHorseRoomInfo::mutable_self() {
  set_has_self();
  if (self_ == NULL) self_ = new ::MsgHorsePlayerInfo;
  // @@protoc_insertion_point(field_mutable:MsgHorseRoomInfo.self)
  return self_;
}
inline ::MsgHorsePlayerInfo* MsgHorseRoomInfo::release_self() {
  clear_has_self();
  ::MsgHorsePlayerInfo* temp = self_;
  self_ = NULL;
  return temp;
}
inline void MsgHorseRoomInfo::set_allocated_self(::MsgHorsePlayerInfo* self) {
  delete self_;
  self_ = self;
  if (self) {
    set_has_self();
  } else {
    clear_has_self();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgHorseRoomInfo.self)
}

// repeated .MsgHorsePlayerRankInfo player_list = 4;
inline int MsgHorseRoomInfo::player_list_size() const {
  return player_list_.size();
}
inline void MsgHorseRoomInfo::clear_player_list() {
  player_list_.Clear();
}
inline const ::MsgHorsePlayerRankInfo& MsgHorseRoomInfo::player_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgHorseRoomInfo.player_list)
  return player_list_.Get(index);
}
inline ::MsgHorsePlayerRankInfo* MsgHorseRoomInfo::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgHorseRoomInfo.player_list)
  return player_list_.Mutable(index);
}
inline ::MsgHorsePlayerRankInfo* MsgHorseRoomInfo::add_player_list() {
  // @@protoc_insertion_point(field_add:MsgHorseRoomInfo.player_list)
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgHorsePlayerRankInfo >&
MsgHorseRoomInfo::player_list() const {
  // @@protoc_insertion_point(field_list:MsgHorseRoomInfo.player_list)
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgHorsePlayerRankInfo >*
MsgHorseRoomInfo::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgHorseRoomInfo.player_list)
  return &player_list_;
}

// repeated .MsgHorseGroup six_horse = 5;
inline int MsgHorseRoomInfo::six_horse_size() const {
  return six_horse_.size();
}
inline void MsgHorseRoomInfo::clear_six_horse() {
  six_horse_.Clear();
}
inline const ::MsgHorseGroup& MsgHorseRoomInfo::six_horse(int index) const {
  // @@protoc_insertion_point(field_get:MsgHorseRoomInfo.six_horse)
  return six_horse_.Get(index);
}
inline ::MsgHorseGroup* MsgHorseRoomInfo::mutable_six_horse(int index) {
  // @@protoc_insertion_point(field_mutable:MsgHorseRoomInfo.six_horse)
  return six_horse_.Mutable(index);
}
inline ::MsgHorseGroup* MsgHorseRoomInfo::add_six_horse() {
  // @@protoc_insertion_point(field_add:MsgHorseRoomInfo.six_horse)
  return six_horse_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgHorseGroup >&
MsgHorseRoomInfo::six_horse() const {
  // @@protoc_insertion_point(field_list:MsgHorseRoomInfo.six_horse)
  return six_horse_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgHorseGroup >*
MsgHorseRoomInfo::mutable_six_horse() {
  // @@protoc_insertion_point(field_mutable_list:MsgHorseRoomInfo.six_horse)
  return &six_horse_;
}

// optional uint64 room_id = 6;
inline bool MsgHorseRoomInfo::has_room_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgHorseRoomInfo::set_has_room_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgHorseRoomInfo::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgHorseRoomInfo::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
  clear_has_room_id();
}
inline ::google::protobuf::uint64 MsgHorseRoomInfo::room_id() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoomInfo.room_id)
  return room_id_;
}
inline void MsgHorseRoomInfo::set_room_id(::google::protobuf::uint64 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:MsgHorseRoomInfo.room_id)
}

// optional .MsgBaseRoomInfo room_info = 7;
inline bool MsgHorseRoomInfo::has_room_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgHorseRoomInfo::set_has_room_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgHorseRoomInfo::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgHorseRoomInfo::clear_room_info() {
  if (room_info_ != NULL) room_info_->::MsgBaseRoomInfo::Clear();
  clear_has_room_info();
}
inline const ::MsgBaseRoomInfo& MsgHorseRoomInfo::room_info() const {
  // @@protoc_insertion_point(field_get:MsgHorseRoomInfo.room_info)
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::MsgBaseRoomInfo* MsgHorseRoomInfo::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) room_info_ = new ::MsgBaseRoomInfo;
  // @@protoc_insertion_point(field_mutable:MsgHorseRoomInfo.room_info)
  return room_info_;
}
inline ::MsgBaseRoomInfo* MsgHorseRoomInfo::release_room_info() {
  clear_has_room_info();
  ::MsgBaseRoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void MsgHorseRoomInfo::set_allocated_room_info(::MsgBaseRoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgHorseRoomInfo.room_info)
}

// repeated .MsgHorseShowPlayerInfo show_player_list = 8;
inline int MsgHorseRoomInfo::show_player_list_size() const {
  return show_player_list_.size();
}
inline void MsgHorseRoomInfo::clear_show_player_list() {
  show_player_list_.Clear();
}
inline const ::MsgHorseShowPlayerInfo& MsgHorseRoomInfo::show_player_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgHorseRoomInfo.show_player_list)
  return show_player_list_.Get(index);
}
inline ::MsgHorseShowPlayerInfo* MsgHorseRoomInfo::mutable_show_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgHorseRoomInfo.show_player_list)
  return show_player_list_.Mutable(index);
}
inline ::MsgHorseShowPlayerInfo* MsgHorseRoomInfo::add_show_player_list() {
  // @@protoc_insertion_point(field_add:MsgHorseRoomInfo.show_player_list)
  return show_player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgHorseShowPlayerInfo >&
MsgHorseRoomInfo::show_player_list() const {
  // @@protoc_insertion_point(field_list:MsgHorseRoomInfo.show_player_list)
  return show_player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgHorseShowPlayerInfo >*
MsgHorseRoomInfo::mutable_show_player_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgHorseRoomInfo.show_player_list)
  return &show_player_list_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::THorseState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::THorseState>() {
  return ::THorseState_descriptor();
}
template <> struct is_proto_enum< ::THorseRoundBetType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::THorseRoundBetType>() {
  return ::THorseRoundBetType_descriptor();
}
template <> struct is_proto_enum< ::THorseBetResultType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::THorseBetResultType>() {
  return ::THorseBetResultType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fhorse_2eproto__INCLUDED
