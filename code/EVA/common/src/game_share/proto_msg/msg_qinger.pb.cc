// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_qinger.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_qinger.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MsgQingErMendFlower_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErMendFlower_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErUserAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErUserAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErUserPower_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErUserPower_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErOutCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErOutCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErUserOperate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErUserOperate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErRoleScore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErRoleScore_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErCardData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErCardData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErPrivateRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErPrivateRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErWeaveCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErWeaveCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErFlowerList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErFlowerList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErFlowerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErFlowerData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErShowDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErShowDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErShowDownEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErShowDownEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErIntegralCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErIntegralCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErStatisticsEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErStatisticsEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErStatisticsEventList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErStatisticsEventList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErShowDownCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErShowDownCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErRoleCathecticCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErRoleCathecticCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErChaoZhuangInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErChaoZhuangInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgQingErJianZhangInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgQingErJianZhangInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErRoleState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErStatisticsEvent_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErDirection_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErJianZhang_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErChaoZhangValue_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErBarState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErASK_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErCHR_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TQingErShowDownScore_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fqinger_2eproto() {
  protobuf_AddDesc_msg_5fqinger_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_qinger.proto");
  GOOGLE_CHECK(file != NULL);
  MsgQingErMendFlower_descriptor_ = file->message_type(0);
  static const int MsgQingErMendFlower_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, handcard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, flower_bar_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, flower_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, surplus_hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, role_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, flower_card_list_),
  };
  MsgQingErMendFlower_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErMendFlower_descriptor_,
      MsgQingErMendFlower::default_instance_,
      MsgQingErMendFlower_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErMendFlower, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErMendFlower));
  MsgQingErUserAction_descriptor_ = file->message_type(1);
  static const int MsgQingErUserAction_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, room_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, flower_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, gang_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, flower_bar_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, surplus_hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, sub_money_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, role_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, launch_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, liangxi_wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, buxi_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, flower_card_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, eat_card_),
  };
  MsgQingErUserAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErUserAction_descriptor_,
      MsgQingErUserAction::default_instance_,
      MsgQingErUserAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErUserAction));
  MsgQingErUserPower_descriptor_ = file->message_type(2);
  static const int MsgQingErUserPower_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserPower, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserPower, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserPower, handle_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserPower, new_card_),
  };
  MsgQingErUserPower_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErUserPower_descriptor_,
      MsgQingErUserPower::default_instance_,
      MsgQingErUserPower_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserPower, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserPower, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErUserPower));
  MsgQingErOutCard_descriptor_ = file->message_type(3);
  static const int MsgQingErOutCard_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, hand_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, river_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, role_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, role_state_),
  };
  MsgQingErOutCard_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErOutCard_descriptor_,
      MsgQingErOutCard::default_instance_,
      MsgQingErOutCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErOutCard, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErOutCard));
  MsgQingErUserOperate_descriptor_ = file->message_type(4);
  static const int MsgQingErUserOperate_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserOperate, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserOperate, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserOperate, gang_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserOperate, ahold_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserOperate, liangxi_wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserOperate, buxi_card_),
  };
  MsgQingErUserOperate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErUserOperate_descriptor_,
      MsgQingErUserOperate::default_instance_,
      MsgQingErUserOperate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserOperate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErUserOperate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErUserOperate));
  MsgQingErRoleScore_descriptor_ = file->message_type(5);
  static const int MsgQingErRoleScore_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoleScore, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoleScore, score_),
  };
  MsgQingErRoleScore_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErRoleScore_descriptor_,
      MsgQingErRoleScore::default_instance_,
      MsgQingErRoleScore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoleScore, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoleScore, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErRoleScore));
  MsgQingErCardData_descriptor_ = file->message_type(6);
  static const int MsgQingErCardData_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, tarid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, srcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, barkind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, show_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, sub_money_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, mix_card_),
  };
  MsgQingErCardData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErCardData_descriptor_,
      MsgQingErCardData::default_instance_,
      MsgQingErCardData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErCardData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErCardData));
  MsgQingErPlayer_descriptor_ = file->message_type(7);
  static const int MsgQingErPlayer_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, player_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, river_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, weave_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, wik_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, td_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, chaozhuang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, gang_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, flower_card_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, peng_card_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, qifei_card_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, hu_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, hu_card_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, role_score_),
  };
  MsgQingErPlayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErPlayer_descriptor_,
      MsgQingErPlayer::default_instance_,
      MsgQingErPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPlayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErPlayer));
  MsgQingErRoom_descriptor_ = file->message_type(8);
  static const int MsgQingErRoom_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, room_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, player_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, banker_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, action_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, hand_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, room_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, surplus_hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, base_flower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, send_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, room_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, game_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, state_run_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, private_room_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, jian_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, game_circle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, out_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, param_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, gang_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, show_down_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, role_host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, role_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, room_pay_type_),
  };
  MsgQingErRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErRoom_descriptor_,
      MsgQingErRoom::default_instance_,
      MsgQingErRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErRoom));
  MsgQingErPrivateRoom_descriptor_ = file->message_type(9);
  static const int MsgQingErPrivateRoom_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPrivateRoom, special_kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPrivateRoom, consume_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPrivateRoom, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPrivateRoom, player_number_),
  };
  MsgQingErPrivateRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErPrivateRoom_descriptor_,
      MsgQingErPrivateRoom::default_instance_,
      MsgQingErPrivateRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPrivateRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErPrivateRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErPrivateRoom));
  MsgQingErWeaveCard_descriptor_ = file->message_type(10);
  static const int MsgQingErWeaveCard_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, carddata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, hand_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, role_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, player_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, weave_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, eat_card_),
  };
  MsgQingErWeaveCard_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErWeaveCard_descriptor_,
      MsgQingErWeaveCard::default_instance_,
      MsgQingErWeaveCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErWeaveCard, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErWeaveCard));
  MsgQingErFlowerList_descriptor_ = file->message_type(11);
  static const int MsgQingErFlowerList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErFlowerList, flower_list_),
  };
  MsgQingErFlowerList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErFlowerList_descriptor_,
      MsgQingErFlowerList::default_instance_,
      MsgQingErFlowerList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErFlowerList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErFlowerList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErFlowerList));
  MsgQingErFlowerData_descriptor_ = file->message_type(12);
  static const int MsgQingErFlowerData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErFlowerData, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErFlowerData, card_),
  };
  MsgQingErFlowerData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErFlowerData_descriptor_,
      MsgQingErFlowerData::default_instance_,
      MsgQingErFlowerData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErFlowerData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErFlowerData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErFlowerData));
  MsgQingErShowDown_descriptor_ = file->message_type(13);
  static const int MsgQingErShowDown_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, hukind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, hand_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, hard_flower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, mild_flower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, baota_flower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, hu_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, total_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, pack_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, total_pack_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, event_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, hu_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, hand_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, hu_list_),
  };
  MsgQingErShowDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErShowDown_descriptor_,
      MsgQingErShowDown::default_instance_,
      MsgQingErShowDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErShowDown));
  MsgQingErShowDownEvent_descriptor_ = file->message_type(14);
  static const int MsgQingErShowDownEvent_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownEvent, event_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownEvent, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownEvent, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownEvent, score_count_),
  };
  MsgQingErShowDownEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErShowDownEvent_descriptor_,
      MsgQingErShowDownEvent::default_instance_,
      MsgQingErShowDownEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErShowDownEvent));
  MsgQingErIntegralCount_descriptor_ = file->message_type(15);
  static const int MsgQingErIntegralCount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErIntegralCount, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErIntegralCount, count_),
  };
  MsgQingErIntegralCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErIntegralCount_descriptor_,
      MsgQingErIntegralCount::default_instance_,
      MsgQingErIntegralCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErIntegralCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErIntegralCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErIntegralCount));
  MsgQingErStatisticsEvent_descriptor_ = file->message_type(16);
  static const int MsgQingErStatisticsEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErStatisticsEvent, event_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErStatisticsEvent, count_),
  };
  MsgQingErStatisticsEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErStatisticsEvent_descriptor_,
      MsgQingErStatisticsEvent::default_instance_,
      MsgQingErStatisticsEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErStatisticsEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErStatisticsEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErStatisticsEvent));
  MsgQingErStatisticsEventList_descriptor_ = file->message_type(17);
  static const int MsgQingErStatisticsEventList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErStatisticsEventList, roel_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErStatisticsEventList, event_list_),
  };
  MsgQingErStatisticsEventList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErStatisticsEventList_descriptor_,
      MsgQingErStatisticsEventList::default_instance_,
      MsgQingErStatisticsEventList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErStatisticsEventList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErStatisticsEventList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErStatisticsEventList));
  MsgQingErShowDownCount_descriptor_ = file->message_type(18);
  static const int MsgQingErShowDownCount_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, showdown_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, room_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, game_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, game_over_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, other_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, other_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, hu_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, integral_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, event_list_),
  };
  MsgQingErShowDownCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErShowDownCount_descriptor_,
      MsgQingErShowDownCount::default_instance_,
      MsgQingErShowDownCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErShowDownCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErShowDownCount));
  MsgQingErRoleCathecticCount_descriptor_ = file->message_type(19);
  static const int MsgQingErRoleCathecticCount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoleCathecticCount, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoleCathecticCount, cathectic_count_),
  };
  MsgQingErRoleCathecticCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErRoleCathecticCount_descriptor_,
      MsgQingErRoleCathecticCount::default_instance_,
      MsgQingErRoleCathecticCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoleCathecticCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErRoleCathecticCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErRoleCathecticCount));
  MsgQingErChaoZhuangInfo_descriptor_ = file->message_type(20);
  static const int MsgQingErChaoZhuangInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErChaoZhuangInfo, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErChaoZhuangInfo, chaozhuang_value_),
  };
  MsgQingErChaoZhuangInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErChaoZhuangInfo_descriptor_,
      MsgQingErChaoZhuangInfo::default_instance_,
      MsgQingErChaoZhuangInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErChaoZhuangInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErChaoZhuangInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErChaoZhuangInfo));
  MsgQingErJianZhangInfo_descriptor_ = file->message_type(21);
  static const int MsgQingErJianZhangInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErJianZhangInfo, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErJianZhangInfo, jianzhang_card_),
  };
  MsgQingErJianZhangInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgQingErJianZhangInfo_descriptor_,
      MsgQingErJianZhangInfo::default_instance_,
      MsgQingErJianZhangInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErJianZhangInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgQingErJianZhangInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgQingErJianZhangInfo));
  TQingErRoleState_descriptor_ = file->enum_type(0);
  TQingErStatisticsEvent_descriptor_ = file->enum_type(1);
  TQingErDirection_descriptor_ = file->enum_type(2);
  TQingErJianZhang_descriptor_ = file->enum_type(3);
  TQingErChaoZhangValue_descriptor_ = file->enum_type(4);
  TQingErState_descriptor_ = file->enum_type(5);
  TQingErBarState_descriptor_ = file->enum_type(6);
  TQingErASK_descriptor_ = file->enum_type(7);
  TQingErCHR_descriptor_ = file->enum_type(8);
  TQingErShowDownScore_descriptor_ = file->enum_type(9);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fqinger_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErMendFlower_descriptor_, &MsgQingErMendFlower::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErUserAction_descriptor_, &MsgQingErUserAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErUserPower_descriptor_, &MsgQingErUserPower::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErOutCard_descriptor_, &MsgQingErOutCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErUserOperate_descriptor_, &MsgQingErUserOperate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErRoleScore_descriptor_, &MsgQingErRoleScore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErCardData_descriptor_, &MsgQingErCardData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErPlayer_descriptor_, &MsgQingErPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErRoom_descriptor_, &MsgQingErRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErPrivateRoom_descriptor_, &MsgQingErPrivateRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErWeaveCard_descriptor_, &MsgQingErWeaveCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErFlowerList_descriptor_, &MsgQingErFlowerList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErFlowerData_descriptor_, &MsgQingErFlowerData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErShowDown_descriptor_, &MsgQingErShowDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErShowDownEvent_descriptor_, &MsgQingErShowDownEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErIntegralCount_descriptor_, &MsgQingErIntegralCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErStatisticsEvent_descriptor_, &MsgQingErStatisticsEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErStatisticsEventList_descriptor_, &MsgQingErStatisticsEventList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErShowDownCount_descriptor_, &MsgQingErShowDownCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErRoleCathecticCount_descriptor_, &MsgQingErRoleCathecticCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErChaoZhuangInfo_descriptor_, &MsgQingErChaoZhuangInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgQingErJianZhangInfo_descriptor_, &MsgQingErJianZhangInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fqinger_2eproto() {
  delete MsgQingErMendFlower::default_instance_;
  delete MsgQingErMendFlower_reflection_;
  delete MsgQingErUserAction::default_instance_;
  delete MsgQingErUserAction_reflection_;
  delete MsgQingErUserPower::default_instance_;
  delete MsgQingErUserPower_reflection_;
  delete MsgQingErOutCard::default_instance_;
  delete MsgQingErOutCard_reflection_;
  delete MsgQingErUserOperate::default_instance_;
  delete MsgQingErUserOperate_reflection_;
  delete MsgQingErRoleScore::default_instance_;
  delete MsgQingErRoleScore_reflection_;
  delete MsgQingErCardData::default_instance_;
  delete MsgQingErCardData_reflection_;
  delete MsgQingErPlayer::default_instance_;
  delete MsgQingErPlayer_reflection_;
  delete MsgQingErRoom::default_instance_;
  delete MsgQingErRoom_reflection_;
  delete MsgQingErPrivateRoom::default_instance_;
  delete MsgQingErPrivateRoom_reflection_;
  delete MsgQingErWeaveCard::default_instance_;
  delete MsgQingErWeaveCard_reflection_;
  delete MsgQingErFlowerList::default_instance_;
  delete MsgQingErFlowerList_reflection_;
  delete MsgQingErFlowerData::default_instance_;
  delete MsgQingErFlowerData_reflection_;
  delete MsgQingErShowDown::default_instance_;
  delete MsgQingErShowDown_reflection_;
  delete MsgQingErShowDownEvent::default_instance_;
  delete MsgQingErShowDownEvent_reflection_;
  delete MsgQingErIntegralCount::default_instance_;
  delete MsgQingErIntegralCount_reflection_;
  delete MsgQingErStatisticsEvent::default_instance_;
  delete MsgQingErStatisticsEvent_reflection_;
  delete MsgQingErStatisticsEventList::default_instance_;
  delete MsgQingErStatisticsEventList_reflection_;
  delete MsgQingErShowDownCount::default_instance_;
  delete MsgQingErShowDownCount_reflection_;
  delete MsgQingErRoleCathecticCount::default_instance_;
  delete MsgQingErRoleCathecticCount_reflection_;
  delete MsgQingErChaoZhuangInfo::default_instance_;
  delete MsgQingErChaoZhuangInfo_reflection_;
  delete MsgQingErJianZhangInfo::default_instance_;
  delete MsgQingErJianZhangInfo_reflection_;
}

void protobuf_AddDesc_msg_5fqinger_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_public_5fpro_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020msg_qinger.proto\032\020public_pro.proto\"\320\001\n"
    "\023MsgQingErMendFlower\022\n\n\002id\030\001 \001(\004\022\020\n\010hand"
    "card\030\002 \003(\r\022\030\n\020flower_bar_count\030\003 \001(\r\022\020\n\010"
    "hand_num\030\004 \001(\r\022\022\n\nflower_num\030\005 \001(\r\022\030\n\020su"
    "rplus_hand_num\030\006 \001(\r\022\'\n\nrole_score\030\007 \003(\013"
    "2\023.MsgQingErRoleScore\022\030\n\020flower_card_lis"
    "t\030\010 \003(\r\"\342\002\n\023MsgQingErUserAction\022\n\n\002id\030\001 "
    "\001(\004\022!\n\nroom_state\030\002 \001(\0162\r.TQingErState\022\014"
    "\n\004card\030\003 \001(\r\022\022\n\nflower_num\030\004 \001(\r\022\013\n\003wik\030"
    "\005 \001(\r\022\021\n\tgang_card\030\006 \003(\r\022\030\n\020flower_bar_c"
    "ount\030\007 \001(\r\022\030\n\020surplus_hand_num\030\010 \001(\r\022\024\n\014"
    "sub_money_id\030\t \001(\004\022\'\n\nrole_score\030\n \003(\0132\023"
    ".MsgQingErRoleScore\022\023\n\013launch_card\030\014 \003(\r"
    "\022\023\n\013liangxi_wik\030\r \001(\r\022\021\n\tbuxi_card\030\016 \003(\r"
    "\022\030\n\020flower_card_list\030\017 \003(\r\022\020\n\010eat_card\030\020"
    " \003(\r\"T\n\022MsgQingErUserPower\022\n\n\002id\030\001 \001(\004\022\013"
    "\n\003wik\030\002 \001(\r\022\023\n\013handle_card\030\003 \001(\r\022\020\n\010new_"
    "card\030\004 \001(\r\"\260\001\n\020MsgQingErOutCard\022\n\n\002id\030\001 "
    "\001(\004\022\014\n\004card\030\002 \001(\r\022\r\n\005index\030\003 \001(\005\022\020\n\010hand"
    "_num\030\004 \001(\r\022\021\n\thand_card\030\006 \003(\r\022\021\n\triver_n"
    "um\030\007 \001(\r\022\'\n\nrole_score\030\010 \003(\0132\023.MsgQingEr"
    "RoleScore\022\022\n\nrole_state\030\t \001(\r\"\200\001\n\024MsgQin"
    "gErUserOperate\022\013\n\003wik\030\001 \001(\r\022\014\n\004card\030\002 \001("
    "\r\022\021\n\tgang_card\030\003 \003(\r\022\022\n\nahold_card\030\004 \003(\r"
    "\022\023\n\013liangxi_wik\030\005 \001(\r\022\021\n\tbuxi_card\030\006 \003(\r"
    "\"/\n\022MsgQingErRoleScore\022\n\n\002id\030\001 \001(\004\022\r\n\005sc"
    "ore\030\002 \001(\003\"\231\001\n\021MsgQingErCardData\022\014\n\004card\030"
    "\001 \001(\r\022\013\n\003wik\030\002 \001(\r\022\r\n\005tarid\030\003 \001(\004\022\r\n\005src"
    "id\030\004 \001(\004\022\017\n\007barkind\030\005 \001(\r\022\022\n\nshow_money\030"
    "\006 \001(\010\022\024\n\014sub_money_id\030\007 \001(\004\022\020\n\010mix_card\030"
    "\t \003(\r\"\201\003\n\017MsgQingErPlayer\022#\n\013player_info"
    "\030\001 \001(\0132\016.MsgPlayerInfo\022\r\n\005state\030\002 \001(\r\022\020\n"
    "\010hand_num\030\003 \001(\r\022\022\n\nriver_card\030\004 \003(\r\022&\n\nw"
    "eave_card\030\005 \003(\0132\022.MsgQingErCardData\022\013\n\003w"
    "ik\030\006 \001(\r\022\035\n\002td\030\007 \001(\0162\021.TQingErDirection\022"
    "\022\n\nchaozhuang\030\010 \001(\r\022\021\n\tgang_card\030\t \003(\r\022\030"
    "\n\020flower_card_list\030\n \003(\r\022\026\n\016peng_card_li"
    "st\030\013 \003(\r\022\027\n\017qifei_card_list\030\014 \003(\r\022\017\n\007hu_"
    "card\030\r \001(\r\022\024\n\014hu_card_list\030\016 \003(\r\022\'\n\nrole"
    "_score\030\017 \003(\0132\023.MsgQingErRoleScore\"\375\004\n\rMs"
    "gQingErRoom\022!\n\nroom_state\030\001 \001(\0162\r.TQingE"
    "rState\022%\n\013player_list\030\002 \003(\0132\020.MsgQingErP"
    "layer\022\021\n\tbanker_id\030\003 \001(\004\022\021\n\taction_id\030\004 "
    "\001(\004\022\021\n\thand_card\030\005 \003(\r\022#\n\troom_info\030\006 \001("
    "\0132\020.MsgBaseRoomInfo\022\030\n\020surplus_hand_num\030"
    "\010 \001(\r\022\023\n\013base_flower\030\t \001(\r\022\021\n\tsend_card\030"
    "\n \001(\r\022\017\n\007room_id\030\013 \001(\004\022\021\n\troom_type\030\014 \001("
    "\t\022\022\n\ngame_count\030\r \001(\r\022\026\n\016state_run_time\030"
    "\016 \001(\r\022+\n\014private_room\030\017 \001(\0132\025.MsgQingErP"
    "rivateRoom\022\021\n\tjian_card\030\020 \001(\r\022\023\n\013game_ci"
    "rcle\030\021 \001(\r\022\020\n\010out_card\030\022 \001(\r\022\016\n\006param1\030\023"
    " \001(\r\022\022\n\nparam_list\030\024 \003(\r\022\021\n\tgang_card\030\025 "
    "\003(\r\022/\n\016show_down_info\030\026 \001(\0132\027.MsgQingErS"
    "howDownCount\022$\n\trole_host\030\031 \001(\0132\021.MsgRol"
    "eHostCount\022&\n\nrole_state\030\032 \001(\0132\022.MsgRole"
    "StateCount\022\025\n\rroom_pay_type\030\034 \001(\r\"f\n\024Msg"
    "QingErPrivateRoom\022\024\n\014special_kind\030\001 \001(\r\022"
    "\022\n\nconsume_id\030\002 \001(\r\022\r\n\005score\030\003 \001(\r\022\025\n\rpl"
    "ayer_number\030\004 \001(\r\"\344\001\n\022MsgQingErWeaveCard"
    "\022$\n\010carddata\030\001 \003(\0132\022.MsgQingErCardData\022\020"
    "\n\010hand_num\030\002 \001(\r\022\021\n\thand_card\030\003 \003(\r\022\'\n\nr"
    "ole_score\030\004 \003(\0132\023.MsgQingErRoleScore\022#\n\013"
    "player_list\030\005 \003(\0132\016.MsgPlayerInfo\022\016\n\006par"
    "am1\030\006 \001(\010\022\023\n\013weave_score\030\007 \001(\r\022\020\n\010eat_ca"
    "rd\030\010 \003(\r\"@\n\023MsgQingErFlowerList\022)\n\013flowe"
    "r_list\030\001 \003(\0132\024.MsgQingErFlowerData\"3\n\023Ms"
    "gQingErFlowerData\022\016\n\006roleid\030\001 \001(\004\022\014\n\004car"
    "d\030\002 \003(\r\"\313\002\n\021MsgQingErShowDown\022\016\n\006roleid\030"
    "\001 \001(\004\022\r\n\005money\030\002 \001(\003\022\016\n\006hukind\030\003 \001(\r\022\021\n\t"
    "hand_card\030\004 \003(\r\022\023\n\013hard_flower\030\005 \001(\r\022\023\n\013"
    "mild_flower\030\006 \001(\r\022\024\n\014baota_flower\030\007 \001(\r\022"
    "\017\n\007hu_card\030\010 \001(\r\022\023\n\013total_money\030\t \001(\003\022\022\n"
    "\npack_score\030\n \001(\003\022\030\n\020total_pack_score\030\013 "
    "\001(\003\022,\n\013event_count\030\014 \003(\0132\027.MsgQingErShow"
    "DownEvent\022\017\n\007hu_role\030\r \001(\010\022\020\n\010hand_num\030\016"
    " \001(\r\022\017\n\007hu_list\030\017 \003(\r\"]\n\026MsgQingErShowDo"
    "wnEvent\022\020\n\010event_id\030\001 \001(\r\022\r\n\005count\030\002 \001(\r"
    "\022\r\n\005score\030\003 \003(\005\022\023\n\013score_count\030\004 \003(\r\"7\n\026"
    "MsgQingErIntegralCount\022\016\n\006roleid\030\001 \001(\004\022\r"
    "\n\005count\030\002 \001(\r\"T\n\030MsgQingErStatisticsEven"
    "t\022)\n\010event_id\030\002 \001(\0162\027.TQingErStatisticsE"
    "vent\022\r\n\005count\030\003 \001(\r\"^\n\034MsgQingErStatisti"
    "csEventList\022\017\n\007roel_id\030\001 \001(\004\022-\n\nevent_li"
    "st\030\002 \003(\0132\031.MsgQingErStatisticsEvent\"\311\002\n\026"
    "MsgQingErShowDownCount\022)\n\rshowdown_list\030"
    "\001 \003(\0132\022.MsgQingErShowDown\022!\n\nroom_state\030"
    "\002 \001(\0162\r.TQingErState\022\022\n\ngame_count\030\003 \001(\r"
    "\022\021\n\tgame_over\030\004 \001(\010\022\022\n\nother_card\030\005 \003(\r\022"
    "\023\n\013other_count\030\006 \001(\r\022\014\n\004time\030\007 \001(\r\022\016\n\006pa"
    "ram1\030\010 \001(\r\022\020\n\010hu_state\030\t \001(\r\022.\n\rintegral"
    "_list\030\n \003(\0132\027.MsgQingErIntegralCount\0221\n\n"
    "event_list\030\013 \003(\0132\035.MsgQingErStatisticsEv"
    "entList\"G\n\033MsgQingErRoleCathecticCount\022\017"
    "\n\007role_id\030\001 \001(\004\022\027\n\017cathectic_count\030\002 \001(\r"
    "\"D\n\027MsgQingErChaoZhuangInfo\022\017\n\007role_id\030\001"
    " \001(\004\022\030\n\020chaozhuang_value\030\002 \001(\r\"A\n\026MsgQin"
    "gErJianZhangInfo\022\017\n\007role_id\030\001 \001(\004\022\026\n\016jia"
    "nzhang_card\030\002 \001(\r*\316\002\n\020TQingErRoleState\022\022"
    "\n\016QE_STATE_READY\020\001\022\022\n\016QE_STATE_TRUST\020\002\022\024"
    "\n\020QE_STATE_NEWROLE\020\004\022\027\n\023QE_STATE_ROOM_OW"
    "NER\020\010\022\022\n\016QE_STATE_LEAVE\020\020\022\024\n\020QE_STATE_RE"
    "LIEVE\020 \022\022\n\016QE_STATE_LIMIT\020@\022\025\n\020QE_STATE_"
    "OFFLINE\020\200\001\022\030\n\023QE_STATE_CHAOZHUANG\020\200\002\022\032\n\025"
    "QE_STATE_FANJIANZHANG\020\200\004\022\023\n\016QE_STATE_QIF"
    "EI\020\200\010\022\023\n\016QE_STATE_MO_DA\020\200\020\022\022\n\rQE_STATE_B"
    "ANK\020\200 \022\032\n\025QE_STATE_CONTIUE_GAME\020\200@*\225\001\n\026T"
    "QingErStatisticsEvent\022\036\n\032QE_STATISTICS_D"
    "ANBA_GAOFEN\020\001\022\035\n\031QE_STATISTICS_BUHUA_CIS"
    "HU\020\002\022\035\n\031QE_STATISTICS_HUPAI_CISHU\020\003\022\035\n\031Q"
    "E_STATISTICS_KAIJU_QIFEI\020\004*O\n\020TQingErDir"
    "ection\022\016\n\nQE_DT_NULL\020\000\022\016\n\nQE_DT_DONG\020\001\022\r"
    "\n\tQE_DT_NAN\020\002\022\014\n\010QE_DT_XI\020\003*>\n\020TQingErJi"
    "anZhang\022\025\n\021QE_JIANZHANG_NULL\020\000\022\023\n\017QE_JIA"
    "NZHANG_OK\020\001*|\n\025TQingErChaoZhangValue\022\026\n\022"
    "QE_CHAOZHUANG_NULL\020\000\022\026\n\022QE_CHAOZHUANG_CH"
    "AO\020\001\022\027\n\023QE_CHAOZHUANG_CHANG\020\002\022\032\n\026QE_CHAO"
    "ZHUANG_INITNULL\020\003*\300\010\n\014TQingErState\022\024\n\020TQ"
    "ingErStateWait\020\000\022\036\n\032TQingErStateCheckSta"
    "rtGame\020\001\022\031\n\025TQingErStateStartGame\020\002\022\032\n\026T"
    "QingErStateMakeBanKer\020\003\022\036\n\032TQingErStateS"
    "endFirstBrand\020\004\022\034\n\030TQingErStateFanJianZh"
    "ang\020\005\022\025\n\021TQingErStateQiFei\020\006\022\036\n\032TQingErS"
    "tateHandMendFlower\020\007\022\036\n\032TQingErStateTian"
    "DiHuChoice\020\010\022\037\n\033TQingErStateAholdMendFlo"
    "wer\020\t\022\026\n\022TQingErStateAction\020\n\022\030\n\024TQingEr"
    "StateShowdown\020\013\022\027\n\023TQingErStateOutCard\020\014"
    "\022\032\n\026TQingErStateUserChoice\020\r\022\032\n\026TQingErS"
    "tateSelfChoice\020\016\022\037\n\033TQingErStateQiangGan"
    "gChoice\020\017\022\031\n\025TQingErStateTouchCard\020\020\022\027\n\023"
    "TQingErStateBarCard\020\021\022\027\n\023TQingErStateEat"
    "Card\020\022\022\027\n\023TQingErStateRelieve\020\023\022\037\n\033TQing"
    "ErStateTouchCardFinish\020\024\022\035\n\031TQingErState"
    "BarCardFinish\020\025\022\035\n\031TQingErStateEatCardFi"
    "nish\020\026\022\035\n\031TQingErStateRelieveFinish\020\027\022\031\n"
    "\025TQingErStateLeaveGame\020\030\022\031\n\025TQingErState"
    "DianPaoHu\020\031\022\026\n\022TQingErStateZiMoHu\020\032\022\027\n\023T"
    "QingErStateLiuJuHu\020\033\022\033\n\027TQingErStateQian"
    "gGangHu\020\034\022\030\n\024TQingErStateBarDuiHu\020\035\022\032\n\026T"
    "QingErStateHuGangFang\020\036\022$\n TQingErStateS"
    "endFirstBrandFinish\020\037\022\030\n\024TQingErStateBia"
    "nCard\020 \022\036\n\032TQingErStateBianCardFinish\020!\022"
    "\030\n\024TQingErStateGameOver\020\"\022\031\n\025TQingErStat"
    "eQiangPeng\020#\022\034\n\030TQingErStatePreOperation"
    "\020$\022\030\n\024TQingErStateTianTing\020%*\262\002\n\017TQingEr"
    "BarState\022\026\n\022QE_STATE_GANG_NULL\020\000\022\026\n\022QE_S"
    "TATE_ERCI_GANG\020\001\022\026\n\022QE_STATE_MING_GANG\020\002"
    "\022\024\n\020QE_STATE_AN_GANG\020\003\022\027\n\023QE_STATE_QIFEI"
    "_GANG\020\004\022\033\n\027QE_STATE_SUAN_MING_GANG\020\005\022\024\n\020"
    "QE_STATE_DA_WANG\020\006\022\026\n\022QE_STATE_XIAO_WANG"
    "\020\007\022\031\n\025QE_STATE_QING_ER_WANG\020\010\022\025\n\021QE_STAT"
    "E_TAI_YANG\020\t\022\022\n\016QE_STATE_KE_ZI\020\n\022\027\n\023QE_S"
    "TATE_MEIHUA_JQK\020\013*\246\002\n\nTQingErASK\022\017\n\013QE_A"
    "SK_NULL\020\000\022\017\n\013QE_ASK_LEFT\020\001\022\021\n\rQE_ASK_CEN"
    "TER\020\002\022\020\n\014QE_ASK_RIGHT\020\004\022\017\n\013QE_ASK_PENG\020\010"
    "\022\017\n\013QE_ASK_FILL\020\020\022\017\n\013QE_ASK_GANG\020 \022\021\n\rQE"
    "_ASK_LISTEN\020@\022\021\n\014QE_ASK_CHIHU\020\200\001\022\030\n\023QE_A"
    "SK_AUTH_SUCCEED\020\200\002\022\020\n\013QE_ASK_BIAN\020\200\004\022\016\n\t"
    "QE_ASK_HU\020\200\010\022\021\n\014QE_ASK_QIFEI\020\200\020\022\021\n\014QE_AS"
    "K_BUHUA\020\200 \022\026\n\021QE_ASK_MEIHUA_JQK\020\200@*\310\002\n\nT"
    "QingErCHR\022\017\n\013QE_CHR_NULL\020\000\022\022\n\016QE_CHR_PIN"
    "G_HU\020\001\022\027\n\023QE_CHR_GANG_KAI_HUA\020\002\022\022\n\016QE_CH"
    "R_BIAN_HU\020\003\022\022\n\016QE_CHR_QIAN_HU\020\004\022\022\n\016QE_CH"
    "R_DIAO_HU\020\005\022\027\n\023QE_CHR_WEN_QIAN_PAI\020\006\022\023\n\017"
    "QE_CHR_MEN_QING\020\007\022\026\n\022QE_CHR_PIAO_HU_PAI\020"
    "\010\022\027\n\023QE_CHR_SAN_HONG_PAI\020\t\022\024\n\020QE_CHR_QIO"
    "NG_HEN\020\020\022\032\n\026QE_CHR_QIONG_QIONG_HEN\020\021\022\025\n\021"
    "QE_CHR_SHI_SAN_HU\020\022\022\030\n\024QE_CHR_QIANG_GANG"
    "_HU\020\023*\243\010\n\024TQingErShowDownScore\022\027\n\023QE_SCO"
    "RE_DAWANG_ONE\020\001\022\031\n\025QE_SCORE_DAWANG_THREE"
    "\020\002\022\031\n\025QE_SCORE_XIAOWANG_ONE\020\003\022\031\n\025QE_SCOR"
    "E_XIAOWANG_TWO\020\004\022\026\n\022QE_SCORE_WANG_FIVE\020\005"
    "\022\024\n\020QE_SCORE_TAIYANG\020\006\022\031\n\025QE_SCORE_GUANG"
    "GAO_ONE\020\007\022\031\n\025QE_SCORE_GUANGGAO_TWO\020\010\022\033\n\027"
    "QE_SCORE_WANG_FIVE_LAST\020\t\022\030\n\024QE_SCORE_PE"
    "NG_PUTONG\020\024\022\033\n\027QE_SCORE_PENG_JIANZHANG\020\025"
    "\022\030\n\024QE_SCORE_ANKE_PUTONG\020\026\022\033\n\027QE_SCORE_A"
    "NKE_JIANZHANG\020\027\022\027\n\023QE_SCORE_QIFEI_WANG\020\036"
    "\022\"\n\036QE_SCORE_QIFEI_WANG_JIANGZHANG\020\037\022\031\n\025"
    "QE_SCORE_QIFEI_PUTONG\020 \022\034\n\030QE_SCORE_QIFE"
    "I_JIANZHANG\020!\022\026\n\022QE_SCORE_GANG_MING\020(\022!\n"
    "\035QE_SCORE_GANG_MING_JIANGZHANG\020)\022\024\n\020QE_S"
    "CORE_GANG_AN\020*\022\037\n\033QE_SCORE_GANG_AN_JIANG"
    "ZHANG\020+\022\025\n\021QE_SCORE_JQK_SELF\0202\022\026\n\022QE_SCO"
    "RE_JQK_OHTER\0203\022\024\n\020QE_SCORE_JQK_ALL\0204\022\030\n\024"
    "QE_SCORE_ZIMO_QINGER\020<\022\023\n\017QE_SCORE_PINGH"
    "U\020=\022\026\n\022QE_SCORE_DIANPAOHU\020>\022\026\n\022QE_SCORE_"
    "BIANZHANG\020\?\022\026\n\022QE_SCORE_QIANZHANG\020@\022\026\n\022Q"
    "E_SCORE_DIAOZHANG\020A\022\030\n\024QE_SCORE_WENQIAN_"
    "ONE\020B\022\030\n\024QE_SCORE_WENQIAN_TOW\020C\022\032\n\026QE_SC"
    "ORE_WENQIAN_THREE\020D\022\031\n\025QE_SCORE_WENQIAN_"
    "FORE\020E\022\023\n\017QE_SCORE_QINGER\020F\022\023\n\017QE_SCORE_"
    "PIAOHU\020Z\022\027\n\023QE_SCORE_SANHONGPAI\020[\022\025\n\021QE_"
    "SCORE_QIONGHEN\020\\\022\032\n\026QE_SCORE_QIONGQIONGH"
    "EN\020]\022\025\n\021QE_SCORE_SHISANHU\020^", 7747);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_qinger.proto", &protobuf_RegisterTypes);
  MsgQingErMendFlower::default_instance_ = new MsgQingErMendFlower();
  MsgQingErUserAction::default_instance_ = new MsgQingErUserAction();
  MsgQingErUserPower::default_instance_ = new MsgQingErUserPower();
  MsgQingErOutCard::default_instance_ = new MsgQingErOutCard();
  MsgQingErUserOperate::default_instance_ = new MsgQingErUserOperate();
  MsgQingErRoleScore::default_instance_ = new MsgQingErRoleScore();
  MsgQingErCardData::default_instance_ = new MsgQingErCardData();
  MsgQingErPlayer::default_instance_ = new MsgQingErPlayer();
  MsgQingErRoom::default_instance_ = new MsgQingErRoom();
  MsgQingErPrivateRoom::default_instance_ = new MsgQingErPrivateRoom();
  MsgQingErWeaveCard::default_instance_ = new MsgQingErWeaveCard();
  MsgQingErFlowerList::default_instance_ = new MsgQingErFlowerList();
  MsgQingErFlowerData::default_instance_ = new MsgQingErFlowerData();
  MsgQingErShowDown::default_instance_ = new MsgQingErShowDown();
  MsgQingErShowDownEvent::default_instance_ = new MsgQingErShowDownEvent();
  MsgQingErIntegralCount::default_instance_ = new MsgQingErIntegralCount();
  MsgQingErStatisticsEvent::default_instance_ = new MsgQingErStatisticsEvent();
  MsgQingErStatisticsEventList::default_instance_ = new MsgQingErStatisticsEventList();
  MsgQingErShowDownCount::default_instance_ = new MsgQingErShowDownCount();
  MsgQingErRoleCathecticCount::default_instance_ = new MsgQingErRoleCathecticCount();
  MsgQingErChaoZhuangInfo::default_instance_ = new MsgQingErChaoZhuangInfo();
  MsgQingErJianZhangInfo::default_instance_ = new MsgQingErJianZhangInfo();
  MsgQingErMendFlower::default_instance_->InitAsDefaultInstance();
  MsgQingErUserAction::default_instance_->InitAsDefaultInstance();
  MsgQingErUserPower::default_instance_->InitAsDefaultInstance();
  MsgQingErOutCard::default_instance_->InitAsDefaultInstance();
  MsgQingErUserOperate::default_instance_->InitAsDefaultInstance();
  MsgQingErRoleScore::default_instance_->InitAsDefaultInstance();
  MsgQingErCardData::default_instance_->InitAsDefaultInstance();
  MsgQingErPlayer::default_instance_->InitAsDefaultInstance();
  MsgQingErRoom::default_instance_->InitAsDefaultInstance();
  MsgQingErPrivateRoom::default_instance_->InitAsDefaultInstance();
  MsgQingErWeaveCard::default_instance_->InitAsDefaultInstance();
  MsgQingErFlowerList::default_instance_->InitAsDefaultInstance();
  MsgQingErFlowerData::default_instance_->InitAsDefaultInstance();
  MsgQingErShowDown::default_instance_->InitAsDefaultInstance();
  MsgQingErShowDownEvent::default_instance_->InitAsDefaultInstance();
  MsgQingErIntegralCount::default_instance_->InitAsDefaultInstance();
  MsgQingErStatisticsEvent::default_instance_->InitAsDefaultInstance();
  MsgQingErStatisticsEventList::default_instance_->InitAsDefaultInstance();
  MsgQingErShowDownCount::default_instance_->InitAsDefaultInstance();
  MsgQingErRoleCathecticCount::default_instance_->InitAsDefaultInstance();
  MsgQingErChaoZhuangInfo::default_instance_->InitAsDefaultInstance();
  MsgQingErJianZhangInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fqinger_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fqinger_2eproto {
  StaticDescriptorInitializer_msg_5fqinger_2eproto() {
    protobuf_AddDesc_msg_5fqinger_2eproto();
  }
} static_descriptor_initializer_msg_5fqinger_2eproto_;
const ::google::protobuf::EnumDescriptor* TQingErRoleState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErRoleState_descriptor_;
}
bool TQingErRoleState_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TQingErStatisticsEvent_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErStatisticsEvent_descriptor_;
}
bool TQingErStatisticsEvent_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TQingErDirection_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErDirection_descriptor_;
}
bool TQingErDirection_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TQingErJianZhang_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErJianZhang_descriptor_;
}
bool TQingErJianZhang_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TQingErChaoZhangValue_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErChaoZhangValue_descriptor_;
}
bool TQingErChaoZhangValue_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TQingErState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErState_descriptor_;
}
bool TQingErState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TQingErBarState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErBarState_descriptor_;
}
bool TQingErBarState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TQingErASK_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErASK_descriptor_;
}
bool TQingErASK_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TQingErCHR_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErCHR_descriptor_;
}
bool TQingErCHR_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TQingErShowDownScore_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TQingErShowDownScore_descriptor_;
}
bool TQingErShowDownScore_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 20:
    case 21:
    case 22:
    case 23:
    case 30:
    case 31:
    case 32:
    case 33:
    case 40:
    case 41:
    case 42:
    case 43:
    case 50:
    case 51:
    case 52:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErMendFlower::kIdFieldNumber;
const int MsgQingErMendFlower::kHandcardFieldNumber;
const int MsgQingErMendFlower::kFlowerBarCountFieldNumber;
const int MsgQingErMendFlower::kHandNumFieldNumber;
const int MsgQingErMendFlower::kFlowerNumFieldNumber;
const int MsgQingErMendFlower::kSurplusHandNumFieldNumber;
const int MsgQingErMendFlower::kRoleScoreFieldNumber;
const int MsgQingErMendFlower::kFlowerCardListFieldNumber;
#endif  // !_MSC_VER

MsgQingErMendFlower::MsgQingErMendFlower()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErMendFlower)
}

void MsgQingErMendFlower::InitAsDefaultInstance() {
}

MsgQingErMendFlower::MsgQingErMendFlower(const MsgQingErMendFlower& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErMendFlower)
}

void MsgQingErMendFlower::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  flower_bar_count_ = 0u;
  hand_num_ = 0u;
  flower_num_ = 0u;
  surplus_hand_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErMendFlower::~MsgQingErMendFlower() {
  // @@protoc_insertion_point(destructor:MsgQingErMendFlower)
  SharedDtor();
}

void MsgQingErMendFlower::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErMendFlower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErMendFlower::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErMendFlower_descriptor_;
}

const MsgQingErMendFlower& MsgQingErMendFlower::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErMendFlower* MsgQingErMendFlower::default_instance_ = NULL;

MsgQingErMendFlower* MsgQingErMendFlower::New() const {
  return new MsgQingErMendFlower;
}

void MsgQingErMendFlower::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErMendFlower*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 61) {
    ZR_(flower_bar_count_, surplus_hand_num_);
    id_ = GOOGLE_ULONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  handcard_.Clear();
  role_score_.Clear();
  flower_card_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErMendFlower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErMendFlower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_handcard;
        break;
      }

      // repeated uint32 handcard = 2;
      case 2: {
        if (tag == 16) {
         parse_handcard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_handcard())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_handcard())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_handcard;
        if (input->ExpectTag(24)) goto parse_flower_bar_count;
        break;
      }

      // optional uint32 flower_bar_count = 3;
      case 3: {
        if (tag == 24) {
         parse_flower_bar_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flower_bar_count_)));
          set_has_flower_bar_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 4;
      case 4: {
        if (tag == 32) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_flower_num;
        break;
      }

      // optional uint32 flower_num = 5;
      case 5: {
        if (tag == 40) {
         parse_flower_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flower_num_)));
          set_has_flower_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_surplus_hand_num;
        break;
      }

      // optional uint32 surplus_hand_num = 6;
      case 6: {
        if (tag == 48) {
         parse_surplus_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &surplus_hand_num_)));
          set_has_surplus_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_role_score;
        break;
      }

      // repeated .MsgQingErRoleScore role_score = 7;
      case 7: {
        if (tag == 58) {
         parse_role_score:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_score()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_role_score;
        if (input->ExpectTag(64)) goto parse_flower_card_list;
        break;
      }

      // repeated uint32 flower_card_list = 8;
      case 8: {
        if (tag == 64) {
         parse_flower_card_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64, input, this->mutable_flower_card_list())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_flower_card_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_flower_card_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErMendFlower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErMendFlower)
  return false;
#undef DO_
}

void MsgQingErMendFlower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErMendFlower)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // repeated uint32 handcard = 2;
  for (int i = 0; i < this->handcard_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->handcard(i), output);
  }

  // optional uint32 flower_bar_count = 3;
  if (has_flower_bar_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flower_bar_count(), output);
  }

  // optional uint32 hand_num = 4;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hand_num(), output);
  }

  // optional uint32 flower_num = 5;
  if (has_flower_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->flower_num(), output);
  }

  // optional uint32 surplus_hand_num = 6;
  if (has_surplus_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->surplus_hand_num(), output);
  }

  // repeated .MsgQingErRoleScore role_score = 7;
  for (int i = 0; i < this->role_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->role_score(i), output);
  }

  // repeated uint32 flower_card_list = 8;
  for (int i = 0; i < this->flower_card_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->flower_card_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErMendFlower)
}

::google::protobuf::uint8* MsgQingErMendFlower::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErMendFlower)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // repeated uint32 handcard = 2;
  for (int i = 0; i < this->handcard_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->handcard(i), target);
  }

  // optional uint32 flower_bar_count = 3;
  if (has_flower_bar_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flower_bar_count(), target);
  }

  // optional uint32 hand_num = 4;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hand_num(), target);
  }

  // optional uint32 flower_num = 5;
  if (has_flower_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->flower_num(), target);
  }

  // optional uint32 surplus_hand_num = 6;
  if (has_surplus_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->surplus_hand_num(), target);
  }

  // repeated .MsgQingErRoleScore role_score = 7;
  for (int i = 0; i < this->role_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->role_score(i), target);
  }

  // repeated uint32 flower_card_list = 8;
  for (int i = 0; i < this->flower_card_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->flower_card_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErMendFlower)
  return target;
}

int MsgQingErMendFlower::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 flower_bar_count = 3;
    if (has_flower_bar_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flower_bar_count());
    }

    // optional uint32 hand_num = 4;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

    // optional uint32 flower_num = 5;
    if (has_flower_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flower_num());
    }

    // optional uint32 surplus_hand_num = 6;
    if (has_surplus_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->surplus_hand_num());
    }

  }
  // repeated uint32 handcard = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->handcard_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->handcard(i));
    }
    total_size += 1 * this->handcard_size() + data_size;
  }

  // repeated .MsgQingErRoleScore role_score = 7;
  total_size += 1 * this->role_score_size();
  for (int i = 0; i < this->role_score_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_score(i));
  }

  // repeated uint32 flower_card_list = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->flower_card_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->flower_card_list(i));
    }
    total_size += 1 * this->flower_card_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErMendFlower::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErMendFlower* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErMendFlower*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErMendFlower::MergeFrom(const MsgQingErMendFlower& from) {
  GOOGLE_CHECK_NE(&from, this);
  handcard_.MergeFrom(from.handcard_);
  role_score_.MergeFrom(from.role_score_);
  flower_card_list_.MergeFrom(from.flower_card_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_flower_bar_count()) {
      set_flower_bar_count(from.flower_bar_count());
    }
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
    if (from.has_flower_num()) {
      set_flower_num(from.flower_num());
    }
    if (from.has_surplus_hand_num()) {
      set_surplus_hand_num(from.surplus_hand_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErMendFlower::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErMendFlower::CopyFrom(const MsgQingErMendFlower& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErMendFlower::IsInitialized() const {

  return true;
}

void MsgQingErMendFlower::Swap(MsgQingErMendFlower* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    handcard_.Swap(&other->handcard_);
    std::swap(flower_bar_count_, other->flower_bar_count_);
    std::swap(hand_num_, other->hand_num_);
    std::swap(flower_num_, other->flower_num_);
    std::swap(surplus_hand_num_, other->surplus_hand_num_);
    role_score_.Swap(&other->role_score_);
    flower_card_list_.Swap(&other->flower_card_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErMendFlower::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErMendFlower_descriptor_;
  metadata.reflection = MsgQingErMendFlower_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErUserAction::kIdFieldNumber;
const int MsgQingErUserAction::kRoomStateFieldNumber;
const int MsgQingErUserAction::kCardFieldNumber;
const int MsgQingErUserAction::kFlowerNumFieldNumber;
const int MsgQingErUserAction::kWikFieldNumber;
const int MsgQingErUserAction::kGangCardFieldNumber;
const int MsgQingErUserAction::kFlowerBarCountFieldNumber;
const int MsgQingErUserAction::kSurplusHandNumFieldNumber;
const int MsgQingErUserAction::kSubMoneyIdFieldNumber;
const int MsgQingErUserAction::kRoleScoreFieldNumber;
const int MsgQingErUserAction::kLaunchCardFieldNumber;
const int MsgQingErUserAction::kLiangxiWikFieldNumber;
const int MsgQingErUserAction::kBuxiCardFieldNumber;
const int MsgQingErUserAction::kFlowerCardListFieldNumber;
const int MsgQingErUserAction::kEatCardFieldNumber;
#endif  // !_MSC_VER

MsgQingErUserAction::MsgQingErUserAction()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErUserAction)
}

void MsgQingErUserAction::InitAsDefaultInstance() {
}

MsgQingErUserAction::MsgQingErUserAction(const MsgQingErUserAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErUserAction)
}

void MsgQingErUserAction::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  room_state_ = 0;
  card_ = 0u;
  flower_num_ = 0u;
  wik_ = 0u;
  flower_bar_count_ = 0u;
  surplus_hand_num_ = 0u;
  sub_money_id_ = GOOGLE_ULONGLONG(0);
  liangxi_wik_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErUserAction::~MsgQingErUserAction() {
  // @@protoc_insertion_point(destructor:MsgQingErUserAction)
  SharedDtor();
}

void MsgQingErUserAction::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErUserAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErUserAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErUserAction_descriptor_;
}

const MsgQingErUserAction& MsgQingErUserAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErUserAction* MsgQingErUserAction::default_instance_ = NULL;

MsgQingErUserAction* MsgQingErUserAction::New() const {
  return new MsgQingErUserAction;
}

void MsgQingErUserAction::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErUserAction*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 223) {
    ZR_(id_, wik_);
    ZR_(flower_bar_count_, surplus_hand_num_);
  }
  if (_has_bits_[8 / 32] & 2304) {
    sub_money_id_ = GOOGLE_ULONGLONG(0);
    liangxi_wik_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  gang_card_.Clear();
  role_score_.Clear();
  launch_card_.Clear();
  buxi_card_.Clear();
  flower_card_list_.Clear();
  eat_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErUserAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErUserAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_state;
        break;
      }

      // optional .TQingErState room_state = 2;
      case 2: {
        if (tag == 16) {
         parse_room_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TQingErState_IsValid(value)) {
            set_room_state(static_cast< ::TQingErState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_card;
        break;
      }

      // optional uint32 card = 3;
      case 3: {
        if (tag == 24) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_)));
          set_has_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_flower_num;
        break;
      }

      // optional uint32 flower_num = 4;
      case 4: {
        if (tag == 32) {
         parse_flower_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flower_num_)));
          set_has_flower_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 5;
      case 5: {
        if (tag == 40) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_gang_card;
        break;
      }

      // repeated uint32 gang_card = 6;
      case 6: {
        if (tag == 48) {
         parse_gang_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_gang_card())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gang_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_gang_card;
        if (input->ExpectTag(56)) goto parse_flower_bar_count;
        break;
      }

      // optional uint32 flower_bar_count = 7;
      case 7: {
        if (tag == 56) {
         parse_flower_bar_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flower_bar_count_)));
          set_has_flower_bar_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_surplus_hand_num;
        break;
      }

      // optional uint32 surplus_hand_num = 8;
      case 8: {
        if (tag == 64) {
         parse_surplus_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &surplus_hand_num_)));
          set_has_surplus_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_sub_money_id;
        break;
      }

      // optional uint64 sub_money_id = 9;
      case 9: {
        if (tag == 72) {
         parse_sub_money_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sub_money_id_)));
          set_has_sub_money_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_role_score;
        break;
      }

      // repeated .MsgQingErRoleScore role_score = 10;
      case 10: {
        if (tag == 82) {
         parse_role_score:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_score()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_role_score;
        if (input->ExpectTag(96)) goto parse_launch_card;
        break;
      }

      // repeated uint32 launch_card = 12;
      case 12: {
        if (tag == 96) {
         parse_launch_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 96, input, this->mutable_launch_card())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_launch_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_launch_card;
        if (input->ExpectTag(104)) goto parse_liangxi_wik;
        break;
      }

      // optional uint32 liangxi_wik = 13;
      case 13: {
        if (tag == 104) {
         parse_liangxi_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &liangxi_wik_)));
          set_has_liangxi_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_buxi_card;
        break;
      }

      // repeated uint32 buxi_card = 14;
      case 14: {
        if (tag == 112) {
         parse_buxi_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 112, input, this->mutable_buxi_card())));
        } else if (tag == 114) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buxi_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_buxi_card;
        if (input->ExpectTag(120)) goto parse_flower_card_list;
        break;
      }

      // repeated uint32 flower_card_list = 15;
      case 15: {
        if (tag == 120) {
         parse_flower_card_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 120, input, this->mutable_flower_card_list())));
        } else if (tag == 122) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_flower_card_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_flower_card_list;
        if (input->ExpectTag(128)) goto parse_eat_card;
        break;
      }

      // repeated uint32 eat_card = 16;
      case 16: {
        if (tag == 128) {
         parse_eat_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 128, input, this->mutable_eat_card())));
        } else if (tag == 130) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_eat_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_eat_card;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErUserAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErUserAction)
  return false;
#undef DO_
}

void MsgQingErUserAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErUserAction)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional .TQingErState room_state = 2;
  if (has_room_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->room_state(), output);
  }

  // optional uint32 card = 3;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->card(), output);
  }

  // optional uint32 flower_num = 4;
  if (has_flower_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->flower_num(), output);
  }

  // optional uint32 wik = 5;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->wik(), output);
  }

  // repeated uint32 gang_card = 6;
  for (int i = 0; i < this->gang_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->gang_card(i), output);
  }

  // optional uint32 flower_bar_count = 7;
  if (has_flower_bar_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->flower_bar_count(), output);
  }

  // optional uint32 surplus_hand_num = 8;
  if (has_surplus_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->surplus_hand_num(), output);
  }

  // optional uint64 sub_money_id = 9;
  if (has_sub_money_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->sub_money_id(), output);
  }

  // repeated .MsgQingErRoleScore role_score = 10;
  for (int i = 0; i < this->role_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->role_score(i), output);
  }

  // repeated uint32 launch_card = 12;
  for (int i = 0; i < this->launch_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      12, this->launch_card(i), output);
  }

  // optional uint32 liangxi_wik = 13;
  if (has_liangxi_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->liangxi_wik(), output);
  }

  // repeated uint32 buxi_card = 14;
  for (int i = 0; i < this->buxi_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      14, this->buxi_card(i), output);
  }

  // repeated uint32 flower_card_list = 15;
  for (int i = 0; i < this->flower_card_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      15, this->flower_card_list(i), output);
  }

  // repeated uint32 eat_card = 16;
  for (int i = 0; i < this->eat_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      16, this->eat_card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErUserAction)
}

::google::protobuf::uint8* MsgQingErUserAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErUserAction)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional .TQingErState room_state = 2;
  if (has_room_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->room_state(), target);
  }

  // optional uint32 card = 3;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->card(), target);
  }

  // optional uint32 flower_num = 4;
  if (has_flower_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->flower_num(), target);
  }

  // optional uint32 wik = 5;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->wik(), target);
  }

  // repeated uint32 gang_card = 6;
  for (int i = 0; i < this->gang_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->gang_card(i), target);
  }

  // optional uint32 flower_bar_count = 7;
  if (has_flower_bar_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->flower_bar_count(), target);
  }

  // optional uint32 surplus_hand_num = 8;
  if (has_surplus_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->surplus_hand_num(), target);
  }

  // optional uint64 sub_money_id = 9;
  if (has_sub_money_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->sub_money_id(), target);
  }

  // repeated .MsgQingErRoleScore role_score = 10;
  for (int i = 0; i < this->role_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->role_score(i), target);
  }

  // repeated uint32 launch_card = 12;
  for (int i = 0; i < this->launch_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(12, this->launch_card(i), target);
  }

  // optional uint32 liangxi_wik = 13;
  if (has_liangxi_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->liangxi_wik(), target);
  }

  // repeated uint32 buxi_card = 14;
  for (int i = 0; i < this->buxi_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(14, this->buxi_card(i), target);
  }

  // repeated uint32 flower_card_list = 15;
  for (int i = 0; i < this->flower_card_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(15, this->flower_card_list(i), target);
  }

  // repeated uint32 eat_card = 16;
  for (int i = 0; i < this->eat_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(16, this->eat_card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErUserAction)
  return target;
}

int MsgQingErUserAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional .TQingErState room_state = 2;
    if (has_room_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_state());
    }

    // optional uint32 card = 3;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->card());
    }

    // optional uint32 flower_num = 4;
    if (has_flower_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flower_num());
    }

    // optional uint32 wik = 5;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional uint32 flower_bar_count = 7;
    if (has_flower_bar_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flower_bar_count());
    }

    // optional uint32 surplus_hand_num = 8;
    if (has_surplus_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->surplus_hand_num());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint64 sub_money_id = 9;
    if (has_sub_money_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sub_money_id());
    }

    // optional uint32 liangxi_wik = 13;
    if (has_liangxi_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->liangxi_wik());
    }

  }
  // repeated uint32 gang_card = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->gang_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gang_card(i));
    }
    total_size += 1 * this->gang_card_size() + data_size;
  }

  // repeated .MsgQingErRoleScore role_score = 10;
  total_size += 1 * this->role_score_size();
  for (int i = 0; i < this->role_score_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_score(i));
  }

  // repeated uint32 launch_card = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->launch_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->launch_card(i));
    }
    total_size += 1 * this->launch_card_size() + data_size;
  }

  // repeated uint32 buxi_card = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->buxi_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->buxi_card(i));
    }
    total_size += 1 * this->buxi_card_size() + data_size;
  }

  // repeated uint32 flower_card_list = 15;
  {
    int data_size = 0;
    for (int i = 0; i < this->flower_card_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->flower_card_list(i));
    }
    total_size += 1 * this->flower_card_list_size() + data_size;
  }

  // repeated uint32 eat_card = 16;
  {
    int data_size = 0;
    for (int i = 0; i < this->eat_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->eat_card(i));
    }
    total_size += 2 * this->eat_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErUserAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErUserAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErUserAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErUserAction::MergeFrom(const MsgQingErUserAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  gang_card_.MergeFrom(from.gang_card_);
  role_score_.MergeFrom(from.role_score_);
  launch_card_.MergeFrom(from.launch_card_);
  buxi_card_.MergeFrom(from.buxi_card_);
  flower_card_list_.MergeFrom(from.flower_card_list_);
  eat_card_.MergeFrom(from.eat_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_room_state()) {
      set_room_state(from.room_state());
    }
    if (from.has_card()) {
      set_card(from.card());
    }
    if (from.has_flower_num()) {
      set_flower_num(from.flower_num());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_flower_bar_count()) {
      set_flower_bar_count(from.flower_bar_count());
    }
    if (from.has_surplus_hand_num()) {
      set_surplus_hand_num(from.surplus_hand_num());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sub_money_id()) {
      set_sub_money_id(from.sub_money_id());
    }
    if (from.has_liangxi_wik()) {
      set_liangxi_wik(from.liangxi_wik());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErUserAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErUserAction::CopyFrom(const MsgQingErUserAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErUserAction::IsInitialized() const {

  return true;
}

void MsgQingErUserAction::Swap(MsgQingErUserAction* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(room_state_, other->room_state_);
    std::swap(card_, other->card_);
    std::swap(flower_num_, other->flower_num_);
    std::swap(wik_, other->wik_);
    gang_card_.Swap(&other->gang_card_);
    std::swap(flower_bar_count_, other->flower_bar_count_);
    std::swap(surplus_hand_num_, other->surplus_hand_num_);
    std::swap(sub_money_id_, other->sub_money_id_);
    role_score_.Swap(&other->role_score_);
    launch_card_.Swap(&other->launch_card_);
    std::swap(liangxi_wik_, other->liangxi_wik_);
    buxi_card_.Swap(&other->buxi_card_);
    flower_card_list_.Swap(&other->flower_card_list_);
    eat_card_.Swap(&other->eat_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErUserAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErUserAction_descriptor_;
  metadata.reflection = MsgQingErUserAction_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErUserPower::kIdFieldNumber;
const int MsgQingErUserPower::kWikFieldNumber;
const int MsgQingErUserPower::kHandleCardFieldNumber;
const int MsgQingErUserPower::kNewCardFieldNumber;
#endif  // !_MSC_VER

MsgQingErUserPower::MsgQingErUserPower()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErUserPower)
}

void MsgQingErUserPower::InitAsDefaultInstance() {
}

MsgQingErUserPower::MsgQingErUserPower(const MsgQingErUserPower& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErUserPower)
}

void MsgQingErUserPower::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  wik_ = 0u;
  handle_card_ = 0u;
  new_card_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErUserPower::~MsgQingErUserPower() {
  // @@protoc_insertion_point(destructor:MsgQingErUserPower)
  SharedDtor();
}

void MsgQingErUserPower::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErUserPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErUserPower::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErUserPower_descriptor_;
}

const MsgQingErUserPower& MsgQingErUserPower::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErUserPower* MsgQingErUserPower::default_instance_ = NULL;

MsgQingErUserPower* MsgQingErUserPower::New() const {
  return new MsgQingErUserPower;
}

void MsgQingErUserPower::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErUserPower*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, new_card_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErUserPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErUserPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 2;
      case 2: {
        if (tag == 16) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_handle_card;
        break;
      }

      // optional uint32 handle_card = 3;
      case 3: {
        if (tag == 24) {
         parse_handle_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &handle_card_)));
          set_has_handle_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_new_card;
        break;
      }

      // optional uint32 new_card = 4;
      case 4: {
        if (tag == 32) {
         parse_new_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_card_)));
          set_has_new_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErUserPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErUserPower)
  return false;
#undef DO_
}

void MsgQingErUserPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErUserPower)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint32 wik = 2;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wik(), output);
  }

  // optional uint32 handle_card = 3;
  if (has_handle_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->handle_card(), output);
  }

  // optional uint32 new_card = 4;
  if (has_new_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->new_card(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErUserPower)
}

::google::protobuf::uint8* MsgQingErUserPower::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErUserPower)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint32 wik = 2;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wik(), target);
  }

  // optional uint32 handle_card = 3;
  if (has_handle_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->handle_card(), target);
  }

  // optional uint32 new_card = 4;
  if (has_new_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->new_card(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErUserPower)
  return target;
}

int MsgQingErUserPower::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 wik = 2;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional uint32 handle_card = 3;
    if (has_handle_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->handle_card());
    }

    // optional uint32 new_card = 4;
    if (has_new_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_card());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErUserPower::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErUserPower* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErUserPower*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErUserPower::MergeFrom(const MsgQingErUserPower& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_handle_card()) {
      set_handle_card(from.handle_card());
    }
    if (from.has_new_card()) {
      set_new_card(from.new_card());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErUserPower::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErUserPower::CopyFrom(const MsgQingErUserPower& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErUserPower::IsInitialized() const {

  return true;
}

void MsgQingErUserPower::Swap(MsgQingErUserPower* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(wik_, other->wik_);
    std::swap(handle_card_, other->handle_card_);
    std::swap(new_card_, other->new_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErUserPower::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErUserPower_descriptor_;
  metadata.reflection = MsgQingErUserPower_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErOutCard::kIdFieldNumber;
const int MsgQingErOutCard::kCardFieldNumber;
const int MsgQingErOutCard::kIndexFieldNumber;
const int MsgQingErOutCard::kHandNumFieldNumber;
const int MsgQingErOutCard::kHandCardFieldNumber;
const int MsgQingErOutCard::kRiverNumFieldNumber;
const int MsgQingErOutCard::kRoleScoreFieldNumber;
const int MsgQingErOutCard::kRoleStateFieldNumber;
#endif  // !_MSC_VER

MsgQingErOutCard::MsgQingErOutCard()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErOutCard)
}

void MsgQingErOutCard::InitAsDefaultInstance() {
}

MsgQingErOutCard::MsgQingErOutCard(const MsgQingErOutCard& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErOutCard)
}

void MsgQingErOutCard::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  card_ = 0u;
  index_ = 0;
  hand_num_ = 0u;
  river_num_ = 0u;
  role_state_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErOutCard::~MsgQingErOutCard() {
  // @@protoc_insertion_point(destructor:MsgQingErOutCard)
  SharedDtor();
}

void MsgQingErOutCard::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErOutCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErOutCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErOutCard_descriptor_;
}

const MsgQingErOutCard& MsgQingErOutCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErOutCard* MsgQingErOutCard::default_instance_ = NULL;

MsgQingErOutCard* MsgQingErOutCard::New() const {
  return new MsgQingErOutCard;
}

void MsgQingErOutCard::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErOutCard*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 175) {
    ZR_(id_, index_);
    ZR_(hand_num_, river_num_);
    role_state_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  hand_card_.Clear();
  role_score_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErOutCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErOutCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_card;
        break;
      }

      // optional uint32 card = 2;
      case 2: {
        if (tag == 16) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_)));
          set_has_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }

      // optional int32 index = 3;
      case 3: {
        if (tag == 24) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 4;
      case 4: {
        if (tag == 32) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hand_card;
        break;
      }

      // repeated uint32 hand_card = 6;
      case 6: {
        if (tag == 48) {
         parse_hand_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_hand_card())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hand_card;
        if (input->ExpectTag(56)) goto parse_river_num;
        break;
      }

      // optional uint32 river_num = 7;
      case 7: {
        if (tag == 56) {
         parse_river_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &river_num_)));
          set_has_river_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_role_score;
        break;
      }

      // repeated .MsgQingErRoleScore role_score = 8;
      case 8: {
        if (tag == 66) {
         parse_role_score:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_score()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_role_score;
        if (input->ExpectTag(72)) goto parse_role_state;
        break;
      }

      // optional uint32 role_state = 9;
      case 9: {
        if (tag == 72) {
         parse_role_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &role_state_)));
          set_has_role_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErOutCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErOutCard)
  return false;
#undef DO_
}

void MsgQingErOutCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErOutCard)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->card(), output);
  }

  // optional int32 index = 3;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }

  // optional uint32 hand_num = 4;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hand_num(), output);
  }

  // repeated uint32 hand_card = 6;
  for (int i = 0; i < this->hand_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->hand_card(i), output);
  }

  // optional uint32 river_num = 7;
  if (has_river_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->river_num(), output);
  }

  // repeated .MsgQingErRoleScore role_score = 8;
  for (int i = 0; i < this->role_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->role_score(i), output);
  }

  // optional uint32 role_state = 9;
  if (has_role_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->role_state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErOutCard)
}

::google::protobuf::uint8* MsgQingErOutCard::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErOutCard)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->card(), target);
  }

  // optional int32 index = 3;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }

  // optional uint32 hand_num = 4;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hand_num(), target);
  }

  // repeated uint32 hand_card = 6;
  for (int i = 0; i < this->hand_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->hand_card(i), target);
  }

  // optional uint32 river_num = 7;
  if (has_river_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->river_num(), target);
  }

  // repeated .MsgQingErRoleScore role_score = 8;
  for (int i = 0; i < this->role_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->role_score(i), target);
  }

  // optional uint32 role_state = 9;
  if (has_role_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->role_state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErOutCard)
  return target;
}

int MsgQingErOutCard::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 card = 2;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->card());
    }

    // optional int32 index = 3;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional uint32 hand_num = 4;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

    // optional uint32 river_num = 7;
    if (has_river_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->river_num());
    }

    // optional uint32 role_state = 9;
    if (has_role_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->role_state());
    }

  }
  // repeated uint32 hand_card = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_card(i));
    }
    total_size += 1 * this->hand_card_size() + data_size;
  }

  // repeated .MsgQingErRoleScore role_score = 8;
  total_size += 1 * this->role_score_size();
  for (int i = 0; i < this->role_score_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_score(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErOutCard::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErOutCard* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErOutCard*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErOutCard::MergeFrom(const MsgQingErOutCard& from) {
  GOOGLE_CHECK_NE(&from, this);
  hand_card_.MergeFrom(from.hand_card_);
  role_score_.MergeFrom(from.role_score_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_card()) {
      set_card(from.card());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
    if (from.has_river_num()) {
      set_river_num(from.river_num());
    }
    if (from.has_role_state()) {
      set_role_state(from.role_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErOutCard::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErOutCard::CopyFrom(const MsgQingErOutCard& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErOutCard::IsInitialized() const {

  return true;
}

void MsgQingErOutCard::Swap(MsgQingErOutCard* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(card_, other->card_);
    std::swap(index_, other->index_);
    std::swap(hand_num_, other->hand_num_);
    hand_card_.Swap(&other->hand_card_);
    std::swap(river_num_, other->river_num_);
    role_score_.Swap(&other->role_score_);
    std::swap(role_state_, other->role_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErOutCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErOutCard_descriptor_;
  metadata.reflection = MsgQingErOutCard_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErUserOperate::kWikFieldNumber;
const int MsgQingErUserOperate::kCardFieldNumber;
const int MsgQingErUserOperate::kGangCardFieldNumber;
const int MsgQingErUserOperate::kAholdCardFieldNumber;
const int MsgQingErUserOperate::kLiangxiWikFieldNumber;
const int MsgQingErUserOperate::kBuxiCardFieldNumber;
#endif  // !_MSC_VER

MsgQingErUserOperate::MsgQingErUserOperate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErUserOperate)
}

void MsgQingErUserOperate::InitAsDefaultInstance() {
}

MsgQingErUserOperate::MsgQingErUserOperate(const MsgQingErUserOperate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErUserOperate)
}

void MsgQingErUserOperate::SharedCtor() {
  _cached_size_ = 0;
  wik_ = 0u;
  card_ = 0u;
  liangxi_wik_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErUserOperate::~MsgQingErUserOperate() {
  // @@protoc_insertion_point(destructor:MsgQingErUserOperate)
  SharedDtor();
}

void MsgQingErUserOperate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErUserOperate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErUserOperate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErUserOperate_descriptor_;
}

const MsgQingErUserOperate& MsgQingErUserOperate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErUserOperate* MsgQingErUserOperate::default_instance_ = NULL;

MsgQingErUserOperate* MsgQingErUserOperate::New() const {
  return new MsgQingErUserOperate;
}

void MsgQingErUserOperate::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErUserOperate*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 19) {
    ZR_(wik_, card_);
    liangxi_wik_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  gang_card_.Clear();
  ahold_card_.Clear();
  buxi_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErUserOperate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErUserOperate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 wik = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_card;
        break;
      }

      // optional uint32 card = 2;
      case 2: {
        if (tag == 16) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_)));
          set_has_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gang_card;
        break;
      }

      // repeated uint32 gang_card = 3;
      case 3: {
        if (tag == 24) {
         parse_gang_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_gang_card())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gang_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gang_card;
        if (input->ExpectTag(32)) goto parse_ahold_card;
        break;
      }

      // repeated uint32 ahold_card = 4;
      case 4: {
        if (tag == 32) {
         parse_ahold_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_ahold_card())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ahold_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ahold_card;
        if (input->ExpectTag(40)) goto parse_liangxi_wik;
        break;
      }

      // optional uint32 liangxi_wik = 5;
      case 5: {
        if (tag == 40) {
         parse_liangxi_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &liangxi_wik_)));
          set_has_liangxi_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_buxi_card;
        break;
      }

      // repeated uint32 buxi_card = 6;
      case 6: {
        if (tag == 48) {
         parse_buxi_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_buxi_card())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buxi_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_buxi_card;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErUserOperate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErUserOperate)
  return false;
#undef DO_
}

void MsgQingErUserOperate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErUserOperate)
  // optional uint32 wik = 1;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->wik(), output);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->card(), output);
  }

  // repeated uint32 gang_card = 3;
  for (int i = 0; i < this->gang_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->gang_card(i), output);
  }

  // repeated uint32 ahold_card = 4;
  for (int i = 0; i < this->ahold_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->ahold_card(i), output);
  }

  // optional uint32 liangxi_wik = 5;
  if (has_liangxi_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->liangxi_wik(), output);
  }

  // repeated uint32 buxi_card = 6;
  for (int i = 0; i < this->buxi_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->buxi_card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErUserOperate)
}

::google::protobuf::uint8* MsgQingErUserOperate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErUserOperate)
  // optional uint32 wik = 1;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->wik(), target);
  }

  // optional uint32 card = 2;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->card(), target);
  }

  // repeated uint32 gang_card = 3;
  for (int i = 0; i < this->gang_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->gang_card(i), target);
  }

  // repeated uint32 ahold_card = 4;
  for (int i = 0; i < this->ahold_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->ahold_card(i), target);
  }

  // optional uint32 liangxi_wik = 5;
  if (has_liangxi_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->liangxi_wik(), target);
  }

  // repeated uint32 buxi_card = 6;
  for (int i = 0; i < this->buxi_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->buxi_card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErUserOperate)
  return target;
}

int MsgQingErUserOperate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 wik = 1;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional uint32 card = 2;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->card());
    }

    // optional uint32 liangxi_wik = 5;
    if (has_liangxi_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->liangxi_wik());
    }

  }
  // repeated uint32 gang_card = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->gang_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gang_card(i));
    }
    total_size += 1 * this->gang_card_size() + data_size;
  }

  // repeated uint32 ahold_card = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->ahold_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ahold_card(i));
    }
    total_size += 1 * this->ahold_card_size() + data_size;
  }

  // repeated uint32 buxi_card = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->buxi_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->buxi_card(i));
    }
    total_size += 1 * this->buxi_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErUserOperate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErUserOperate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErUserOperate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErUserOperate::MergeFrom(const MsgQingErUserOperate& from) {
  GOOGLE_CHECK_NE(&from, this);
  gang_card_.MergeFrom(from.gang_card_);
  ahold_card_.MergeFrom(from.ahold_card_);
  buxi_card_.MergeFrom(from.buxi_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_card()) {
      set_card(from.card());
    }
    if (from.has_liangxi_wik()) {
      set_liangxi_wik(from.liangxi_wik());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErUserOperate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErUserOperate::CopyFrom(const MsgQingErUserOperate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErUserOperate::IsInitialized() const {

  return true;
}

void MsgQingErUserOperate::Swap(MsgQingErUserOperate* other) {
  if (other != this) {
    std::swap(wik_, other->wik_);
    std::swap(card_, other->card_);
    gang_card_.Swap(&other->gang_card_);
    ahold_card_.Swap(&other->ahold_card_);
    std::swap(liangxi_wik_, other->liangxi_wik_);
    buxi_card_.Swap(&other->buxi_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErUserOperate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErUserOperate_descriptor_;
  metadata.reflection = MsgQingErUserOperate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErRoleScore::kIdFieldNumber;
const int MsgQingErRoleScore::kScoreFieldNumber;
#endif  // !_MSC_VER

MsgQingErRoleScore::MsgQingErRoleScore()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErRoleScore)
}

void MsgQingErRoleScore::InitAsDefaultInstance() {
}

MsgQingErRoleScore::MsgQingErRoleScore(const MsgQingErRoleScore& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErRoleScore)
}

void MsgQingErRoleScore::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  score_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErRoleScore::~MsgQingErRoleScore() {
  // @@protoc_insertion_point(destructor:MsgQingErRoleScore)
  SharedDtor();
}

void MsgQingErRoleScore::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErRoleScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErRoleScore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErRoleScore_descriptor_;
}

const MsgQingErRoleScore& MsgQingErRoleScore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErRoleScore* MsgQingErRoleScore::default_instance_ = NULL;

MsgQingErRoleScore* MsgQingErRoleScore::New() const {
  return new MsgQingErRoleScore;
}

void MsgQingErRoleScore::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErRoleScore*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, score_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErRoleScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErRoleScore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_score;
        break;
      }

      // optional int64 score = 2;
      case 2: {
        if (tag == 16) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErRoleScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErRoleScore)
  return false;
#undef DO_
}

void MsgQingErRoleScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErRoleScore)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional int64 score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErRoleScore)
}

::google::protobuf::uint8* MsgQingErRoleScore::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErRoleScore)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional int64 score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErRoleScore)
  return target;
}

int MsgQingErRoleScore::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional int64 score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErRoleScore::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErRoleScore* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErRoleScore*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErRoleScore::MergeFrom(const MsgQingErRoleScore& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErRoleScore::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErRoleScore::CopyFrom(const MsgQingErRoleScore& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErRoleScore::IsInitialized() const {

  return true;
}

void MsgQingErRoleScore::Swap(MsgQingErRoleScore* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(score_, other->score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErRoleScore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErRoleScore_descriptor_;
  metadata.reflection = MsgQingErRoleScore_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErCardData::kCardFieldNumber;
const int MsgQingErCardData::kWikFieldNumber;
const int MsgQingErCardData::kTaridFieldNumber;
const int MsgQingErCardData::kSrcidFieldNumber;
const int MsgQingErCardData::kBarkindFieldNumber;
const int MsgQingErCardData::kShowMoneyFieldNumber;
const int MsgQingErCardData::kSubMoneyIdFieldNumber;
const int MsgQingErCardData::kMixCardFieldNumber;
#endif  // !_MSC_VER

MsgQingErCardData::MsgQingErCardData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErCardData)
}

void MsgQingErCardData::InitAsDefaultInstance() {
}

MsgQingErCardData::MsgQingErCardData(const MsgQingErCardData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErCardData)
}

void MsgQingErCardData::SharedCtor() {
  _cached_size_ = 0;
  card_ = 0u;
  wik_ = 0u;
  tarid_ = GOOGLE_ULONGLONG(0);
  srcid_ = GOOGLE_ULONGLONG(0);
  barkind_ = 0u;
  show_money_ = false;
  sub_money_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErCardData::~MsgQingErCardData() {
  // @@protoc_insertion_point(destructor:MsgQingErCardData)
  SharedDtor();
}

void MsgQingErCardData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErCardData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErCardData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErCardData_descriptor_;
}

const MsgQingErCardData& MsgQingErCardData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErCardData* MsgQingErCardData::default_instance_ = NULL;

MsgQingErCardData* MsgQingErCardData::New() const {
  return new MsgQingErCardData;
}

void MsgQingErCardData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErCardData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(card_, sub_money_id_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  mix_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErCardData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErCardData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 card = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_)));
          set_has_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 2;
      case 2: {
        if (tag == 16) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tarid;
        break;
      }

      // optional uint64 tarid = 3;
      case 3: {
        if (tag == 24) {
         parse_tarid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tarid_)));
          set_has_tarid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_srcid;
        break;
      }

      // optional uint64 srcid = 4;
      case 4: {
        if (tag == 32) {
         parse_srcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &srcid_)));
          set_has_srcid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_barkind;
        break;
      }

      // optional uint32 barkind = 5;
      case 5: {
        if (tag == 40) {
         parse_barkind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &barkind_)));
          set_has_barkind();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_show_money;
        break;
      }

      // optional bool show_money = 6;
      case 6: {
        if (tag == 48) {
         parse_show_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_money_)));
          set_has_show_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_sub_money_id;
        break;
      }

      // optional uint64 sub_money_id = 7;
      case 7: {
        if (tag == 56) {
         parse_sub_money_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sub_money_id_)));
          set_has_sub_money_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_mix_card;
        break;
      }

      // repeated uint32 mix_card = 9;
      case 9: {
        if (tag == 72) {
         parse_mix_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_mix_card())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mix_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_mix_card;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErCardData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErCardData)
  return false;
#undef DO_
}

void MsgQingErCardData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErCardData)
  // optional uint32 card = 1;
  if (has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->card(), output);
  }

  // optional uint32 wik = 2;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wik(), output);
  }

  // optional uint64 tarid = 3;
  if (has_tarid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->tarid(), output);
  }

  // optional uint64 srcid = 4;
  if (has_srcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->srcid(), output);
  }

  // optional uint32 barkind = 5;
  if (has_barkind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->barkind(), output);
  }

  // optional bool show_money = 6;
  if (has_show_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->show_money(), output);
  }

  // optional uint64 sub_money_id = 7;
  if (has_sub_money_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->sub_money_id(), output);
  }

  // repeated uint32 mix_card = 9;
  for (int i = 0; i < this->mix_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->mix_card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErCardData)
}

::google::protobuf::uint8* MsgQingErCardData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErCardData)
  // optional uint32 card = 1;
  if (has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->card(), target);
  }

  // optional uint32 wik = 2;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wik(), target);
  }

  // optional uint64 tarid = 3;
  if (has_tarid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->tarid(), target);
  }

  // optional uint64 srcid = 4;
  if (has_srcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->srcid(), target);
  }

  // optional uint32 barkind = 5;
  if (has_barkind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->barkind(), target);
  }

  // optional bool show_money = 6;
  if (has_show_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->show_money(), target);
  }

  // optional uint64 sub_money_id = 7;
  if (has_sub_money_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->sub_money_id(), target);
  }

  // repeated uint32 mix_card = 9;
  for (int i = 0; i < this->mix_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->mix_card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErCardData)
  return target;
}

int MsgQingErCardData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 card = 1;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->card());
    }

    // optional uint32 wik = 2;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional uint64 tarid = 3;
    if (has_tarid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tarid());
    }

    // optional uint64 srcid = 4;
    if (has_srcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->srcid());
    }

    // optional uint32 barkind = 5;
    if (has_barkind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->barkind());
    }

    // optional bool show_money = 6;
    if (has_show_money()) {
      total_size += 1 + 1;
    }

    // optional uint64 sub_money_id = 7;
    if (has_sub_money_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sub_money_id());
    }

  }
  // repeated uint32 mix_card = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->mix_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->mix_card(i));
    }
    total_size += 1 * this->mix_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErCardData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErCardData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErCardData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErCardData::MergeFrom(const MsgQingErCardData& from) {
  GOOGLE_CHECK_NE(&from, this);
  mix_card_.MergeFrom(from.mix_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_card()) {
      set_card(from.card());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_tarid()) {
      set_tarid(from.tarid());
    }
    if (from.has_srcid()) {
      set_srcid(from.srcid());
    }
    if (from.has_barkind()) {
      set_barkind(from.barkind());
    }
    if (from.has_show_money()) {
      set_show_money(from.show_money());
    }
    if (from.has_sub_money_id()) {
      set_sub_money_id(from.sub_money_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErCardData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErCardData::CopyFrom(const MsgQingErCardData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErCardData::IsInitialized() const {

  return true;
}

void MsgQingErCardData::Swap(MsgQingErCardData* other) {
  if (other != this) {
    std::swap(card_, other->card_);
    std::swap(wik_, other->wik_);
    std::swap(tarid_, other->tarid_);
    std::swap(srcid_, other->srcid_);
    std::swap(barkind_, other->barkind_);
    std::swap(show_money_, other->show_money_);
    std::swap(sub_money_id_, other->sub_money_id_);
    mix_card_.Swap(&other->mix_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErCardData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErCardData_descriptor_;
  metadata.reflection = MsgQingErCardData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErPlayer::kPlayerInfoFieldNumber;
const int MsgQingErPlayer::kStateFieldNumber;
const int MsgQingErPlayer::kHandNumFieldNumber;
const int MsgQingErPlayer::kRiverCardFieldNumber;
const int MsgQingErPlayer::kWeaveCardFieldNumber;
const int MsgQingErPlayer::kWikFieldNumber;
const int MsgQingErPlayer::kTdFieldNumber;
const int MsgQingErPlayer::kChaozhuangFieldNumber;
const int MsgQingErPlayer::kGangCardFieldNumber;
const int MsgQingErPlayer::kFlowerCardListFieldNumber;
const int MsgQingErPlayer::kPengCardListFieldNumber;
const int MsgQingErPlayer::kQifeiCardListFieldNumber;
const int MsgQingErPlayer::kHuCardFieldNumber;
const int MsgQingErPlayer::kHuCardListFieldNumber;
const int MsgQingErPlayer::kRoleScoreFieldNumber;
#endif  // !_MSC_VER

MsgQingErPlayer::MsgQingErPlayer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErPlayer)
}

void MsgQingErPlayer::InitAsDefaultInstance() {
  player_info_ = const_cast< ::MsgPlayerInfo*>(&::MsgPlayerInfo::default_instance());
}

MsgQingErPlayer::MsgQingErPlayer(const MsgQingErPlayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErPlayer)
}

void MsgQingErPlayer::SharedCtor() {
  _cached_size_ = 0;
  player_info_ = NULL;
  state_ = 0u;
  hand_num_ = 0u;
  wik_ = 0u;
  td_ = 0;
  chaozhuang_ = 0u;
  hu_card_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErPlayer::~MsgQingErPlayer() {
  // @@protoc_insertion_point(destructor:MsgQingErPlayer)
  SharedDtor();
}

void MsgQingErPlayer::SharedDtor() {
  if (this != default_instance_) {
    delete player_info_;
  }
}

void MsgQingErPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErPlayer_descriptor_;
}

const MsgQingErPlayer& MsgQingErPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErPlayer* MsgQingErPlayer::default_instance_ = NULL;

MsgQingErPlayer* MsgQingErPlayer::New() const {
  return new MsgQingErPlayer;
}

void MsgQingErPlayer::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErPlayer*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 231) {
    ZR_(state_, hand_num_);
    ZR_(wik_, td_);
    if (has_player_info()) {
      if (player_info_ != NULL) player_info_->::MsgPlayerInfo::Clear();
    }
    chaozhuang_ = 0u;
  }
  hu_card_ = 0u;

#undef OFFSET_OF_FIELD_
#undef ZR_

  river_card_.Clear();
  weave_card_.Clear();
  gang_card_.Clear();
  flower_card_list_.Clear();
  peng_card_list_.Clear();
  qifei_card_list_.Clear();
  hu_card_list_.Clear();
  role_score_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPlayerInfo player_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional uint32 state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 3;
      case 3: {
        if (tag == 24) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_river_card;
        break;
      }

      // repeated uint32 river_card = 4;
      case 4: {
        if (tag == 32) {
         parse_river_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_river_card())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_river_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_river_card;
        if (input->ExpectTag(42)) goto parse_weave_card;
        break;
      }

      // repeated .MsgQingErCardData weave_card = 5;
      case 5: {
        if (tag == 42) {
         parse_weave_card:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_weave_card()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_weave_card;
        if (input->ExpectTag(48)) goto parse_wik;
        break;
      }

      // optional uint32 wik = 6;
      case 6: {
        if (tag == 48) {
         parse_wik:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wik_)));
          set_has_wik();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_td;
        break;
      }

      // optional .TQingErDirection td = 7;
      case 7: {
        if (tag == 56) {
         parse_td:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TQingErDirection_IsValid(value)) {
            set_td(static_cast< ::TQingErDirection >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_chaozhuang;
        break;
      }

      // optional uint32 chaozhuang = 8;
      case 8: {
        if (tag == 64) {
         parse_chaozhuang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chaozhuang_)));
          set_has_chaozhuang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_gang_card;
        break;
      }

      // repeated uint32 gang_card = 9;
      case 9: {
        if (tag == 72) {
         parse_gang_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_gang_card())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gang_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_gang_card;
        if (input->ExpectTag(80)) goto parse_flower_card_list;
        break;
      }

      // repeated uint32 flower_card_list = 10;
      case 10: {
        if (tag == 80) {
         parse_flower_card_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80, input, this->mutable_flower_card_list())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_flower_card_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_flower_card_list;
        if (input->ExpectTag(88)) goto parse_peng_card_list;
        break;
      }

      // repeated uint32 peng_card_list = 11;
      case 11: {
        if (tag == 88) {
         parse_peng_card_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 88, input, this->mutable_peng_card_list())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_peng_card_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_peng_card_list;
        if (input->ExpectTag(96)) goto parse_qifei_card_list;
        break;
      }

      // repeated uint32 qifei_card_list = 12;
      case 12: {
        if (tag == 96) {
         parse_qifei_card_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 96, input, this->mutable_qifei_card_list())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_qifei_card_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_qifei_card_list;
        if (input->ExpectTag(104)) goto parse_hu_card;
        break;
      }

      // optional uint32 hu_card = 13;
      case 13: {
        if (tag == 104) {
         parse_hu_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hu_card_)));
          set_has_hu_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_hu_card_list;
        break;
      }

      // repeated uint32 hu_card_list = 14;
      case 14: {
        if (tag == 112) {
         parse_hu_card_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 112, input, this->mutable_hu_card_list())));
        } else if (tag == 114) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hu_card_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_hu_card_list;
        if (input->ExpectTag(122)) goto parse_role_score;
        break;
      }

      // repeated .MsgQingErRoleScore role_score = 15;
      case 15: {
        if (tag == 122) {
         parse_role_score:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_score()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_role_score;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErPlayer)
  return false;
#undef DO_
}

void MsgQingErPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErPlayer)
  // optional .MsgPlayerInfo player_info = 1;
  if (has_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player_info(), output);
  }

  // optional uint32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // optional uint32 hand_num = 3;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hand_num(), output);
  }

  // repeated uint32 river_card = 4;
  for (int i = 0; i < this->river_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->river_card(i), output);
  }

  // repeated .MsgQingErCardData weave_card = 5;
  for (int i = 0; i < this->weave_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->weave_card(i), output);
  }

  // optional uint32 wik = 6;
  if (has_wik()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->wik(), output);
  }

  // optional .TQingErDirection td = 7;
  if (has_td()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->td(), output);
  }

  // optional uint32 chaozhuang = 8;
  if (has_chaozhuang()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->chaozhuang(), output);
  }

  // repeated uint32 gang_card = 9;
  for (int i = 0; i < this->gang_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->gang_card(i), output);
  }

  // repeated uint32 flower_card_list = 10;
  for (int i = 0; i < this->flower_card_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->flower_card_list(i), output);
  }

  // repeated uint32 peng_card_list = 11;
  for (int i = 0; i < this->peng_card_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      11, this->peng_card_list(i), output);
  }

  // repeated uint32 qifei_card_list = 12;
  for (int i = 0; i < this->qifei_card_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      12, this->qifei_card_list(i), output);
  }

  // optional uint32 hu_card = 13;
  if (has_hu_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->hu_card(), output);
  }

  // repeated uint32 hu_card_list = 14;
  for (int i = 0; i < this->hu_card_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      14, this->hu_card_list(i), output);
  }

  // repeated .MsgQingErRoleScore role_score = 15;
  for (int i = 0; i < this->role_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->role_score(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErPlayer)
}

::google::protobuf::uint8* MsgQingErPlayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErPlayer)
  // optional .MsgPlayerInfo player_info = 1;
  if (has_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->player_info(), target);
  }

  // optional uint32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // optional uint32 hand_num = 3;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hand_num(), target);
  }

  // repeated uint32 river_card = 4;
  for (int i = 0; i < this->river_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->river_card(i), target);
  }

  // repeated .MsgQingErCardData weave_card = 5;
  for (int i = 0; i < this->weave_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->weave_card(i), target);
  }

  // optional uint32 wik = 6;
  if (has_wik()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->wik(), target);
  }

  // optional .TQingErDirection td = 7;
  if (has_td()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->td(), target);
  }

  // optional uint32 chaozhuang = 8;
  if (has_chaozhuang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->chaozhuang(), target);
  }

  // repeated uint32 gang_card = 9;
  for (int i = 0; i < this->gang_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->gang_card(i), target);
  }

  // repeated uint32 flower_card_list = 10;
  for (int i = 0; i < this->flower_card_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(10, this->flower_card_list(i), target);
  }

  // repeated uint32 peng_card_list = 11;
  for (int i = 0; i < this->peng_card_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(11, this->peng_card_list(i), target);
  }

  // repeated uint32 qifei_card_list = 12;
  for (int i = 0; i < this->qifei_card_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(12, this->qifei_card_list(i), target);
  }

  // optional uint32 hu_card = 13;
  if (has_hu_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->hu_card(), target);
  }

  // repeated uint32 hu_card_list = 14;
  for (int i = 0; i < this->hu_card_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(14, this->hu_card_list(i), target);
  }

  // repeated .MsgQingErRoleScore role_score = 15;
  for (int i = 0; i < this->role_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->role_score(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErPlayer)
  return target;
}

int MsgQingErPlayer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPlayerInfo player_info = 1;
    if (has_player_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_info());
    }

    // optional uint32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // optional uint32 hand_num = 3;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

    // optional uint32 wik = 6;
    if (has_wik()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wik());
    }

    // optional .TQingErDirection td = 7;
    if (has_td()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->td());
    }

    // optional uint32 chaozhuang = 8;
    if (has_chaozhuang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chaozhuang());
    }

  }
  if (_has_bits_[12 / 32] & (0xffu << (12 % 32))) {
    // optional uint32 hu_card = 13;
    if (has_hu_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hu_card());
    }

  }
  // repeated uint32 river_card = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->river_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->river_card(i));
    }
    total_size += 1 * this->river_card_size() + data_size;
  }

  // repeated .MsgQingErCardData weave_card = 5;
  total_size += 1 * this->weave_card_size();
  for (int i = 0; i < this->weave_card_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->weave_card(i));
  }

  // repeated uint32 gang_card = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->gang_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gang_card(i));
    }
    total_size += 1 * this->gang_card_size() + data_size;
  }

  // repeated uint32 flower_card_list = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->flower_card_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->flower_card_list(i));
    }
    total_size += 1 * this->flower_card_list_size() + data_size;
  }

  // repeated uint32 peng_card_list = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->peng_card_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->peng_card_list(i));
    }
    total_size += 1 * this->peng_card_list_size() + data_size;
  }

  // repeated uint32 qifei_card_list = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->qifei_card_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->qifei_card_list(i));
    }
    total_size += 1 * this->qifei_card_list_size() + data_size;
  }

  // repeated uint32 hu_card_list = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->hu_card_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hu_card_list(i));
    }
    total_size += 1 * this->hu_card_list_size() + data_size;
  }

  // repeated .MsgQingErRoleScore role_score = 15;
  total_size += 1 * this->role_score_size();
  for (int i = 0; i < this->role_score_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_score(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErPlayer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErPlayer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErPlayer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErPlayer::MergeFrom(const MsgQingErPlayer& from) {
  GOOGLE_CHECK_NE(&from, this);
  river_card_.MergeFrom(from.river_card_);
  weave_card_.MergeFrom(from.weave_card_);
  gang_card_.MergeFrom(from.gang_card_);
  flower_card_list_.MergeFrom(from.flower_card_list_);
  peng_card_list_.MergeFrom(from.peng_card_list_);
  qifei_card_list_.MergeFrom(from.qifei_card_list_);
  hu_card_list_.MergeFrom(from.hu_card_list_);
  role_score_.MergeFrom(from.role_score_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_info()) {
      mutable_player_info()->::MsgPlayerInfo::MergeFrom(from.player_info());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
    if (from.has_wik()) {
      set_wik(from.wik());
    }
    if (from.has_td()) {
      set_td(from.td());
    }
    if (from.has_chaozhuang()) {
      set_chaozhuang(from.chaozhuang());
    }
  }
  if (from._has_bits_[12 / 32] & (0xffu << (12 % 32))) {
    if (from.has_hu_card()) {
      set_hu_card(from.hu_card());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErPlayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErPlayer::CopyFrom(const MsgQingErPlayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErPlayer::IsInitialized() const {

  return true;
}

void MsgQingErPlayer::Swap(MsgQingErPlayer* other) {
  if (other != this) {
    std::swap(player_info_, other->player_info_);
    std::swap(state_, other->state_);
    std::swap(hand_num_, other->hand_num_);
    river_card_.Swap(&other->river_card_);
    weave_card_.Swap(&other->weave_card_);
    std::swap(wik_, other->wik_);
    std::swap(td_, other->td_);
    std::swap(chaozhuang_, other->chaozhuang_);
    gang_card_.Swap(&other->gang_card_);
    flower_card_list_.Swap(&other->flower_card_list_);
    peng_card_list_.Swap(&other->peng_card_list_);
    qifei_card_list_.Swap(&other->qifei_card_list_);
    std::swap(hu_card_, other->hu_card_);
    hu_card_list_.Swap(&other->hu_card_list_);
    role_score_.Swap(&other->role_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErPlayer_descriptor_;
  metadata.reflection = MsgQingErPlayer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErRoom::kRoomStateFieldNumber;
const int MsgQingErRoom::kPlayerListFieldNumber;
const int MsgQingErRoom::kBankerIdFieldNumber;
const int MsgQingErRoom::kActionIdFieldNumber;
const int MsgQingErRoom::kHandCardFieldNumber;
const int MsgQingErRoom::kRoomInfoFieldNumber;
const int MsgQingErRoom::kSurplusHandNumFieldNumber;
const int MsgQingErRoom::kBaseFlowerFieldNumber;
const int MsgQingErRoom::kSendCardFieldNumber;
const int MsgQingErRoom::kRoomIdFieldNumber;
const int MsgQingErRoom::kRoomTypeFieldNumber;
const int MsgQingErRoom::kGameCountFieldNumber;
const int MsgQingErRoom::kStateRunTimeFieldNumber;
const int MsgQingErRoom::kPrivateRoomFieldNumber;
const int MsgQingErRoom::kJianCardFieldNumber;
const int MsgQingErRoom::kGameCircleFieldNumber;
const int MsgQingErRoom::kOutCardFieldNumber;
const int MsgQingErRoom::kParam1FieldNumber;
const int MsgQingErRoom::kParamListFieldNumber;
const int MsgQingErRoom::kGangCardFieldNumber;
const int MsgQingErRoom::kShowDownInfoFieldNumber;
const int MsgQingErRoom::kRoleHostFieldNumber;
const int MsgQingErRoom::kRoleStateFieldNumber;
const int MsgQingErRoom::kRoomPayTypeFieldNumber;
#endif  // !_MSC_VER

MsgQingErRoom::MsgQingErRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErRoom)
}

void MsgQingErRoom::InitAsDefaultInstance() {
  room_info_ = const_cast< ::MsgBaseRoomInfo*>(&::MsgBaseRoomInfo::default_instance());
  private_room_ = const_cast< ::MsgQingErPrivateRoom*>(&::MsgQingErPrivateRoom::default_instance());
  show_down_info_ = const_cast< ::MsgQingErShowDownCount*>(&::MsgQingErShowDownCount::default_instance());
  role_host_ = const_cast< ::MsgRoleHostCount*>(&::MsgRoleHostCount::default_instance());
  role_state_ = const_cast< ::MsgRoleStateCount*>(&::MsgRoleStateCount::default_instance());
}

MsgQingErRoom::MsgQingErRoom(const MsgQingErRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErRoom)
}

void MsgQingErRoom::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  room_state_ = 0;
  banker_id_ = GOOGLE_ULONGLONG(0);
  action_id_ = GOOGLE_ULONGLONG(0);
  room_info_ = NULL;
  surplus_hand_num_ = 0u;
  base_flower_ = 0u;
  send_card_ = 0u;
  room_id_ = GOOGLE_ULONGLONG(0);
  room_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_count_ = 0u;
  state_run_time_ = 0u;
  private_room_ = NULL;
  jian_card_ = 0u;
  game_circle_ = 0u;
  out_card_ = 0u;
  param1_ = 0u;
  show_down_info_ = NULL;
  role_host_ = NULL;
  role_state_ = NULL;
  room_pay_type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErRoom::~MsgQingErRoom() {
  // @@protoc_insertion_point(destructor:MsgQingErRoom)
  SharedDtor();
}

void MsgQingErRoom::SharedDtor() {
  if (room_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_type_;
  }
  if (this != default_instance_) {
    delete room_info_;
    delete private_room_;
    delete show_down_info_;
    delete role_host_;
    delete role_state_;
  }
}

void MsgQingErRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErRoom_descriptor_;
}

const MsgQingErRoom& MsgQingErRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErRoom* MsgQingErRoom::default_instance_ = NULL;

MsgQingErRoom* MsgQingErRoom::New() const {
  return new MsgQingErRoom;
}

void MsgQingErRoom::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErRoom*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 237) {
    ZR_(banker_id_, surplus_hand_num_);
    if (has_room_info()) {
      if (room_info_ != NULL) room_info_->::MsgBaseRoomInfo::Clear();
    }
    base_flower_ = 0u;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(send_card_, room_id_);
    ZR_(game_count_, state_run_time_);
    ZR_(jian_card_, game_circle_);
    if (has_room_type()) {
      if (room_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        room_type_->clear();
      }
    }
    if (has_private_room()) {
      if (private_room_ != NULL) private_room_->::MsgQingErPrivateRoom::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 15925248) {
    ZR_(out_card_, param1_);
    if (has_show_down_info()) {
      if (show_down_info_ != NULL) show_down_info_->::MsgQingErShowDownCount::Clear();
    }
    if (has_role_host()) {
      if (role_host_ != NULL) role_host_->::MsgRoleHostCount::Clear();
    }
    if (has_role_state()) {
      if (role_state_ != NULL) role_state_->::MsgRoleStateCount::Clear();
    }
    room_pay_type_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  player_list_.Clear();
  hand_card_.Clear();
  param_list_.Clear();
  gang_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TQingErState room_state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TQingErState_IsValid(value)) {
            set_room_state(static_cast< ::TQingErState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_player_list;
        break;
      }

      // repeated .MsgQingErPlayer player_list = 2;
      case 2: {
        if (tag == 18) {
         parse_player_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_player_list;
        if (input->ExpectTag(24)) goto parse_banker_id;
        break;
      }

      // optional uint64 banker_id = 3;
      case 3: {
        if (tag == 24) {
         parse_banker_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &banker_id_)));
          set_has_banker_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_action_id;
        break;
      }

      // optional uint64 action_id = 4;
      case 4: {
        if (tag == 32) {
         parse_action_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &action_id_)));
          set_has_action_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_hand_card;
        break;
      }

      // repeated uint32 hand_card = 5;
      case 5: {
        if (tag == 40) {
         parse_hand_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_hand_card())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_hand_card;
        if (input->ExpectTag(50)) goto parse_room_info;
        break;
      }

      // optional .MsgBaseRoomInfo room_info = 6;
      case 6: {
        if (tag == 50) {
         parse_room_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_room_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_surplus_hand_num;
        break;
      }

      // optional uint32 surplus_hand_num = 8;
      case 8: {
        if (tag == 64) {
         parse_surplus_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &surplus_hand_num_)));
          set_has_surplus_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_base_flower;
        break;
      }

      // optional uint32 base_flower = 9;
      case 9: {
        if (tag == 72) {
         parse_base_flower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_flower_)));
          set_has_base_flower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_send_card;
        break;
      }

      // optional uint32 send_card = 10;
      case 10: {
        if (tag == 80) {
         parse_send_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &send_card_)));
          set_has_send_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_room_id;
        break;
      }

      // optional uint64 room_id = 11;
      case 11: {
        if (tag == 88) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_room_type;
        break;
      }

      // optional string room_type = 12;
      case 12: {
        if (tag == 98) {
         parse_room_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->room_type().data(), this->room_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "room_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_game_count;
        break;
      }

      // optional uint32 game_count = 13;
      case 13: {
        if (tag == 104) {
         parse_game_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_count_)));
          set_has_game_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_state_run_time;
        break;
      }

      // optional uint32 state_run_time = 14;
      case 14: {
        if (tag == 112) {
         parse_state_run_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_run_time_)));
          set_has_state_run_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_private_room;
        break;
      }

      // optional .MsgQingErPrivateRoom private_room = 15;
      case 15: {
        if (tag == 122) {
         parse_private_room:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_private_room()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_jian_card;
        break;
      }

      // optional uint32 jian_card = 16;
      case 16: {
        if (tag == 128) {
         parse_jian_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jian_card_)));
          set_has_jian_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_game_circle;
        break;
      }

      // optional uint32 game_circle = 17;
      case 17: {
        if (tag == 136) {
         parse_game_circle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_circle_)));
          set_has_game_circle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_out_card;
        break;
      }

      // optional uint32 out_card = 18;
      case 18: {
        if (tag == 144) {
         parse_out_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_card_)));
          set_has_out_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_param1;
        break;
      }

      // optional uint32 param1 = 19;
      case 19: {
        if (tag == 152) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_param_list;
        break;
      }

      // repeated uint32 param_list = 20;
      case 20: {
        if (tag == 160) {
         parse_param_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 160, input, this->mutable_param_list())));
        } else if (tag == 162) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_param_list;
        if (input->ExpectTag(168)) goto parse_gang_card;
        break;
      }

      // repeated uint32 gang_card = 21;
      case 21: {
        if (tag == 168) {
         parse_gang_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 168, input, this->mutable_gang_card())));
        } else if (tag == 170) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gang_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_gang_card;
        if (input->ExpectTag(178)) goto parse_show_down_info;
        break;
      }

      // optional .MsgQingErShowDownCount show_down_info = 22;
      case 22: {
        if (tag == 178) {
         parse_show_down_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_show_down_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_role_host;
        break;
      }

      // optional .MsgRoleHostCount role_host = 25;
      case 25: {
        if (tag == 202) {
         parse_role_host:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_host()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_role_state;
        break;
      }

      // optional .MsgRoleStateCount role_state = 26;
      case 26: {
        if (tag == 210) {
         parse_role_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_room_pay_type;
        break;
      }

      // optional uint32 room_pay_type = 28;
      case 28: {
        if (tag == 224) {
         parse_room_pay_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_pay_type_)));
          set_has_room_pay_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErRoom)
  return false;
#undef DO_
}

void MsgQingErRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErRoom)
  // optional .TQingErState room_state = 1;
  if (has_room_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->room_state(), output);
  }

  // repeated .MsgQingErPlayer player_list = 2;
  for (int i = 0; i < this->player_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player_list(i), output);
  }

  // optional uint64 banker_id = 3;
  if (has_banker_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->banker_id(), output);
  }

  // optional uint64 action_id = 4;
  if (has_action_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->action_id(), output);
  }

  // repeated uint32 hand_card = 5;
  for (int i = 0; i < this->hand_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->hand_card(i), output);
  }

  // optional .MsgBaseRoomInfo room_info = 6;
  if (has_room_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->room_info(), output);
  }

  // optional uint32 surplus_hand_num = 8;
  if (has_surplus_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->surplus_hand_num(), output);
  }

  // optional uint32 base_flower = 9;
  if (has_base_flower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->base_flower(), output);
  }

  // optional uint32 send_card = 10;
  if (has_send_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->send_card(), output);
  }

  // optional uint64 room_id = 11;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->room_id(), output);
  }

  // optional string room_type = 12;
  if (has_room_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_type().data(), this->room_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "room_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->room_type(), output);
  }

  // optional uint32 game_count = 13;
  if (has_game_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->game_count(), output);
  }

  // optional uint32 state_run_time = 14;
  if (has_state_run_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->state_run_time(), output);
  }

  // optional .MsgQingErPrivateRoom private_room = 15;
  if (has_private_room()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->private_room(), output);
  }

  // optional uint32 jian_card = 16;
  if (has_jian_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->jian_card(), output);
  }

  // optional uint32 game_circle = 17;
  if (has_game_circle()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->game_circle(), output);
  }

  // optional uint32 out_card = 18;
  if (has_out_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->out_card(), output);
  }

  // optional uint32 param1 = 19;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->param1(), output);
  }

  // repeated uint32 param_list = 20;
  for (int i = 0; i < this->param_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      20, this->param_list(i), output);
  }

  // repeated uint32 gang_card = 21;
  for (int i = 0; i < this->gang_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      21, this->gang_card(i), output);
  }

  // optional .MsgQingErShowDownCount show_down_info = 22;
  if (has_show_down_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->show_down_info(), output);
  }

  // optional .MsgRoleHostCount role_host = 25;
  if (has_role_host()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->role_host(), output);
  }

  // optional .MsgRoleStateCount role_state = 26;
  if (has_role_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->role_state(), output);
  }

  // optional uint32 room_pay_type = 28;
  if (has_room_pay_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->room_pay_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErRoom)
}

::google::protobuf::uint8* MsgQingErRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErRoom)
  // optional .TQingErState room_state = 1;
  if (has_room_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->room_state(), target);
  }

  // repeated .MsgQingErPlayer player_list = 2;
  for (int i = 0; i < this->player_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->player_list(i), target);
  }

  // optional uint64 banker_id = 3;
  if (has_banker_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->banker_id(), target);
  }

  // optional uint64 action_id = 4;
  if (has_action_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->action_id(), target);
  }

  // repeated uint32 hand_card = 5;
  for (int i = 0; i < this->hand_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->hand_card(i), target);
  }

  // optional .MsgBaseRoomInfo room_info = 6;
  if (has_room_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->room_info(), target);
  }

  // optional uint32 surplus_hand_num = 8;
  if (has_surplus_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->surplus_hand_num(), target);
  }

  // optional uint32 base_flower = 9;
  if (has_base_flower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->base_flower(), target);
  }

  // optional uint32 send_card = 10;
  if (has_send_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->send_card(), target);
  }

  // optional uint64 room_id = 11;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->room_id(), target);
  }

  // optional string room_type = 12;
  if (has_room_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_type().data(), this->room_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "room_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->room_type(), target);
  }

  // optional uint32 game_count = 13;
  if (has_game_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->game_count(), target);
  }

  // optional uint32 state_run_time = 14;
  if (has_state_run_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->state_run_time(), target);
  }

  // optional .MsgQingErPrivateRoom private_room = 15;
  if (has_private_room()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->private_room(), target);
  }

  // optional uint32 jian_card = 16;
  if (has_jian_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->jian_card(), target);
  }

  // optional uint32 game_circle = 17;
  if (has_game_circle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->game_circle(), target);
  }

  // optional uint32 out_card = 18;
  if (has_out_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->out_card(), target);
  }

  // optional uint32 param1 = 19;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->param1(), target);
  }

  // repeated uint32 param_list = 20;
  for (int i = 0; i < this->param_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(20, this->param_list(i), target);
  }

  // repeated uint32 gang_card = 21;
  for (int i = 0; i < this->gang_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(21, this->gang_card(i), target);
  }

  // optional .MsgQingErShowDownCount show_down_info = 22;
  if (has_show_down_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->show_down_info(), target);
  }

  // optional .MsgRoleHostCount role_host = 25;
  if (has_role_host()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->role_host(), target);
  }

  // optional .MsgRoleStateCount role_state = 26;
  if (has_role_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->role_state(), target);
  }

  // optional uint32 room_pay_type = 28;
  if (has_room_pay_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->room_pay_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErRoom)
  return target;
}

int MsgQingErRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .TQingErState room_state = 1;
    if (has_room_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_state());
    }

    // optional uint64 banker_id = 3;
    if (has_banker_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->banker_id());
    }

    // optional uint64 action_id = 4;
    if (has_action_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->action_id());
    }

    // optional .MsgBaseRoomInfo room_info = 6;
    if (has_room_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->room_info());
    }

    // optional uint32 surplus_hand_num = 8;
    if (has_surplus_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->surplus_hand_num());
    }

    // optional uint32 base_flower = 9;
    if (has_base_flower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_flower());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 send_card = 10;
    if (has_send_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->send_card());
    }

    // optional uint64 room_id = 11;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->room_id());
    }

    // optional string room_type = 12;
    if (has_room_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->room_type());
    }

    // optional uint32 game_count = 13;
    if (has_game_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_count());
    }

    // optional uint32 state_run_time = 14;
    if (has_state_run_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state_run_time());
    }

    // optional .MsgQingErPrivateRoom private_room = 15;
    if (has_private_room()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->private_room());
    }

    // optional uint32 jian_card = 16;
    if (has_jian_card()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jian_card());
    }

    // optional uint32 game_circle = 17;
    if (has_game_circle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_circle());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional uint32 out_card = 18;
    if (has_out_card()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->out_card());
    }

    // optional uint32 param1 = 19;
    if (has_param1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param1());
    }

    // optional .MsgQingErShowDownCount show_down_info = 22;
    if (has_show_down_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->show_down_info());
    }

    // optional .MsgRoleHostCount role_host = 25;
    if (has_role_host()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->role_host());
    }

    // optional .MsgRoleStateCount role_state = 26;
    if (has_role_state()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->role_state());
    }

    // optional uint32 room_pay_type = 28;
    if (has_room_pay_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_pay_type());
    }

  }
  // repeated .MsgQingErPlayer player_list = 2;
  total_size += 1 * this->player_list_size();
  for (int i = 0; i < this->player_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player_list(i));
  }

  // repeated uint32 hand_card = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_card(i));
    }
    total_size += 1 * this->hand_card_size() + data_size;
  }

  // repeated uint32 param_list = 20;
  {
    int data_size = 0;
    for (int i = 0; i < this->param_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->param_list(i));
    }
    total_size += 2 * this->param_list_size() + data_size;
  }

  // repeated uint32 gang_card = 21;
  {
    int data_size = 0;
    for (int i = 0; i < this->gang_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gang_card(i));
    }
    total_size += 2 * this->gang_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErRoom::MergeFrom(const MsgQingErRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_list_.MergeFrom(from.player_list_);
  hand_card_.MergeFrom(from.hand_card_);
  param_list_.MergeFrom(from.param_list_);
  gang_card_.MergeFrom(from.gang_card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_state()) {
      set_room_state(from.room_state());
    }
    if (from.has_banker_id()) {
      set_banker_id(from.banker_id());
    }
    if (from.has_action_id()) {
      set_action_id(from.action_id());
    }
    if (from.has_room_info()) {
      mutable_room_info()->::MsgBaseRoomInfo::MergeFrom(from.room_info());
    }
    if (from.has_surplus_hand_num()) {
      set_surplus_hand_num(from.surplus_hand_num());
    }
    if (from.has_base_flower()) {
      set_base_flower(from.base_flower());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_send_card()) {
      set_send_card(from.send_card());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_room_type()) {
      set_room_type(from.room_type());
    }
    if (from.has_game_count()) {
      set_game_count(from.game_count());
    }
    if (from.has_state_run_time()) {
      set_state_run_time(from.state_run_time());
    }
    if (from.has_private_room()) {
      mutable_private_room()->::MsgQingErPrivateRoom::MergeFrom(from.private_room());
    }
    if (from.has_jian_card()) {
      set_jian_card(from.jian_card());
    }
    if (from.has_game_circle()) {
      set_game_circle(from.game_circle());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_out_card()) {
      set_out_card(from.out_card());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_show_down_info()) {
      mutable_show_down_info()->::MsgQingErShowDownCount::MergeFrom(from.show_down_info());
    }
    if (from.has_role_host()) {
      mutable_role_host()->::MsgRoleHostCount::MergeFrom(from.role_host());
    }
    if (from.has_role_state()) {
      mutable_role_state()->::MsgRoleStateCount::MergeFrom(from.role_state());
    }
    if (from.has_room_pay_type()) {
      set_room_pay_type(from.room_pay_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErRoom::CopyFrom(const MsgQingErRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErRoom::IsInitialized() const {

  return true;
}

void MsgQingErRoom::Swap(MsgQingErRoom* other) {
  if (other != this) {
    std::swap(room_state_, other->room_state_);
    player_list_.Swap(&other->player_list_);
    std::swap(banker_id_, other->banker_id_);
    std::swap(action_id_, other->action_id_);
    hand_card_.Swap(&other->hand_card_);
    std::swap(room_info_, other->room_info_);
    std::swap(surplus_hand_num_, other->surplus_hand_num_);
    std::swap(base_flower_, other->base_flower_);
    std::swap(send_card_, other->send_card_);
    std::swap(room_id_, other->room_id_);
    std::swap(room_type_, other->room_type_);
    std::swap(game_count_, other->game_count_);
    std::swap(state_run_time_, other->state_run_time_);
    std::swap(private_room_, other->private_room_);
    std::swap(jian_card_, other->jian_card_);
    std::swap(game_circle_, other->game_circle_);
    std::swap(out_card_, other->out_card_);
    std::swap(param1_, other->param1_);
    param_list_.Swap(&other->param_list_);
    gang_card_.Swap(&other->gang_card_);
    std::swap(show_down_info_, other->show_down_info_);
    std::swap(role_host_, other->role_host_);
    std::swap(role_state_, other->role_state_);
    std::swap(room_pay_type_, other->room_pay_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErRoom_descriptor_;
  metadata.reflection = MsgQingErRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErPrivateRoom::kSpecialKindFieldNumber;
const int MsgQingErPrivateRoom::kConsumeIdFieldNumber;
const int MsgQingErPrivateRoom::kScoreFieldNumber;
const int MsgQingErPrivateRoom::kPlayerNumberFieldNumber;
#endif  // !_MSC_VER

MsgQingErPrivateRoom::MsgQingErPrivateRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErPrivateRoom)
}

void MsgQingErPrivateRoom::InitAsDefaultInstance() {
}

MsgQingErPrivateRoom::MsgQingErPrivateRoom(const MsgQingErPrivateRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErPrivateRoom)
}

void MsgQingErPrivateRoom::SharedCtor() {
  _cached_size_ = 0;
  special_kind_ = 0u;
  consume_id_ = 0u;
  score_ = 0u;
  player_number_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErPrivateRoom::~MsgQingErPrivateRoom() {
  // @@protoc_insertion_point(destructor:MsgQingErPrivateRoom)
  SharedDtor();
}

void MsgQingErPrivateRoom::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErPrivateRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErPrivateRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErPrivateRoom_descriptor_;
}

const MsgQingErPrivateRoom& MsgQingErPrivateRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErPrivateRoom* MsgQingErPrivateRoom::default_instance_ = NULL;

MsgQingErPrivateRoom* MsgQingErPrivateRoom::New() const {
  return new MsgQingErPrivateRoom;
}

void MsgQingErPrivateRoom::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErPrivateRoom*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(special_kind_, player_number_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErPrivateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErPrivateRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 special_kind = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &special_kind_)));
          set_has_special_kind();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_consume_id;
        break;
      }

      // optional uint32 consume_id = 2;
      case 2: {
        if (tag == 16) {
         parse_consume_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consume_id_)));
          set_has_consume_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_score;
        break;
      }

      // optional uint32 score = 3;
      case 3: {
        if (tag == 24) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_player_number;
        break;
      }

      // optional uint32 player_number = 4;
      case 4: {
        if (tag == 32) {
         parse_player_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_number_)));
          set_has_player_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErPrivateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErPrivateRoom)
  return false;
#undef DO_
}

void MsgQingErPrivateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErPrivateRoom)
  // optional uint32 special_kind = 1;
  if (has_special_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->special_kind(), output);
  }

  // optional uint32 consume_id = 2;
  if (has_consume_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->consume_id(), output);
  }

  // optional uint32 score = 3;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->score(), output);
  }

  // optional uint32 player_number = 4;
  if (has_player_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->player_number(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErPrivateRoom)
}

::google::protobuf::uint8* MsgQingErPrivateRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErPrivateRoom)
  // optional uint32 special_kind = 1;
  if (has_special_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->special_kind(), target);
  }

  // optional uint32 consume_id = 2;
  if (has_consume_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->consume_id(), target);
  }

  // optional uint32 score = 3;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->score(), target);
  }

  // optional uint32 player_number = 4;
  if (has_player_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->player_number(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErPrivateRoom)
  return target;
}

int MsgQingErPrivateRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 special_kind = 1;
    if (has_special_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->special_kind());
    }

    // optional uint32 consume_id = 2;
    if (has_consume_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consume_id());
    }

    // optional uint32 score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

    // optional uint32 player_number = 4;
    if (has_player_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_number());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErPrivateRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErPrivateRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErPrivateRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErPrivateRoom::MergeFrom(const MsgQingErPrivateRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_special_kind()) {
      set_special_kind(from.special_kind());
    }
    if (from.has_consume_id()) {
      set_consume_id(from.consume_id());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_player_number()) {
      set_player_number(from.player_number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErPrivateRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErPrivateRoom::CopyFrom(const MsgQingErPrivateRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErPrivateRoom::IsInitialized() const {

  return true;
}

void MsgQingErPrivateRoom::Swap(MsgQingErPrivateRoom* other) {
  if (other != this) {
    std::swap(special_kind_, other->special_kind_);
    std::swap(consume_id_, other->consume_id_);
    std::swap(score_, other->score_);
    std::swap(player_number_, other->player_number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErPrivateRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErPrivateRoom_descriptor_;
  metadata.reflection = MsgQingErPrivateRoom_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErWeaveCard::kCarddataFieldNumber;
const int MsgQingErWeaveCard::kHandNumFieldNumber;
const int MsgQingErWeaveCard::kHandCardFieldNumber;
const int MsgQingErWeaveCard::kRoleScoreFieldNumber;
const int MsgQingErWeaveCard::kPlayerListFieldNumber;
const int MsgQingErWeaveCard::kParam1FieldNumber;
const int MsgQingErWeaveCard::kWeaveScoreFieldNumber;
const int MsgQingErWeaveCard::kEatCardFieldNumber;
#endif  // !_MSC_VER

MsgQingErWeaveCard::MsgQingErWeaveCard()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErWeaveCard)
}

void MsgQingErWeaveCard::InitAsDefaultInstance() {
}

MsgQingErWeaveCard::MsgQingErWeaveCard(const MsgQingErWeaveCard& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErWeaveCard)
}

void MsgQingErWeaveCard::SharedCtor() {
  _cached_size_ = 0;
  hand_num_ = 0u;
  param1_ = false;
  weave_score_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErWeaveCard::~MsgQingErWeaveCard() {
  // @@protoc_insertion_point(destructor:MsgQingErWeaveCard)
  SharedDtor();
}

void MsgQingErWeaveCard::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErWeaveCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErWeaveCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErWeaveCard_descriptor_;
}

const MsgQingErWeaveCard& MsgQingErWeaveCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErWeaveCard* MsgQingErWeaveCard::default_instance_ = NULL;

MsgQingErWeaveCard* MsgQingErWeaveCard::New() const {
  return new MsgQingErWeaveCard;
}

void MsgQingErWeaveCard::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErWeaveCard*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 98) {
    ZR_(hand_num_, param1_);
    weave_score_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  carddata_.Clear();
  hand_card_.Clear();
  role_score_.Clear();
  player_list_.Clear();
  eat_card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErWeaveCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErWeaveCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgQingErCardData carddata = 1;
      case 1: {
        if (tag == 10) {
         parse_carddata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_carddata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_carddata;
        if (input->ExpectTag(16)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 2;
      case 2: {
        if (tag == 16) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hand_card;
        break;
      }

      // repeated uint32 hand_card = 3;
      case 3: {
        if (tag == 24) {
         parse_hand_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_hand_card())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hand_card;
        if (input->ExpectTag(34)) goto parse_role_score;
        break;
      }

      // repeated .MsgQingErRoleScore role_score = 4;
      case 4: {
        if (tag == 34) {
         parse_role_score:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_score()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_role_score;
        if (input->ExpectTag(42)) goto parse_player_list;
        break;
      }

      // repeated .MsgPlayerInfo player_list = 5;
      case 5: {
        if (tag == 42) {
         parse_player_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_player_list;
        if (input->ExpectTag(48)) goto parse_param1;
        break;
      }

      // optional bool param1 = 6;
      case 6: {
        if (tag == 48) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_weave_score;
        break;
      }

      // optional uint32 weave_score = 7;
      case 7: {
        if (tag == 56) {
         parse_weave_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weave_score_)));
          set_has_weave_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_eat_card;
        break;
      }

      // repeated uint32 eat_card = 8;
      case 8: {
        if (tag == 64) {
         parse_eat_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64, input, this->mutable_eat_card())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_eat_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_eat_card;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErWeaveCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErWeaveCard)
  return false;
#undef DO_
}

void MsgQingErWeaveCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErWeaveCard)
  // repeated .MsgQingErCardData carddata = 1;
  for (int i = 0; i < this->carddata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->carddata(i), output);
  }

  // optional uint32 hand_num = 2;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hand_num(), output);
  }

  // repeated uint32 hand_card = 3;
  for (int i = 0; i < this->hand_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->hand_card(i), output);
  }

  // repeated .MsgQingErRoleScore role_score = 4;
  for (int i = 0; i < this->role_score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->role_score(i), output);
  }

  // repeated .MsgPlayerInfo player_list = 5;
  for (int i = 0; i < this->player_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->player_list(i), output);
  }

  // optional bool param1 = 6;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->param1(), output);
  }

  // optional uint32 weave_score = 7;
  if (has_weave_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->weave_score(), output);
  }

  // repeated uint32 eat_card = 8;
  for (int i = 0; i < this->eat_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->eat_card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErWeaveCard)
}

::google::protobuf::uint8* MsgQingErWeaveCard::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErWeaveCard)
  // repeated .MsgQingErCardData carddata = 1;
  for (int i = 0; i < this->carddata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->carddata(i), target);
  }

  // optional uint32 hand_num = 2;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hand_num(), target);
  }

  // repeated uint32 hand_card = 3;
  for (int i = 0; i < this->hand_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->hand_card(i), target);
  }

  // repeated .MsgQingErRoleScore role_score = 4;
  for (int i = 0; i < this->role_score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->role_score(i), target);
  }

  // repeated .MsgPlayerInfo player_list = 5;
  for (int i = 0; i < this->player_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->player_list(i), target);
  }

  // optional bool param1 = 6;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->param1(), target);
  }

  // optional uint32 weave_score = 7;
  if (has_weave_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->weave_score(), target);
  }

  // repeated uint32 eat_card = 8;
  for (int i = 0; i < this->eat_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->eat_card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErWeaveCard)
  return target;
}

int MsgQingErWeaveCard::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 hand_num = 2;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

    // optional bool param1 = 6;
    if (has_param1()) {
      total_size += 1 + 1;
    }

    // optional uint32 weave_score = 7;
    if (has_weave_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weave_score());
    }

  }
  // repeated .MsgQingErCardData carddata = 1;
  total_size += 1 * this->carddata_size();
  for (int i = 0; i < this->carddata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->carddata(i));
  }

  // repeated uint32 hand_card = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_card(i));
    }
    total_size += 1 * this->hand_card_size() + data_size;
  }

  // repeated .MsgQingErRoleScore role_score = 4;
  total_size += 1 * this->role_score_size();
  for (int i = 0; i < this->role_score_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_score(i));
  }

  // repeated .MsgPlayerInfo player_list = 5;
  total_size += 1 * this->player_list_size();
  for (int i = 0; i < this->player_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player_list(i));
  }

  // repeated uint32 eat_card = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->eat_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->eat_card(i));
    }
    total_size += 1 * this->eat_card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErWeaveCard::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErWeaveCard* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErWeaveCard*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErWeaveCard::MergeFrom(const MsgQingErWeaveCard& from) {
  GOOGLE_CHECK_NE(&from, this);
  carddata_.MergeFrom(from.carddata_);
  hand_card_.MergeFrom(from.hand_card_);
  role_score_.MergeFrom(from.role_score_);
  player_list_.MergeFrom(from.player_list_);
  eat_card_.MergeFrom(from.eat_card_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_weave_score()) {
      set_weave_score(from.weave_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErWeaveCard::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErWeaveCard::CopyFrom(const MsgQingErWeaveCard& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErWeaveCard::IsInitialized() const {

  return true;
}

void MsgQingErWeaveCard::Swap(MsgQingErWeaveCard* other) {
  if (other != this) {
    carddata_.Swap(&other->carddata_);
    std::swap(hand_num_, other->hand_num_);
    hand_card_.Swap(&other->hand_card_);
    role_score_.Swap(&other->role_score_);
    player_list_.Swap(&other->player_list_);
    std::swap(param1_, other->param1_);
    std::swap(weave_score_, other->weave_score_);
    eat_card_.Swap(&other->eat_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErWeaveCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErWeaveCard_descriptor_;
  metadata.reflection = MsgQingErWeaveCard_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErFlowerList::kFlowerListFieldNumber;
#endif  // !_MSC_VER

MsgQingErFlowerList::MsgQingErFlowerList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErFlowerList)
}

void MsgQingErFlowerList::InitAsDefaultInstance() {
}

MsgQingErFlowerList::MsgQingErFlowerList(const MsgQingErFlowerList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErFlowerList)
}

void MsgQingErFlowerList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErFlowerList::~MsgQingErFlowerList() {
  // @@protoc_insertion_point(destructor:MsgQingErFlowerList)
  SharedDtor();
}

void MsgQingErFlowerList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErFlowerList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErFlowerList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErFlowerList_descriptor_;
}

const MsgQingErFlowerList& MsgQingErFlowerList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErFlowerList* MsgQingErFlowerList::default_instance_ = NULL;

MsgQingErFlowerList* MsgQingErFlowerList::New() const {
  return new MsgQingErFlowerList;
}

void MsgQingErFlowerList::Clear() {
  flower_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErFlowerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErFlowerList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgQingErFlowerData flower_list = 1;
      case 1: {
        if (tag == 10) {
         parse_flower_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_flower_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_flower_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErFlowerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErFlowerList)
  return false;
#undef DO_
}

void MsgQingErFlowerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErFlowerList)
  // repeated .MsgQingErFlowerData flower_list = 1;
  for (int i = 0; i < this->flower_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->flower_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErFlowerList)
}

::google::protobuf::uint8* MsgQingErFlowerList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErFlowerList)
  // repeated .MsgQingErFlowerData flower_list = 1;
  for (int i = 0; i < this->flower_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->flower_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErFlowerList)
  return target;
}

int MsgQingErFlowerList::ByteSize() const {
  int total_size = 0;

  // repeated .MsgQingErFlowerData flower_list = 1;
  total_size += 1 * this->flower_list_size();
  for (int i = 0; i < this->flower_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->flower_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErFlowerList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErFlowerList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErFlowerList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErFlowerList::MergeFrom(const MsgQingErFlowerList& from) {
  GOOGLE_CHECK_NE(&from, this);
  flower_list_.MergeFrom(from.flower_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErFlowerList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErFlowerList::CopyFrom(const MsgQingErFlowerList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErFlowerList::IsInitialized() const {

  return true;
}

void MsgQingErFlowerList::Swap(MsgQingErFlowerList* other) {
  if (other != this) {
    flower_list_.Swap(&other->flower_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErFlowerList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErFlowerList_descriptor_;
  metadata.reflection = MsgQingErFlowerList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErFlowerData::kRoleidFieldNumber;
const int MsgQingErFlowerData::kCardFieldNumber;
#endif  // !_MSC_VER

MsgQingErFlowerData::MsgQingErFlowerData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErFlowerData)
}

void MsgQingErFlowerData::InitAsDefaultInstance() {
}

MsgQingErFlowerData::MsgQingErFlowerData(const MsgQingErFlowerData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErFlowerData)
}

void MsgQingErFlowerData::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErFlowerData::~MsgQingErFlowerData() {
  // @@protoc_insertion_point(destructor:MsgQingErFlowerData)
  SharedDtor();
}

void MsgQingErFlowerData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErFlowerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErFlowerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErFlowerData_descriptor_;
}

const MsgQingErFlowerData& MsgQingErFlowerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErFlowerData* MsgQingErFlowerData::default_instance_ = NULL;

MsgQingErFlowerData* MsgQingErFlowerData::New() const {
  return new MsgQingErFlowerData;
}

void MsgQingErFlowerData::Clear() {
  roleid_ = GOOGLE_ULONGLONG(0);
  card_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErFlowerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErFlowerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 roleid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_card;
        break;
      }

      // repeated uint32 card = 2;
      case 2: {
        if (tag == 16) {
         parse_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_card())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_card;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErFlowerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErFlowerData)
  return false;
#undef DO_
}

void MsgQingErFlowerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErFlowerData)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // repeated uint32 card = 2;
  for (int i = 0; i < this->card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->card(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErFlowerData)
}

::google::protobuf::uint8* MsgQingErFlowerData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErFlowerData)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // repeated uint32 card = 2;
  for (int i = 0; i < this->card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->card(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErFlowerData)
  return target;
}

int MsgQingErFlowerData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

  }
  // repeated uint32 card = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->card(i));
    }
    total_size += 1 * this->card_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErFlowerData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErFlowerData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErFlowerData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErFlowerData::MergeFrom(const MsgQingErFlowerData& from) {
  GOOGLE_CHECK_NE(&from, this);
  card_.MergeFrom(from.card_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErFlowerData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErFlowerData::CopyFrom(const MsgQingErFlowerData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErFlowerData::IsInitialized() const {

  return true;
}

void MsgQingErFlowerData::Swap(MsgQingErFlowerData* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    card_.Swap(&other->card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErFlowerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErFlowerData_descriptor_;
  metadata.reflection = MsgQingErFlowerData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErShowDown::kRoleidFieldNumber;
const int MsgQingErShowDown::kMoneyFieldNumber;
const int MsgQingErShowDown::kHukindFieldNumber;
const int MsgQingErShowDown::kHandCardFieldNumber;
const int MsgQingErShowDown::kHardFlowerFieldNumber;
const int MsgQingErShowDown::kMildFlowerFieldNumber;
const int MsgQingErShowDown::kBaotaFlowerFieldNumber;
const int MsgQingErShowDown::kHuCardFieldNumber;
const int MsgQingErShowDown::kTotalMoneyFieldNumber;
const int MsgQingErShowDown::kPackScoreFieldNumber;
const int MsgQingErShowDown::kTotalPackScoreFieldNumber;
const int MsgQingErShowDown::kEventCountFieldNumber;
const int MsgQingErShowDown::kHuRoleFieldNumber;
const int MsgQingErShowDown::kHandNumFieldNumber;
const int MsgQingErShowDown::kHuListFieldNumber;
#endif  // !_MSC_VER

MsgQingErShowDown::MsgQingErShowDown()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErShowDown)
}

void MsgQingErShowDown::InitAsDefaultInstance() {
}

MsgQingErShowDown::MsgQingErShowDown(const MsgQingErShowDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErShowDown)
}

void MsgQingErShowDown::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  money_ = GOOGLE_LONGLONG(0);
  hukind_ = 0u;
  hard_flower_ = 0u;
  mild_flower_ = 0u;
  baota_flower_ = 0u;
  hu_card_ = 0u;
  total_money_ = GOOGLE_LONGLONG(0);
  pack_score_ = GOOGLE_LONGLONG(0);
  total_pack_score_ = GOOGLE_LONGLONG(0);
  hu_role_ = false;
  hand_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErShowDown::~MsgQingErShowDown() {
  // @@protoc_insertion_point(destructor:MsgQingErShowDown)
  SharedDtor();
}

void MsgQingErShowDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErShowDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErShowDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErShowDown_descriptor_;
}

const MsgQingErShowDown& MsgQingErShowDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErShowDown* MsgQingErShowDown::default_instance_ = NULL;

MsgQingErShowDown* MsgQingErShowDown::New() const {
  return new MsgQingErShowDown;
}

void MsgQingErShowDown::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErShowDown*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 247) {
    ZR_(roleid_, money_);
    ZR_(hukind_, baota_flower_);
    hu_card_ = 0u;
  }
  if (_has_bits_[8 / 32] & 14080) {
    ZR_(total_money_, pack_score_);
    ZR_(hu_role_, total_pack_score_);
    hand_num_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  hand_card_.Clear();
  event_count_.Clear();
  hu_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErShowDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErShowDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 roleid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_money;
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (tag == 16) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hukind;
        break;
      }

      // optional uint32 hukind = 3;
      case 3: {
        if (tag == 24) {
         parse_hukind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hukind_)));
          set_has_hukind();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hand_card;
        break;
      }

      // repeated uint32 hand_card = 4;
      case 4: {
        if (tag == 32) {
         parse_hand_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_hand_card())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hand_card;
        if (input->ExpectTag(40)) goto parse_hard_flower;
        break;
      }

      // optional uint32 hard_flower = 5;
      case 5: {
        if (tag == 40) {
         parse_hard_flower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hard_flower_)));
          set_has_hard_flower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mild_flower;
        break;
      }

      // optional uint32 mild_flower = 6;
      case 6: {
        if (tag == 48) {
         parse_mild_flower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mild_flower_)));
          set_has_mild_flower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_baota_flower;
        break;
      }

      // optional uint32 baota_flower = 7;
      case 7: {
        if (tag == 56) {
         parse_baota_flower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baota_flower_)));
          set_has_baota_flower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_hu_card;
        break;
      }

      // optional uint32 hu_card = 8;
      case 8: {
        if (tag == 64) {
         parse_hu_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hu_card_)));
          set_has_hu_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_total_money;
        break;
      }

      // optional int64 total_money = 9;
      case 9: {
        if (tag == 72) {
         parse_total_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_money_)));
          set_has_total_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_pack_score;
        break;
      }

      // optional int64 pack_score = 10;
      case 10: {
        if (tag == 80) {
         parse_pack_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pack_score_)));
          set_has_pack_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_total_pack_score;
        break;
      }

      // optional int64 total_pack_score = 11;
      case 11: {
        if (tag == 88) {
         parse_total_pack_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_pack_score_)));
          set_has_total_pack_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_event_count;
        break;
      }

      // repeated .MsgQingErShowDownEvent event_count = 12;
      case 12: {
        if (tag == 98) {
         parse_event_count:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_event_count()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_event_count;
        if (input->ExpectTag(104)) goto parse_hu_role;
        break;
      }

      // optional bool hu_role = 13;
      case 13: {
        if (tag == 104) {
         parse_hu_role:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hu_role_)));
          set_has_hu_role();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_hand_num;
        break;
      }

      // optional uint32 hand_num = 14;
      case 14: {
        if (tag == 112) {
         parse_hand_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_num_)));
          set_has_hand_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_hu_list;
        break;
      }

      // repeated uint32 hu_list = 15;
      case 15: {
        if (tag == 120) {
         parse_hu_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 120, input, this->mutable_hu_list())));
        } else if (tag == 122) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hu_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_hu_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErShowDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErShowDown)
  return false;
#undef DO_
}

void MsgQingErShowDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErShowDown)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int64 money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  // optional uint32 hukind = 3;
  if (has_hukind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hukind(), output);
  }

  // repeated uint32 hand_card = 4;
  for (int i = 0; i < this->hand_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->hand_card(i), output);
  }

  // optional uint32 hard_flower = 5;
  if (has_hard_flower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hard_flower(), output);
  }

  // optional uint32 mild_flower = 6;
  if (has_mild_flower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mild_flower(), output);
  }

  // optional uint32 baota_flower = 7;
  if (has_baota_flower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->baota_flower(), output);
  }

  // optional uint32 hu_card = 8;
  if (has_hu_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->hu_card(), output);
  }

  // optional int64 total_money = 9;
  if (has_total_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->total_money(), output);
  }

  // optional int64 pack_score = 10;
  if (has_pack_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->pack_score(), output);
  }

  // optional int64 total_pack_score = 11;
  if (has_total_pack_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->total_pack_score(), output);
  }

  // repeated .MsgQingErShowDownEvent event_count = 12;
  for (int i = 0; i < this->event_count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->event_count(i), output);
  }

  // optional bool hu_role = 13;
  if (has_hu_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->hu_role(), output);
  }

  // optional uint32 hand_num = 14;
  if (has_hand_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->hand_num(), output);
  }

  // repeated uint32 hu_list = 15;
  for (int i = 0; i < this->hu_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      15, this->hu_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErShowDown)
}

::google::protobuf::uint8* MsgQingErShowDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErShowDown)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int64 money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  // optional uint32 hukind = 3;
  if (has_hukind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hukind(), target);
  }

  // repeated uint32 hand_card = 4;
  for (int i = 0; i < this->hand_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->hand_card(i), target);
  }

  // optional uint32 hard_flower = 5;
  if (has_hard_flower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hard_flower(), target);
  }

  // optional uint32 mild_flower = 6;
  if (has_mild_flower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mild_flower(), target);
  }

  // optional uint32 baota_flower = 7;
  if (has_baota_flower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->baota_flower(), target);
  }

  // optional uint32 hu_card = 8;
  if (has_hu_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->hu_card(), target);
  }

  // optional int64 total_money = 9;
  if (has_total_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->total_money(), target);
  }

  // optional int64 pack_score = 10;
  if (has_pack_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->pack_score(), target);
  }

  // optional int64 total_pack_score = 11;
  if (has_total_pack_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->total_pack_score(), target);
  }

  // repeated .MsgQingErShowDownEvent event_count = 12;
  for (int i = 0; i < this->event_count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->event_count(i), target);
  }

  // optional bool hu_role = 13;
  if (has_hu_role()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->hu_role(), target);
  }

  // optional uint32 hand_num = 14;
  if (has_hand_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->hand_num(), target);
  }

  // repeated uint32 hu_list = 15;
  for (int i = 0; i < this->hu_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(15, this->hu_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErShowDown)
  return target;
}

int MsgQingErShowDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional uint32 hukind = 3;
    if (has_hukind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hukind());
    }

    // optional uint32 hard_flower = 5;
    if (has_hard_flower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hard_flower());
    }

    // optional uint32 mild_flower = 6;
    if (has_mild_flower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mild_flower());
    }

    // optional uint32 baota_flower = 7;
    if (has_baota_flower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baota_flower());
    }

    // optional uint32 hu_card = 8;
    if (has_hu_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hu_card());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 total_money = 9;
    if (has_total_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total_money());
    }

    // optional int64 pack_score = 10;
    if (has_pack_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pack_score());
    }

    // optional int64 total_pack_score = 11;
    if (has_total_pack_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total_pack_score());
    }

    // optional bool hu_role = 13;
    if (has_hu_role()) {
      total_size += 1 + 1;
    }

    // optional uint32 hand_num = 14;
    if (has_hand_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hand_num());
    }

  }
  // repeated uint32 hand_card = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_card(i));
    }
    total_size += 1 * this->hand_card_size() + data_size;
  }

  // repeated .MsgQingErShowDownEvent event_count = 12;
  total_size += 1 * this->event_count_size();
  for (int i = 0; i < this->event_count_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->event_count(i));
  }

  // repeated uint32 hu_list = 15;
  {
    int data_size = 0;
    for (int i = 0; i < this->hu_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hu_list(i));
    }
    total_size += 1 * this->hu_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErShowDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErShowDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErShowDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErShowDown::MergeFrom(const MsgQingErShowDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  hand_card_.MergeFrom(from.hand_card_);
  event_count_.MergeFrom(from.event_count_);
  hu_list_.MergeFrom(from.hu_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_hukind()) {
      set_hukind(from.hukind());
    }
    if (from.has_hard_flower()) {
      set_hard_flower(from.hard_flower());
    }
    if (from.has_mild_flower()) {
      set_mild_flower(from.mild_flower());
    }
    if (from.has_baota_flower()) {
      set_baota_flower(from.baota_flower());
    }
    if (from.has_hu_card()) {
      set_hu_card(from.hu_card());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_total_money()) {
      set_total_money(from.total_money());
    }
    if (from.has_pack_score()) {
      set_pack_score(from.pack_score());
    }
    if (from.has_total_pack_score()) {
      set_total_pack_score(from.total_pack_score());
    }
    if (from.has_hu_role()) {
      set_hu_role(from.hu_role());
    }
    if (from.has_hand_num()) {
      set_hand_num(from.hand_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErShowDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErShowDown::CopyFrom(const MsgQingErShowDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErShowDown::IsInitialized() const {

  return true;
}

void MsgQingErShowDown::Swap(MsgQingErShowDown* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    std::swap(money_, other->money_);
    std::swap(hukind_, other->hukind_);
    hand_card_.Swap(&other->hand_card_);
    std::swap(hard_flower_, other->hard_flower_);
    std::swap(mild_flower_, other->mild_flower_);
    std::swap(baota_flower_, other->baota_flower_);
    std::swap(hu_card_, other->hu_card_);
    std::swap(total_money_, other->total_money_);
    std::swap(pack_score_, other->pack_score_);
    std::swap(total_pack_score_, other->total_pack_score_);
    event_count_.Swap(&other->event_count_);
    std::swap(hu_role_, other->hu_role_);
    std::swap(hand_num_, other->hand_num_);
    hu_list_.Swap(&other->hu_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErShowDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErShowDown_descriptor_;
  metadata.reflection = MsgQingErShowDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErShowDownEvent::kEventIdFieldNumber;
const int MsgQingErShowDownEvent::kCountFieldNumber;
const int MsgQingErShowDownEvent::kScoreFieldNumber;
const int MsgQingErShowDownEvent::kScoreCountFieldNumber;
#endif  // !_MSC_VER

MsgQingErShowDownEvent::MsgQingErShowDownEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErShowDownEvent)
}

void MsgQingErShowDownEvent::InitAsDefaultInstance() {
}

MsgQingErShowDownEvent::MsgQingErShowDownEvent(const MsgQingErShowDownEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErShowDownEvent)
}

void MsgQingErShowDownEvent::SharedCtor() {
  _cached_size_ = 0;
  event_id_ = 0u;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErShowDownEvent::~MsgQingErShowDownEvent() {
  // @@protoc_insertion_point(destructor:MsgQingErShowDownEvent)
  SharedDtor();
}

void MsgQingErShowDownEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErShowDownEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErShowDownEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErShowDownEvent_descriptor_;
}

const MsgQingErShowDownEvent& MsgQingErShowDownEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErShowDownEvent* MsgQingErShowDownEvent::default_instance_ = NULL;

MsgQingErShowDownEvent* MsgQingErShowDownEvent::New() const {
  return new MsgQingErShowDownEvent;
}

void MsgQingErShowDownEvent::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErShowDownEvent*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(event_id_, count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  score_.Clear();
  score_count_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErShowDownEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErShowDownEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 event_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_id_)));
          set_has_event_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_score;
        break;
      }

      // repeated int32 score = 3;
      case 3: {
        if (tag == 24) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_score())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_score())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_score;
        if (input->ExpectTag(32)) goto parse_score_count;
        break;
      }

      // repeated uint32 score_count = 4;
      case 4: {
        if (tag == 32) {
         parse_score_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_score_count())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_score_count())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_score_count;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErShowDownEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErShowDownEvent)
  return false;
#undef DO_
}

void MsgQingErShowDownEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErShowDownEvent)
  // optional uint32 event_id = 1;
  if (has_event_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->event_id(), output);
  }

  // optional uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated int32 score = 3;
  for (int i = 0; i < this->score_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->score(i), output);
  }

  // repeated uint32 score_count = 4;
  for (int i = 0; i < this->score_count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->score_count(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErShowDownEvent)
}

::google::protobuf::uint8* MsgQingErShowDownEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErShowDownEvent)
  // optional uint32 event_id = 1;
  if (has_event_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->event_id(), target);
  }

  // optional uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated int32 score = 3;
  for (int i = 0; i < this->score_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->score(i), target);
  }

  // repeated uint32 score_count = 4;
  for (int i = 0; i < this->score_count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->score_count(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErShowDownEvent)
  return target;
}

int MsgQingErShowDownEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 event_id = 1;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_id());
    }

    // optional uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  // repeated int32 score = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->score_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->score(i));
    }
    total_size += 1 * this->score_size() + data_size;
  }

  // repeated uint32 score_count = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->score_count_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->score_count(i));
    }
    total_size += 1 * this->score_count_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErShowDownEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErShowDownEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErShowDownEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErShowDownEvent::MergeFrom(const MsgQingErShowDownEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  score_.MergeFrom(from.score_);
  score_count_.MergeFrom(from.score_count_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_id()) {
      set_event_id(from.event_id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErShowDownEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErShowDownEvent::CopyFrom(const MsgQingErShowDownEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErShowDownEvent::IsInitialized() const {

  return true;
}

void MsgQingErShowDownEvent::Swap(MsgQingErShowDownEvent* other) {
  if (other != this) {
    std::swap(event_id_, other->event_id_);
    std::swap(count_, other->count_);
    score_.Swap(&other->score_);
    score_count_.Swap(&other->score_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErShowDownEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErShowDownEvent_descriptor_;
  metadata.reflection = MsgQingErShowDownEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErIntegralCount::kRoleidFieldNumber;
const int MsgQingErIntegralCount::kCountFieldNumber;
#endif  // !_MSC_VER

MsgQingErIntegralCount::MsgQingErIntegralCount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErIntegralCount)
}

void MsgQingErIntegralCount::InitAsDefaultInstance() {
}

MsgQingErIntegralCount::MsgQingErIntegralCount(const MsgQingErIntegralCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErIntegralCount)
}

void MsgQingErIntegralCount::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErIntegralCount::~MsgQingErIntegralCount() {
  // @@protoc_insertion_point(destructor:MsgQingErIntegralCount)
  SharedDtor();
}

void MsgQingErIntegralCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErIntegralCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErIntegralCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErIntegralCount_descriptor_;
}

const MsgQingErIntegralCount& MsgQingErIntegralCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErIntegralCount* MsgQingErIntegralCount::default_instance_ = NULL;

MsgQingErIntegralCount* MsgQingErIntegralCount::New() const {
  return new MsgQingErIntegralCount;
}

void MsgQingErIntegralCount::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErIntegralCount*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(roleid_, count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErIntegralCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErIntegralCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 roleid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErIntegralCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErIntegralCount)
  return false;
#undef DO_
}

void MsgQingErIntegralCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErIntegralCount)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErIntegralCount)
}

::google::protobuf::uint8* MsgQingErIntegralCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErIntegralCount)
  // optional uint64 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErIntegralCount)
  return target;
}

int MsgQingErIntegralCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

    // optional uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErIntegralCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErIntegralCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErIntegralCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErIntegralCount::MergeFrom(const MsgQingErIntegralCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErIntegralCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErIntegralCount::CopyFrom(const MsgQingErIntegralCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErIntegralCount::IsInitialized() const {

  return true;
}

void MsgQingErIntegralCount::Swap(MsgQingErIntegralCount* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErIntegralCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErIntegralCount_descriptor_;
  metadata.reflection = MsgQingErIntegralCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErStatisticsEvent::kEventIdFieldNumber;
const int MsgQingErStatisticsEvent::kCountFieldNumber;
#endif  // !_MSC_VER

MsgQingErStatisticsEvent::MsgQingErStatisticsEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErStatisticsEvent)
}

void MsgQingErStatisticsEvent::InitAsDefaultInstance() {
}

MsgQingErStatisticsEvent::MsgQingErStatisticsEvent(const MsgQingErStatisticsEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErStatisticsEvent)
}

void MsgQingErStatisticsEvent::SharedCtor() {
  _cached_size_ = 0;
  event_id_ = 1;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErStatisticsEvent::~MsgQingErStatisticsEvent() {
  // @@protoc_insertion_point(destructor:MsgQingErStatisticsEvent)
  SharedDtor();
}

void MsgQingErStatisticsEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErStatisticsEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErStatisticsEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErStatisticsEvent_descriptor_;
}

const MsgQingErStatisticsEvent& MsgQingErStatisticsEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErStatisticsEvent* MsgQingErStatisticsEvent::default_instance_ = NULL;

MsgQingErStatisticsEvent* MsgQingErStatisticsEvent::New() const {
  return new MsgQingErStatisticsEvent;
}

void MsgQingErStatisticsEvent::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    event_id_ = 1;
    count_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErStatisticsEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErStatisticsEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TQingErStatisticsEvent event_id = 2;
      case 2: {
        if (tag == 16) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TQingErStatisticsEvent_IsValid(value)) {
            set_event_id(static_cast< ::TQingErStatisticsEvent >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // optional uint32 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErStatisticsEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErStatisticsEvent)
  return false;
#undef DO_
}

void MsgQingErStatisticsEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErStatisticsEvent)
  // optional .TQingErStatisticsEvent event_id = 2;
  if (has_event_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->event_id(), output);
  }

  // optional uint32 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErStatisticsEvent)
}

::google::protobuf::uint8* MsgQingErStatisticsEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErStatisticsEvent)
  // optional .TQingErStatisticsEvent event_id = 2;
  if (has_event_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->event_id(), target);
  }

  // optional uint32 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErStatisticsEvent)
  return target;
}

int MsgQingErStatisticsEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .TQingErStatisticsEvent event_id = 2;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_id());
    }

    // optional uint32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErStatisticsEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErStatisticsEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErStatisticsEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErStatisticsEvent::MergeFrom(const MsgQingErStatisticsEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_id()) {
      set_event_id(from.event_id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErStatisticsEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErStatisticsEvent::CopyFrom(const MsgQingErStatisticsEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErStatisticsEvent::IsInitialized() const {

  return true;
}

void MsgQingErStatisticsEvent::Swap(MsgQingErStatisticsEvent* other) {
  if (other != this) {
    std::swap(event_id_, other->event_id_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErStatisticsEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErStatisticsEvent_descriptor_;
  metadata.reflection = MsgQingErStatisticsEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErStatisticsEventList::kRoelIdFieldNumber;
const int MsgQingErStatisticsEventList::kEventListFieldNumber;
#endif  // !_MSC_VER

MsgQingErStatisticsEventList::MsgQingErStatisticsEventList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErStatisticsEventList)
}

void MsgQingErStatisticsEventList::InitAsDefaultInstance() {
}

MsgQingErStatisticsEventList::MsgQingErStatisticsEventList(const MsgQingErStatisticsEventList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErStatisticsEventList)
}

void MsgQingErStatisticsEventList::SharedCtor() {
  _cached_size_ = 0;
  roel_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErStatisticsEventList::~MsgQingErStatisticsEventList() {
  // @@protoc_insertion_point(destructor:MsgQingErStatisticsEventList)
  SharedDtor();
}

void MsgQingErStatisticsEventList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErStatisticsEventList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErStatisticsEventList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErStatisticsEventList_descriptor_;
}

const MsgQingErStatisticsEventList& MsgQingErStatisticsEventList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErStatisticsEventList* MsgQingErStatisticsEventList::default_instance_ = NULL;

MsgQingErStatisticsEventList* MsgQingErStatisticsEventList::New() const {
  return new MsgQingErStatisticsEventList;
}

void MsgQingErStatisticsEventList::Clear() {
  roel_id_ = GOOGLE_ULONGLONG(0);
  event_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErStatisticsEventList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErStatisticsEventList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 roel_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roel_id_)));
          set_has_roel_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_event_list;
        break;
      }

      // repeated .MsgQingErStatisticsEvent event_list = 2;
      case 2: {
        if (tag == 18) {
         parse_event_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_event_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_event_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErStatisticsEventList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErStatisticsEventList)
  return false;
#undef DO_
}

void MsgQingErStatisticsEventList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErStatisticsEventList)
  // optional uint64 roel_id = 1;
  if (has_roel_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roel_id(), output);
  }

  // repeated .MsgQingErStatisticsEvent event_list = 2;
  for (int i = 0; i < this->event_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->event_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErStatisticsEventList)
}

::google::protobuf::uint8* MsgQingErStatisticsEventList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErStatisticsEventList)
  // optional uint64 roel_id = 1;
  if (has_roel_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roel_id(), target);
  }

  // repeated .MsgQingErStatisticsEvent event_list = 2;
  for (int i = 0; i < this->event_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->event_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErStatisticsEventList)
  return target;
}

int MsgQingErStatisticsEventList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 roel_id = 1;
    if (has_roel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roel_id());
    }

  }
  // repeated .MsgQingErStatisticsEvent event_list = 2;
  total_size += 1 * this->event_list_size();
  for (int i = 0; i < this->event_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->event_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErStatisticsEventList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErStatisticsEventList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErStatisticsEventList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErStatisticsEventList::MergeFrom(const MsgQingErStatisticsEventList& from) {
  GOOGLE_CHECK_NE(&from, this);
  event_list_.MergeFrom(from.event_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roel_id()) {
      set_roel_id(from.roel_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErStatisticsEventList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErStatisticsEventList::CopyFrom(const MsgQingErStatisticsEventList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErStatisticsEventList::IsInitialized() const {

  return true;
}

void MsgQingErStatisticsEventList::Swap(MsgQingErStatisticsEventList* other) {
  if (other != this) {
    std::swap(roel_id_, other->roel_id_);
    event_list_.Swap(&other->event_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErStatisticsEventList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErStatisticsEventList_descriptor_;
  metadata.reflection = MsgQingErStatisticsEventList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErShowDownCount::kShowdownListFieldNumber;
const int MsgQingErShowDownCount::kRoomStateFieldNumber;
const int MsgQingErShowDownCount::kGameCountFieldNumber;
const int MsgQingErShowDownCount::kGameOverFieldNumber;
const int MsgQingErShowDownCount::kOtherCardFieldNumber;
const int MsgQingErShowDownCount::kOtherCountFieldNumber;
const int MsgQingErShowDownCount::kTimeFieldNumber;
const int MsgQingErShowDownCount::kParam1FieldNumber;
const int MsgQingErShowDownCount::kHuStateFieldNumber;
const int MsgQingErShowDownCount::kIntegralListFieldNumber;
const int MsgQingErShowDownCount::kEventListFieldNumber;
#endif  // !_MSC_VER

MsgQingErShowDownCount::MsgQingErShowDownCount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErShowDownCount)
}

void MsgQingErShowDownCount::InitAsDefaultInstance() {
}

MsgQingErShowDownCount::MsgQingErShowDownCount(const MsgQingErShowDownCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErShowDownCount)
}

void MsgQingErShowDownCount::SharedCtor() {
  _cached_size_ = 0;
  room_state_ = 0;
  game_count_ = 0u;
  game_over_ = false;
  other_count_ = 0u;
  time_ = 0u;
  param1_ = 0u;
  hu_state_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErShowDownCount::~MsgQingErShowDownCount() {
  // @@protoc_insertion_point(destructor:MsgQingErShowDownCount)
  SharedDtor();
}

void MsgQingErShowDownCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErShowDownCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErShowDownCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErShowDownCount_descriptor_;
}

const MsgQingErShowDownCount& MsgQingErShowDownCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErShowDownCount* MsgQingErShowDownCount::default_instance_ = NULL;

MsgQingErShowDownCount* MsgQingErShowDownCount::New() const {
  return new MsgQingErShowDownCount;
}

void MsgQingErShowDownCount::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErShowDownCount*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 238) {
    ZR_(room_state_, game_count_);
    ZR_(game_over_, param1_);
  }
  hu_state_ = 0u;

#undef OFFSET_OF_FIELD_
#undef ZR_

  showdown_list_.Clear();
  other_card_.Clear();
  integral_list_.Clear();
  event_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErShowDownCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErShowDownCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgQingErShowDown showdown_list = 1;
      case 1: {
        if (tag == 10) {
         parse_showdown_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_showdown_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_showdown_list;
        if (input->ExpectTag(16)) goto parse_room_state;
        break;
      }

      // optional .TQingErState room_state = 2;
      case 2: {
        if (tag == 16) {
         parse_room_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TQingErState_IsValid(value)) {
            set_room_state(static_cast< ::TQingErState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_game_count;
        break;
      }

      // optional uint32 game_count = 3;
      case 3: {
        if (tag == 24) {
         parse_game_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_count_)));
          set_has_game_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_game_over;
        break;
      }

      // optional bool game_over = 4;
      case 4: {
        if (tag == 32) {
         parse_game_over:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &game_over_)));
          set_has_game_over();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_other_card;
        break;
      }

      // repeated uint32 other_card = 5;
      case 5: {
        if (tag == 40) {
         parse_other_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_other_card())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_other_card())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_other_card;
        if (input->ExpectTag(48)) goto parse_other_count;
        break;
      }

      // optional uint32 other_count = 6;
      case 6: {
        if (tag == 48) {
         parse_other_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &other_count_)));
          set_has_other_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_time;
        break;
      }

      // optional uint32 time = 7;
      case 7: {
        if (tag == 56) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_param1;
        break;
      }

      // optional uint32 param1 = 8;
      case 8: {
        if (tag == 64) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_hu_state;
        break;
      }

      // optional uint32 hu_state = 9;
      case 9: {
        if (tag == 72) {
         parse_hu_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hu_state_)));
          set_has_hu_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_integral_list;
        break;
      }

      // repeated .MsgQingErIntegralCount integral_list = 10;
      case 10: {
        if (tag == 82) {
         parse_integral_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_integral_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_integral_list;
        if (input->ExpectTag(90)) goto parse_event_list;
        break;
      }

      // repeated .MsgQingErStatisticsEventList event_list = 11;
      case 11: {
        if (tag == 90) {
         parse_event_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_event_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_event_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErShowDownCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErShowDownCount)
  return false;
#undef DO_
}

void MsgQingErShowDownCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErShowDownCount)
  // repeated .MsgQingErShowDown showdown_list = 1;
  for (int i = 0; i < this->showdown_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->showdown_list(i), output);
  }

  // optional .TQingErState room_state = 2;
  if (has_room_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->room_state(), output);
  }

  // optional uint32 game_count = 3;
  if (has_game_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_count(), output);
  }

  // optional bool game_over = 4;
  if (has_game_over()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->game_over(), output);
  }

  // repeated uint32 other_card = 5;
  for (int i = 0; i < this->other_card_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->other_card(i), output);
  }

  // optional uint32 other_count = 6;
  if (has_other_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->other_count(), output);
  }

  // optional uint32 time = 7;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->time(), output);
  }

  // optional uint32 param1 = 8;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->param1(), output);
  }

  // optional uint32 hu_state = 9;
  if (has_hu_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->hu_state(), output);
  }

  // repeated .MsgQingErIntegralCount integral_list = 10;
  for (int i = 0; i < this->integral_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->integral_list(i), output);
  }

  // repeated .MsgQingErStatisticsEventList event_list = 11;
  for (int i = 0; i < this->event_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->event_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErShowDownCount)
}

::google::protobuf::uint8* MsgQingErShowDownCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErShowDownCount)
  // repeated .MsgQingErShowDown showdown_list = 1;
  for (int i = 0; i < this->showdown_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->showdown_list(i), target);
  }

  // optional .TQingErState room_state = 2;
  if (has_room_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->room_state(), target);
  }

  // optional uint32 game_count = 3;
  if (has_game_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_count(), target);
  }

  // optional bool game_over = 4;
  if (has_game_over()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->game_over(), target);
  }

  // repeated uint32 other_card = 5;
  for (int i = 0; i < this->other_card_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->other_card(i), target);
  }

  // optional uint32 other_count = 6;
  if (has_other_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->other_count(), target);
  }

  // optional uint32 time = 7;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->time(), target);
  }

  // optional uint32 param1 = 8;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->param1(), target);
  }

  // optional uint32 hu_state = 9;
  if (has_hu_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->hu_state(), target);
  }

  // repeated .MsgQingErIntegralCount integral_list = 10;
  for (int i = 0; i < this->integral_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->integral_list(i), target);
  }

  // repeated .MsgQingErStatisticsEventList event_list = 11;
  for (int i = 0; i < this->event_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->event_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErShowDownCount)
  return target;
}

int MsgQingErShowDownCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .TQingErState room_state = 2;
    if (has_room_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_state());
    }

    // optional uint32 game_count = 3;
    if (has_game_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_count());
    }

    // optional bool game_over = 4;
    if (has_game_over()) {
      total_size += 1 + 1;
    }

    // optional uint32 other_count = 6;
    if (has_other_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->other_count());
    }

    // optional uint32 time = 7;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint32 param1 = 8;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 hu_state = 9;
    if (has_hu_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hu_state());
    }

  }
  // repeated .MsgQingErShowDown showdown_list = 1;
  total_size += 1 * this->showdown_list_size();
  for (int i = 0; i < this->showdown_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->showdown_list(i));
  }

  // repeated uint32 other_card = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->other_card_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->other_card(i));
    }
    total_size += 1 * this->other_card_size() + data_size;
  }

  // repeated .MsgQingErIntegralCount integral_list = 10;
  total_size += 1 * this->integral_list_size();
  for (int i = 0; i < this->integral_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->integral_list(i));
  }

  // repeated .MsgQingErStatisticsEventList event_list = 11;
  total_size += 1 * this->event_list_size();
  for (int i = 0; i < this->event_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->event_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErShowDownCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErShowDownCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErShowDownCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErShowDownCount::MergeFrom(const MsgQingErShowDownCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  showdown_list_.MergeFrom(from.showdown_list_);
  other_card_.MergeFrom(from.other_card_);
  integral_list_.MergeFrom(from.integral_list_);
  event_list_.MergeFrom(from.event_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_room_state()) {
      set_room_state(from.room_state());
    }
    if (from.has_game_count()) {
      set_game_count(from.game_count());
    }
    if (from.has_game_over()) {
      set_game_over(from.game_over());
    }
    if (from.has_other_count()) {
      set_other_count(from.other_count());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_hu_state()) {
      set_hu_state(from.hu_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErShowDownCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErShowDownCount::CopyFrom(const MsgQingErShowDownCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErShowDownCount::IsInitialized() const {

  return true;
}

void MsgQingErShowDownCount::Swap(MsgQingErShowDownCount* other) {
  if (other != this) {
    showdown_list_.Swap(&other->showdown_list_);
    std::swap(room_state_, other->room_state_);
    std::swap(game_count_, other->game_count_);
    std::swap(game_over_, other->game_over_);
    other_card_.Swap(&other->other_card_);
    std::swap(other_count_, other->other_count_);
    std::swap(time_, other->time_);
    std::swap(param1_, other->param1_);
    std::swap(hu_state_, other->hu_state_);
    integral_list_.Swap(&other->integral_list_);
    event_list_.Swap(&other->event_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErShowDownCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErShowDownCount_descriptor_;
  metadata.reflection = MsgQingErShowDownCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErRoleCathecticCount::kRoleIdFieldNumber;
const int MsgQingErRoleCathecticCount::kCathecticCountFieldNumber;
#endif  // !_MSC_VER

MsgQingErRoleCathecticCount::MsgQingErRoleCathecticCount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErRoleCathecticCount)
}

void MsgQingErRoleCathecticCount::InitAsDefaultInstance() {
}

MsgQingErRoleCathecticCount::MsgQingErRoleCathecticCount(const MsgQingErRoleCathecticCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErRoleCathecticCount)
}

void MsgQingErRoleCathecticCount::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_ULONGLONG(0);
  cathectic_count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErRoleCathecticCount::~MsgQingErRoleCathecticCount() {
  // @@protoc_insertion_point(destructor:MsgQingErRoleCathecticCount)
  SharedDtor();
}

void MsgQingErRoleCathecticCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErRoleCathecticCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErRoleCathecticCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErRoleCathecticCount_descriptor_;
}

const MsgQingErRoleCathecticCount& MsgQingErRoleCathecticCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErRoleCathecticCount* MsgQingErRoleCathecticCount::default_instance_ = NULL;

MsgQingErRoleCathecticCount* MsgQingErRoleCathecticCount::New() const {
  return new MsgQingErRoleCathecticCount;
}

void MsgQingErRoleCathecticCount::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErRoleCathecticCount*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(role_id_, cathectic_count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErRoleCathecticCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErRoleCathecticCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 role_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cathectic_count;
        break;
      }

      // optional uint32 cathectic_count = 2;
      case 2: {
        if (tag == 16) {
         parse_cathectic_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cathectic_count_)));
          set_has_cathectic_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErRoleCathecticCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErRoleCathecticCount)
  return false;
#undef DO_
}

void MsgQingErRoleCathecticCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErRoleCathecticCount)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->role_id(), output);
  }

  // optional uint32 cathectic_count = 2;
  if (has_cathectic_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cathectic_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErRoleCathecticCount)
}

::google::protobuf::uint8* MsgQingErRoleCathecticCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErRoleCathecticCount)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->role_id(), target);
  }

  // optional uint32 cathectic_count = 2;
  if (has_cathectic_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cathectic_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErRoleCathecticCount)
  return target;
}

int MsgQingErRoleCathecticCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->role_id());
    }

    // optional uint32 cathectic_count = 2;
    if (has_cathectic_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cathectic_count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErRoleCathecticCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErRoleCathecticCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErRoleCathecticCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErRoleCathecticCount::MergeFrom(const MsgQingErRoleCathecticCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_cathectic_count()) {
      set_cathectic_count(from.cathectic_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErRoleCathecticCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErRoleCathecticCount::CopyFrom(const MsgQingErRoleCathecticCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErRoleCathecticCount::IsInitialized() const {

  return true;
}

void MsgQingErRoleCathecticCount::Swap(MsgQingErRoleCathecticCount* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(cathectic_count_, other->cathectic_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErRoleCathecticCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErRoleCathecticCount_descriptor_;
  metadata.reflection = MsgQingErRoleCathecticCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErChaoZhuangInfo::kRoleIdFieldNumber;
const int MsgQingErChaoZhuangInfo::kChaozhuangValueFieldNumber;
#endif  // !_MSC_VER

MsgQingErChaoZhuangInfo::MsgQingErChaoZhuangInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErChaoZhuangInfo)
}

void MsgQingErChaoZhuangInfo::InitAsDefaultInstance() {
}

MsgQingErChaoZhuangInfo::MsgQingErChaoZhuangInfo(const MsgQingErChaoZhuangInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErChaoZhuangInfo)
}

void MsgQingErChaoZhuangInfo::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_ULONGLONG(0);
  chaozhuang_value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErChaoZhuangInfo::~MsgQingErChaoZhuangInfo() {
  // @@protoc_insertion_point(destructor:MsgQingErChaoZhuangInfo)
  SharedDtor();
}

void MsgQingErChaoZhuangInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErChaoZhuangInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErChaoZhuangInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErChaoZhuangInfo_descriptor_;
}

const MsgQingErChaoZhuangInfo& MsgQingErChaoZhuangInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErChaoZhuangInfo* MsgQingErChaoZhuangInfo::default_instance_ = NULL;

MsgQingErChaoZhuangInfo* MsgQingErChaoZhuangInfo::New() const {
  return new MsgQingErChaoZhuangInfo;
}

void MsgQingErChaoZhuangInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErChaoZhuangInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(role_id_, chaozhuang_value_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErChaoZhuangInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErChaoZhuangInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 role_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_chaozhuang_value;
        break;
      }

      // optional uint32 chaozhuang_value = 2;
      case 2: {
        if (tag == 16) {
         parse_chaozhuang_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chaozhuang_value_)));
          set_has_chaozhuang_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErChaoZhuangInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErChaoZhuangInfo)
  return false;
#undef DO_
}

void MsgQingErChaoZhuangInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErChaoZhuangInfo)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->role_id(), output);
  }

  // optional uint32 chaozhuang_value = 2;
  if (has_chaozhuang_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chaozhuang_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErChaoZhuangInfo)
}

::google::protobuf::uint8* MsgQingErChaoZhuangInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErChaoZhuangInfo)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->role_id(), target);
  }

  // optional uint32 chaozhuang_value = 2;
  if (has_chaozhuang_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chaozhuang_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErChaoZhuangInfo)
  return target;
}

int MsgQingErChaoZhuangInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->role_id());
    }

    // optional uint32 chaozhuang_value = 2;
    if (has_chaozhuang_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chaozhuang_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErChaoZhuangInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErChaoZhuangInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErChaoZhuangInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErChaoZhuangInfo::MergeFrom(const MsgQingErChaoZhuangInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_chaozhuang_value()) {
      set_chaozhuang_value(from.chaozhuang_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErChaoZhuangInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErChaoZhuangInfo::CopyFrom(const MsgQingErChaoZhuangInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErChaoZhuangInfo::IsInitialized() const {

  return true;
}

void MsgQingErChaoZhuangInfo::Swap(MsgQingErChaoZhuangInfo* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(chaozhuang_value_, other->chaozhuang_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErChaoZhuangInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErChaoZhuangInfo_descriptor_;
  metadata.reflection = MsgQingErChaoZhuangInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgQingErJianZhangInfo::kRoleIdFieldNumber;
const int MsgQingErJianZhangInfo::kJianzhangCardFieldNumber;
#endif  // !_MSC_VER

MsgQingErJianZhangInfo::MsgQingErJianZhangInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgQingErJianZhangInfo)
}

void MsgQingErJianZhangInfo::InitAsDefaultInstance() {
}

MsgQingErJianZhangInfo::MsgQingErJianZhangInfo(const MsgQingErJianZhangInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgQingErJianZhangInfo)
}

void MsgQingErJianZhangInfo::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_ULONGLONG(0);
  jianzhang_card_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgQingErJianZhangInfo::~MsgQingErJianZhangInfo() {
  // @@protoc_insertion_point(destructor:MsgQingErJianZhangInfo)
  SharedDtor();
}

void MsgQingErJianZhangInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgQingErJianZhangInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgQingErJianZhangInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgQingErJianZhangInfo_descriptor_;
}

const MsgQingErJianZhangInfo& MsgQingErJianZhangInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fqinger_2eproto();
  return *default_instance_;
}

MsgQingErJianZhangInfo* MsgQingErJianZhangInfo::default_instance_ = NULL;

MsgQingErJianZhangInfo* MsgQingErJianZhangInfo::New() const {
  return new MsgQingErJianZhangInfo;
}

void MsgQingErJianZhangInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgQingErJianZhangInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(role_id_, jianzhang_card_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgQingErJianZhangInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgQingErJianZhangInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 role_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_jianzhang_card;
        break;
      }

      // optional uint32 jianzhang_card = 2;
      case 2: {
        if (tag == 16) {
         parse_jianzhang_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jianzhang_card_)));
          set_has_jianzhang_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgQingErJianZhangInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgQingErJianZhangInfo)
  return false;
#undef DO_
}

void MsgQingErJianZhangInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgQingErJianZhangInfo)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->role_id(), output);
  }

  // optional uint32 jianzhang_card = 2;
  if (has_jianzhang_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->jianzhang_card(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgQingErJianZhangInfo)
}

::google::protobuf::uint8* MsgQingErJianZhangInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgQingErJianZhangInfo)
  // optional uint64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->role_id(), target);
  }

  // optional uint32 jianzhang_card = 2;
  if (has_jianzhang_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->jianzhang_card(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgQingErJianZhangInfo)
  return target;
}

int MsgQingErJianZhangInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->role_id());
    }

    // optional uint32 jianzhang_card = 2;
    if (has_jianzhang_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jianzhang_card());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgQingErJianZhangInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgQingErJianZhangInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgQingErJianZhangInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgQingErJianZhangInfo::MergeFrom(const MsgQingErJianZhangInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_jianzhang_card()) {
      set_jianzhang_card(from.jianzhang_card());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgQingErJianZhangInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQingErJianZhangInfo::CopyFrom(const MsgQingErJianZhangInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQingErJianZhangInfo::IsInitialized() const {

  return true;
}

void MsgQingErJianZhangInfo::Swap(MsgQingErJianZhangInfo* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(jianzhang_card_, other->jianzhang_card_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgQingErJianZhangInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgQingErJianZhangInfo_descriptor_;
  metadata.reflection = MsgQingErJianZhangInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
