// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_slots.proto

#ifndef PROTOBUF_msg_5fslots_2eproto__INCLUDED
#define PROTOBUF_msg_5fslots_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "public_pro.pb.h"
#include "define_pro.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5fslots_2eproto();
void protobuf_AssignDesc_msg_5fslots_2eproto();
void protobuf_ShutdownFile_msg_5fslots_2eproto();

class MsgCollectSymbol;
class MsgSlotsMachine;
class MsgCollectReward;
class MsgSlotsCollect;
class MsgSlotsPlayerInfo;
class MsgSlotsRoomInfo;
class MsgSlotsPull;
class MsgSlotsWheel;
class MsgWheelAttrib;
class MsgSlotsResult;
class MsgBonusGameRandomResult;
class MsgBonusGameSelectResult;
class MsgSlotsRoomFeatureCollect;

// ===================================================================

class MsgCollectSymbol : public ::google::protobuf::Message {
 public:
  MsgCollectSymbol();
  virtual ~MsgCollectSymbol();

  MsgCollectSymbol(const MsgCollectSymbol& from);

  inline MsgCollectSymbol& operator=(const MsgCollectSymbol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCollectSymbol& default_instance();

  void Swap(MsgCollectSymbol* other);

  // implements Message ----------------------------------------------

  MsgCollectSymbol* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCollectSymbol& from);
  void MergeFrom(const MsgCollectSymbol& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 symbol_id = 1;
  inline bool has_symbol_id() const;
  inline void clear_symbol_id();
  static const int kSymbolIdFieldNumber = 1;
  inline ::google::protobuf::uint32 symbol_id() const;
  inline void set_symbol_id(::google::protobuf::uint32 value);

  // optional uint32 need_num = 2;
  inline bool has_need_num() const;
  inline void clear_need_num();
  static const int kNeedNumFieldNumber = 2;
  inline ::google::protobuf::uint32 need_num() const;
  inline void set_need_num(::google::protobuf::uint32 value);

  // optional uint32 curr_num = 3;
  inline bool has_curr_num() const;
  inline void clear_curr_num();
  static const int kCurrNumFieldNumber = 3;
  inline ::google::protobuf::uint32 curr_num() const;
  inline void set_curr_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgCollectSymbol)
 private:
  inline void set_has_symbol_id();
  inline void clear_has_symbol_id();
  inline void set_has_need_num();
  inline void clear_has_need_num();
  inline void set_has_curr_num();
  inline void clear_has_curr_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 symbol_id_;
  ::google::protobuf::uint32 need_num_;
  ::google::protobuf::uint32 curr_num_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgCollectSymbol* default_instance_;
};
// -------------------------------------------------------------------

class MsgSlotsMachine : public ::google::protobuf::Message {
 public:
  MsgSlotsMachine();
  virtual ~MsgSlotsMachine();

  MsgSlotsMachine(const MsgSlotsMachine& from);

  inline MsgSlotsMachine& operator=(const MsgSlotsMachine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSlotsMachine& default_instance();

  void Swap(MsgSlotsMachine* other);

  // implements Message ----------------------------------------------

  MsgSlotsMachine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSlotsMachine& from);
  void MergeFrom(const MsgSlotsMachine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 machine_id = 1;
  inline bool has_machine_id() const;
  inline void clear_machine_id();
  static const int kMachineIdFieldNumber = 1;
  inline ::google::protobuf::uint64 machine_id() const;
  inline void set_machine_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 curr_collect_id = 3;
  inline bool has_curr_collect_id() const;
  inline void clear_curr_collect_id();
  static const int kCurrCollectIdFieldNumber = 3;
  inline ::google::protobuf::uint32 curr_collect_id() const;
  inline void set_curr_collect_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgSlotsMachine)
 private:
  inline void set_has_machine_id();
  inline void clear_has_machine_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_curr_collect_id();
  inline void clear_has_curr_collect_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 machine_id_;
  ::std::string* name_;
  ::google::protobuf::uint32 curr_collect_id_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgSlotsMachine* default_instance_;
};
// -------------------------------------------------------------------

class MsgCollectReward : public ::google::protobuf::Message {
 public:
  MsgCollectReward();
  virtual ~MsgCollectReward();

  MsgCollectReward(const MsgCollectReward& from);

  inline MsgCollectReward& operator=(const MsgCollectReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCollectReward& default_instance();

  void Swap(MsgCollectReward* other);

  // implements Message ----------------------------------------------

  MsgCollectReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCollectReward& from);
  void MergeFrom(const MsgCollectReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::uint64 pid() const;
  inline void set_pid(::google::protobuf::uint64 value);

  // optional uint64 collect_win = 2;
  inline bool has_collect_win() const;
  inline void clear_collect_win();
  static const int kCollectWinFieldNumber = 2;
  inline ::google::protobuf::uint64 collect_win() const;
  inline void set_collect_win(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MsgCollectReward)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_collect_win();
  inline void clear_has_collect_win();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 pid_;
  ::google::protobuf::uint64 collect_win_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgCollectReward* default_instance_;
};
// -------------------------------------------------------------------

class MsgSlotsCollect : public ::google::protobuf::Message {
 public:
  MsgSlotsCollect();
  virtual ~MsgSlotsCollect();

  MsgSlotsCollect(const MsgSlotsCollect& from);

  inline MsgSlotsCollect& operator=(const MsgSlotsCollect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSlotsCollect& default_instance();

  void Swap(MsgSlotsCollect* other);

  // implements Message ----------------------------------------------

  MsgSlotsCollect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSlotsCollect& from);
  void MergeFrom(const MsgSlotsCollect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgCollectReward collect_win = 1;
  inline int collect_win_size() const;
  inline void clear_collect_win();
  static const int kCollectWinFieldNumber = 1;
  inline const ::MsgCollectReward& collect_win(int index) const;
  inline ::MsgCollectReward* mutable_collect_win(int index);
  inline ::MsgCollectReward* add_collect_win();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgCollectReward >&
      collect_win() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgCollectReward >*
      mutable_collect_win();

  // repeated .MsgCollectSymbol collect_symbols = 2;
  inline int collect_symbols_size() const;
  inline void clear_collect_symbols();
  static const int kCollectSymbolsFieldNumber = 2;
  inline const ::MsgCollectSymbol& collect_symbols(int index) const;
  inline ::MsgCollectSymbol* mutable_collect_symbols(int index);
  inline ::MsgCollectSymbol* add_collect_symbols();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgCollectSymbol >&
      collect_symbols() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgCollectSymbol >*
      mutable_collect_symbols();

  // optional uint32 curr_collect_id = 3;
  inline bool has_curr_collect_id() const;
  inline void clear_curr_collect_id();
  static const int kCurrCollectIdFieldNumber = 3;
  inline ::google::protobuf::uint32 curr_collect_id() const;
  inline void set_curr_collect_id(::google::protobuf::uint32 value);

  // optional uint64 player_id = 4;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MsgSlotsCollect)
 private:
  inline void set_has_curr_collect_id();
  inline void clear_has_curr_collect_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgCollectReward > collect_win_;
  ::google::protobuf::RepeatedPtrField< ::MsgCollectSymbol > collect_symbols_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 curr_collect_id_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgSlotsCollect* default_instance_;
};
// -------------------------------------------------------------------

class MsgSlotsPlayerInfo : public ::google::protobuf::Message {
 public:
  MsgSlotsPlayerInfo();
  virtual ~MsgSlotsPlayerInfo();

  MsgSlotsPlayerInfo(const MsgSlotsPlayerInfo& from);

  inline MsgSlotsPlayerInfo& operator=(const MsgSlotsPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSlotsPlayerInfo& default_instance();

  void Swap(MsgSlotsPlayerInfo* other);

  // implements Message ----------------------------------------------

  MsgSlotsPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSlotsPlayerInfo& from);
  void MergeFrom(const MsgSlotsPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPlayerInfo player_base = 1;
  inline bool has_player_base() const;
  inline void clear_player_base();
  static const int kPlayerBaseFieldNumber = 1;
  inline const ::MsgPlayerInfo& player_base() const;
  inline ::MsgPlayerInfo* mutable_player_base();
  inline ::MsgPlayerInfo* release_player_base();
  inline void set_allocated_player_base(::MsgPlayerInfo* player_base);

  // @@protoc_insertion_point(class_scope:MsgSlotsPlayerInfo)
 private:
  inline void set_has_player_base();
  inline void clear_has_player_base();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgPlayerInfo* player_base_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgSlotsPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgSlotsRoomInfo : public ::google::protobuf::Message {
 public:
  MsgSlotsRoomInfo();
  virtual ~MsgSlotsRoomInfo();

  MsgSlotsRoomInfo(const MsgSlotsRoomInfo& from);

  inline MsgSlotsRoomInfo& operator=(const MsgSlotsRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSlotsRoomInfo& default_instance();

  void Swap(MsgSlotsRoomInfo* other);

  // implements Message ----------------------------------------------

  MsgSlotsRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSlotsRoomInfo& from);
  void MergeFrom(const MsgSlotsRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgSlotsPlayerInfo player_list = 1;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 1;
  inline const ::MsgSlotsPlayerInfo& player_list(int index) const;
  inline ::MsgSlotsPlayerInfo* mutable_player_list(int index);
  inline ::MsgSlotsPlayerInfo* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsPlayerInfo >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsPlayerInfo >*
      mutable_player_list();

  // repeated uint64 seats = 2;
  inline int seats_size() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 2;
  inline ::google::protobuf::uint64 seats(int index) const;
  inline void set_seats(int index, ::google::protobuf::uint64 value);
  inline void add_seats(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      seats() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_seats();

  // repeated .MsgSlotsMachine slots_machines = 3;
  inline int slots_machines_size() const;
  inline void clear_slots_machines();
  static const int kSlotsMachinesFieldNumber = 3;
  inline const ::MsgSlotsMachine& slots_machines(int index) const;
  inline ::MsgSlotsMachine* mutable_slots_machines(int index);
  inline ::MsgSlotsMachine* add_slots_machines();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsMachine >&
      slots_machines() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsMachine >*
      mutable_slots_machines();

  // optional uint64 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint64 room_id() const;
  inline void set_room_id(::google::protobuf::uint64 value);

  // optional .MsgBaseRoomInfo room_info = 5;
  inline bool has_room_info() const;
  inline void clear_room_info();
  static const int kRoomInfoFieldNumber = 5;
  inline const ::MsgBaseRoomInfo& room_info() const;
  inline ::MsgBaseRoomInfo* mutable_room_info();
  inline ::MsgBaseRoomInfo* release_room_info();
  inline void set_allocated_room_info(::MsgBaseRoomInfo* room_info);

  // repeated .MsgSlotsCollect room_collect_info = 6;
  inline int room_collect_info_size() const;
  inline void clear_room_collect_info();
  static const int kRoomCollectInfoFieldNumber = 6;
  inline const ::MsgSlotsCollect& room_collect_info(int index) const;
  inline ::MsgSlotsCollect* mutable_room_collect_info(int index);
  inline ::MsgSlotsCollect* add_room_collect_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect >&
      room_collect_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect >*
      mutable_room_collect_info();

  // @@protoc_insertion_point(class_scope:MsgSlotsRoomInfo)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_room_info();
  inline void clear_has_room_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgSlotsPlayerInfo > player_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > seats_;
  ::google::protobuf::RepeatedPtrField< ::MsgSlotsMachine > slots_machines_;
  ::google::protobuf::uint64 room_id_;
  ::MsgBaseRoomInfo* room_info_;
  ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect > room_collect_info_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgSlotsRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgSlotsPull : public ::google::protobuf::Message {
 public:
  MsgSlotsPull();
  virtual ~MsgSlotsPull();

  MsgSlotsPull(const MsgSlotsPull& from);

  inline MsgSlotsPull& operator=(const MsgSlotsPull& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSlotsPull& default_instance();

  void Swap(MsgSlotsPull* other);

  // implements Message ----------------------------------------------

  MsgSlotsPull* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSlotsPull& from);
  void MergeFrom(const MsgSlotsPull& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 bet = 1;
  inline bool has_bet() const;
  inline void clear_bet();
  static const int kBetFieldNumber = 1;
  inline ::google::protobuf::uint64 bet() const;
  inline void set_bet(::google::protobuf::uint64 value);

  // optional uint32 lines = 2;
  inline bool has_lines() const;
  inline void clear_lines();
  static const int kLinesFieldNumber = 2;
  inline ::google::protobuf::uint32 lines() const;
  inline void set_lines(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgSlotsPull)
 private:
  inline void set_has_bet();
  inline void clear_has_bet();
  inline void set_has_lines();
  inline void clear_has_lines();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 bet_;
  ::google::protobuf::uint32 lines_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgSlotsPull* default_instance_;
};
// -------------------------------------------------------------------

class MsgSlotsWheel : public ::google::protobuf::Message {
 public:
  MsgSlotsWheel();
  virtual ~MsgSlotsWheel();

  MsgSlotsWheel(const MsgSlotsWheel& from);

  inline MsgSlotsWheel& operator=(const MsgSlotsWheel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSlotsWheel& default_instance();

  void Swap(MsgSlotsWheel* other);

  // implements Message ----------------------------------------------

  MsgSlotsWheel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSlotsWheel& from);
  void MergeFrom(const MsgSlotsWheel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 icons = 1;
  inline int icons_size() const;
  inline void clear_icons();
  static const int kIconsFieldNumber = 1;
  inline ::google::protobuf::uint32 icons(int index) const;
  inline void set_icons(int index, ::google::protobuf::uint32 value);
  inline void add_icons(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      icons() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_icons();

  // @@protoc_insertion_point(class_scope:MsgSlotsWheel)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > icons_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgSlotsWheel* default_instance_;
};
// -------------------------------------------------------------------

class MsgWheelAttrib : public ::google::protobuf::Message {
 public:
  MsgWheelAttrib();
  virtual ~MsgWheelAttrib();

  MsgWheelAttrib(const MsgWheelAttrib& from);

  inline MsgWheelAttrib& operator=(const MsgWheelAttrib& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgWheelAttrib& default_instance();

  void Swap(MsgWheelAttrib* other);

  // implements Message ----------------------------------------------

  MsgWheelAttrib* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgWheelAttrib& from);
  void MergeFrom(const MsgWheelAttrib& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // optional uint32 s_src = 2;
  inline bool has_s_src() const;
  inline void clear_s_src();
  static const int kSSrcFieldNumber = 2;
  inline ::google::protobuf::uint32 s_src() const;
  inline void set_s_src(::google::protobuf::uint32 value);

  // optional uint32 s_dec = 3;
  inline bool has_s_dec() const;
  inline void clear_s_dec();
  static const int kSDecFieldNumber = 3;
  inline ::google::protobuf::uint32 s_dec() const;
  inline void set_s_dec(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgWheelAttrib)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_s_src();
  inline void clear_has_s_src();
  inline void set_has_s_dec();
  inline void clear_has_s_dec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 idx_;
  ::google::protobuf::uint32 s_src_;
  ::google::protobuf::uint32 s_dec_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgWheelAttrib* default_instance_;
};
// -------------------------------------------------------------------

class MsgSlotsResult : public ::google::protobuf::Message {
 public:
  MsgSlotsResult();
  virtual ~MsgSlotsResult();

  MsgSlotsResult(const MsgSlotsResult& from);

  inline MsgSlotsResult& operator=(const MsgSlotsResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSlotsResult& default_instance();

  void Swap(MsgSlotsResult* other);

  // implements Message ----------------------------------------------

  MsgSlotsResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSlotsResult& from);
  void MergeFrom(const MsgSlotsResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::uint64 pid() const;
  inline void set_pid(::google::protobuf::uint64 value);

  // optional uint64 total_coins = 2;
  inline bool has_total_coins() const;
  inline void clear_total_coins();
  static const int kTotalCoinsFieldNumber = 2;
  inline ::google::protobuf::uint64 total_coins() const;
  inline void set_total_coins(::google::protobuf::uint64 value);

  // optional uint64 win_coins = 3;
  inline bool has_win_coins() const;
  inline void clear_win_coins();
  static const int kWinCoinsFieldNumber = 3;
  inline ::google::protobuf::uint64 win_coins() const;
  inline void set_win_coins(::google::protobuf::uint64 value);

  // optional uint32 win_bet = 4;
  inline bool has_win_bet() const;
  inline void clear_win_bet();
  static const int kWinBetFieldNumber = 4;
  inline ::google::protobuf::uint32 win_bet() const;
  inline void set_win_bet(::google::protobuf::uint32 value);

  // optional uint32 free_count = 5;
  inline bool has_free_count() const;
  inline void clear_free_count();
  static const int kFreeCountFieldNumber = 5;
  inline ::google::protobuf::uint32 free_count() const;
  inline void set_free_count(::google::protobuf::uint32 value);

  // repeated .MsgSlotsWheel wheels = 6;
  inline int wheels_size() const;
  inline void clear_wheels();
  static const int kWheelsFieldNumber = 6;
  inline const ::MsgSlotsWheel& wheels(int index) const;
  inline ::MsgSlotsWheel* mutable_wheels(int index);
  inline ::MsgSlotsWheel* add_wheels();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsWheel >&
      wheels() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsWheel >*
      mutable_wheels();

  // repeated uint32 wheel_idx = 7;
  inline int wheel_idx_size() const;
  inline void clear_wheel_idx();
  static const int kWheelIdxFieldNumber = 7;
  inline ::google::protobuf::uint32 wheel_idx(int index) const;
  inline void set_wheel_idx(int index, ::google::protobuf::uint32 value);
  inline void add_wheel_idx(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wheel_idx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wheel_idx();

  // optional string bonus_name = 8;
  inline bool has_bonus_name() const;
  inline void clear_bonus_name();
  static const int kBonusNameFieldNumber = 8;
  inline const ::std::string& bonus_name() const;
  inline void set_bonus_name(const ::std::string& value);
  inline void set_bonus_name(const char* value);
  inline void set_bonus_name(const char* value, size_t size);
  inline ::std::string* mutable_bonus_name();
  inline ::std::string* release_bonus_name();
  inline void set_allocated_bonus_name(::std::string* bonus_name);

  // optional sint32 bonus_icon_num = 9;
  inline bool has_bonus_icon_num() const;
  inline void clear_bonus_icon_num();
  static const int kBonusIconNumFieldNumber = 9;
  inline ::google::protobuf::int32 bonus_icon_num() const;
  inline void set_bonus_icon_num(::google::protobuf::int32 value);

  // optional bool win_free_spins = 10;
  inline bool has_win_free_spins() const;
  inline void clear_win_free_spins();
  static const int kWinFreeSpinsFieldNumber = 10;
  inline bool win_free_spins() const;
  inline void set_win_free_spins(bool value);

  // optional .EnumSlotsWinType win_type = 11;
  inline bool has_win_type() const;
  inline void clear_win_type();
  static const int kWinTypeFieldNumber = 11;
  inline ::EnumSlotsWinType win_type() const;
  inline void set_win_type(::EnumSlotsWinType value);

  // repeated .MsgVector random_wilds = 12;
  inline int random_wilds_size() const;
  inline void clear_random_wilds();
  static const int kRandomWildsFieldNumber = 12;
  inline const ::MsgVector& random_wilds(int index) const;
  inline ::MsgVector* mutable_random_wilds(int index);
  inline ::MsgVector* add_random_wilds();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgVector >&
      random_wilds() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgVector >*
      mutable_random_wilds();

  // repeated uint32 fill_all_wilds = 13;
  inline int fill_all_wilds_size() const;
  inline void clear_fill_all_wilds();
  static const int kFillAllWildsFieldNumber = 13;
  inline ::google::protobuf::uint32 fill_all_wilds(int index) const;
  inline void set_fill_all_wilds(int index, ::google::protobuf::uint32 value);
  inline void add_fill_all_wilds(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fill_all_wilds() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fill_all_wilds();

  // repeated uint32 splas_wilds = 14;
  inline int splas_wilds_size() const;
  inline void clear_splas_wilds();
  static const int kSplasWildsFieldNumber = 14;
  inline ::google::protobuf::uint32 splas_wilds(int index) const;
  inline void set_splas_wilds(int index, ::google::protobuf::uint32 value);
  inline void add_splas_wilds(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      splas_wilds() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_splas_wilds();

  // repeated .MsgWheelAttrib s_change = 15;
  inline int s_change_size() const;
  inline void clear_s_change();
  static const int kSChangeFieldNumber = 15;
  inline const ::MsgWheelAttrib& s_change(int index) const;
  inline ::MsgWheelAttrib* mutable_s_change(int index);
  inline ::MsgWheelAttrib* add_s_change();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgWheelAttrib >&
      s_change() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgWheelAttrib >*
      mutable_s_change();

  // optional uint64 collect_score = 16;
  inline bool has_collect_score() const;
  inline void clear_collect_score();
  static const int kCollectScoreFieldNumber = 16;
  inline ::google::protobuf::uint64 collect_score() const;
  inline void set_collect_score(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MsgSlotsResult)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_total_coins();
  inline void clear_has_total_coins();
  inline void set_has_win_coins();
  inline void clear_has_win_coins();
  inline void set_has_win_bet();
  inline void clear_has_win_bet();
  inline void set_has_free_count();
  inline void clear_has_free_count();
  inline void set_has_bonus_name();
  inline void clear_has_bonus_name();
  inline void set_has_bonus_icon_num();
  inline void clear_has_bonus_icon_num();
  inline void set_has_win_free_spins();
  inline void clear_has_win_free_spins();
  inline void set_has_win_type();
  inline void clear_has_win_type();
  inline void set_has_collect_score();
  inline void clear_has_collect_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 pid_;
  ::google::protobuf::uint64 total_coins_;
  ::google::protobuf::uint64 win_coins_;
  ::google::protobuf::uint32 win_bet_;
  ::google::protobuf::uint32 free_count_;
  ::google::protobuf::RepeatedPtrField< ::MsgSlotsWheel > wheels_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wheel_idx_;
  ::std::string* bonus_name_;
  ::google::protobuf::int32 bonus_icon_num_;
  bool win_free_spins_;
  ::google::protobuf::RepeatedPtrField< ::MsgVector > random_wilds_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fill_all_wilds_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > splas_wilds_;
  ::google::protobuf::RepeatedPtrField< ::MsgWheelAttrib > s_change_;
  ::google::protobuf::uint64 collect_score_;
  int win_type_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgSlotsResult* default_instance_;
};
// -------------------------------------------------------------------

class MsgBonusGameRandomResult : public ::google::protobuf::Message {
 public:
  MsgBonusGameRandomResult();
  virtual ~MsgBonusGameRandomResult();

  MsgBonusGameRandomResult(const MsgBonusGameRandomResult& from);

  inline MsgBonusGameRandomResult& operator=(const MsgBonusGameRandomResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBonusGameRandomResult& default_instance();

  void Swap(MsgBonusGameRandomResult* other);

  // implements Message ----------------------------------------------

  MsgBonusGameRandomResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgBonusGameRandomResult& from);
  void MergeFrom(const MsgBonusGameRandomResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string rnd_name = 1;
  inline bool has_rnd_name() const;
  inline void clear_rnd_name();
  static const int kRndNameFieldNumber = 1;
  inline const ::std::string& rnd_name() const;
  inline void set_rnd_name(const ::std::string& value);
  inline void set_rnd_name(const char* value);
  inline void set_rnd_name(const char* value, size_t size);
  inline ::std::string* mutable_rnd_name();
  inline ::std::string* release_rnd_name();
  inline void set_allocated_rnd_name(::std::string* rnd_name);

  // optional sint32 win_credits = 2;
  inline bool has_win_credits() const;
  inline void clear_win_credits();
  static const int kWinCreditsFieldNumber = 2;
  inline ::google::protobuf::int32 win_credits() const;
  inline void set_win_credits(::google::protobuf::int32 value);

  // optional sint32 win_multiplier = 3;
  inline bool has_win_multiplier() const;
  inline void clear_win_multiplier();
  static const int kWinMultiplierFieldNumber = 3;
  inline ::google::protobuf::int32 win_multiplier() const;
  inline void set_win_multiplier(::google::protobuf::int32 value);

  // optional sint32 win_free_spins = 4;
  inline bool has_win_free_spins() const;
  inline void clear_win_free_spins();
  static const int kWinFreeSpinsFieldNumber = 4;
  inline ::google::protobuf::int32 win_free_spins() const;
  inline void set_win_free_spins(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgBonusGameRandomResult)
 private:
  inline void set_has_rnd_name();
  inline void clear_has_rnd_name();
  inline void set_has_win_credits();
  inline void clear_has_win_credits();
  inline void set_has_win_multiplier();
  inline void clear_has_win_multiplier();
  inline void set_has_win_free_spins();
  inline void clear_has_win_free_spins();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* rnd_name_;
  ::google::protobuf::int32 win_credits_;
  ::google::protobuf::int32 win_multiplier_;
  ::google::protobuf::int32 win_free_spins_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgBonusGameRandomResult* default_instance_;
};
// -------------------------------------------------------------------

class MsgBonusGameSelectResult : public ::google::protobuf::Message {
 public:
  MsgBonusGameSelectResult();
  virtual ~MsgBonusGameSelectResult();

  MsgBonusGameSelectResult(const MsgBonusGameSelectResult& from);

  inline MsgBonusGameSelectResult& operator=(const MsgBonusGameSelectResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBonusGameSelectResult& default_instance();

  void Swap(MsgBonusGameSelectResult* other);

  // implements Message ----------------------------------------------

  MsgBonusGameSelectResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgBonusGameSelectResult& from);
  void MergeFrom(const MsgBonusGameSelectResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_end = 1;
  inline bool has_is_end() const;
  inline void clear_is_end();
  static const int kIsEndFieldNumber = 1;
  inline bool is_end() const;
  inline void set_is_end(bool value);

  // optional uint32 select_surplus_count = 2;
  inline bool has_select_surplus_count() const;
  inline void clear_select_surplus_count();
  static const int kSelectSurplusCountFieldNumber = 2;
  inline ::google::protobuf::uint32 select_surplus_count() const;
  inline void set_select_surplus_count(::google::protobuf::uint32 value);

  // optional uint64 total_money = 3;
  inline bool has_total_money() const;
  inline void clear_total_money();
  static const int kTotalMoneyFieldNumber = 3;
  inline ::google::protobuf::uint64 total_money() const;
  inline void set_total_money(::google::protobuf::uint64 value);

  // optional uint64 curr_money = 4;
  inline bool has_curr_money() const;
  inline void clear_curr_money();
  static const int kCurrMoneyFieldNumber = 4;
  inline ::google::protobuf::uint64 curr_money() const;
  inline void set_curr_money(::google::protobuf::uint64 value);

  // optional .EnumSlotsWinType win_type = 5;
  inline bool has_win_type() const;
  inline void clear_win_type();
  static const int kWinTypeFieldNumber = 5;
  inline ::EnumSlotsWinType win_type() const;
  inline void set_win_type(::EnumSlotsWinType value);

  // optional uint64 pid = 6;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 6;
  inline ::google::protobuf::uint64 pid() const;
  inline void set_pid(::google::protobuf::uint64 value);

  // repeated .MsgBonusGameRandomResult random_results = 7;
  inline int random_results_size() const;
  inline void clear_random_results();
  static const int kRandomResultsFieldNumber = 7;
  inline const ::MsgBonusGameRandomResult& random_results(int index) const;
  inline ::MsgBonusGameRandomResult* mutable_random_results(int index);
  inline ::MsgBonusGameRandomResult* add_random_results();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult >&
      random_results() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult >*
      mutable_random_results();

  // optional uint32 free_spins = 8;
  inline bool has_free_spins() const;
  inline void clear_free_spins();
  static const int kFreeSpinsFieldNumber = 8;
  inline ::google::protobuf::uint32 free_spins() const;
  inline void set_free_spins(::google::protobuf::uint32 value);

  // optional uint32 win_free_spins = 9;
  inline bool has_win_free_spins() const;
  inline void clear_win_free_spins();
  static const int kWinFreeSpinsFieldNumber = 9;
  inline ::google::protobuf::uint32 win_free_spins() const;
  inline void set_win_free_spins(::google::protobuf::uint32 value);

  // repeated .MsgBonusGameRandomResult surplus_randoms = 10;
  inline int surplus_randoms_size() const;
  inline void clear_surplus_randoms();
  static const int kSurplusRandomsFieldNumber = 10;
  inline const ::MsgBonusGameRandomResult& surplus_randoms(int index) const;
  inline ::MsgBonusGameRandomResult* mutable_surplus_randoms(int index);
  inline ::MsgBonusGameRandomResult* add_surplus_randoms();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult >&
      surplus_randoms() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult >*
      mutable_surplus_randoms();

  // optional uint32 surplus_select_count = 11;
  inline bool has_surplus_select_count() const;
  inline void clear_surplus_select_count();
  static const int kSurplusSelectCountFieldNumber = 11;
  inline ::google::protobuf::uint32 surplus_select_count() const;
  inline void set_surplus_select_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgBonusGameSelectResult)
 private:
  inline void set_has_is_end();
  inline void clear_has_is_end();
  inline void set_has_select_surplus_count();
  inline void clear_has_select_surplus_count();
  inline void set_has_total_money();
  inline void clear_has_total_money();
  inline void set_has_curr_money();
  inline void clear_has_curr_money();
  inline void set_has_win_type();
  inline void clear_has_win_type();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_free_spins();
  inline void clear_has_free_spins();
  inline void set_has_win_free_spins();
  inline void clear_has_win_free_spins();
  inline void set_has_surplus_select_count();
  inline void clear_has_surplus_select_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool is_end_;
  ::google::protobuf::uint32 select_surplus_count_;
  ::google::protobuf::uint64 total_money_;
  ::google::protobuf::uint64 curr_money_;
  ::google::protobuf::uint64 pid_;
  int win_type_;
  ::google::protobuf::uint32 free_spins_;
  ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult > random_results_;
  ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult > surplus_randoms_;
  ::google::protobuf::uint32 win_free_spins_;
  ::google::protobuf::uint32 surplus_select_count_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgBonusGameSelectResult* default_instance_;
};
// -------------------------------------------------------------------

class MsgSlotsRoomFeatureCollect : public ::google::protobuf::Message {
 public:
  MsgSlotsRoomFeatureCollect();
  virtual ~MsgSlotsRoomFeatureCollect();

  MsgSlotsRoomFeatureCollect(const MsgSlotsRoomFeatureCollect& from);

  inline MsgSlotsRoomFeatureCollect& operator=(const MsgSlotsRoomFeatureCollect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSlotsRoomFeatureCollect& default_instance();

  void Swap(MsgSlotsRoomFeatureCollect* other);

  // implements Message ----------------------------------------------

  MsgSlotsRoomFeatureCollect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSlotsRoomFeatureCollect& from);
  void MergeFrom(const MsgSlotsRoomFeatureCollect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string room_type = 1;
  inline bool has_room_type() const;
  inline void clear_room_type();
  static const int kRoomTypeFieldNumber = 1;
  inline const ::std::string& room_type() const;
  inline void set_room_type(const ::std::string& value);
  inline void set_room_type(const char* value);
  inline void set_room_type(const char* value, size_t size);
  inline ::std::string* mutable_room_type();
  inline ::std::string* release_room_type();
  inline void set_allocated_room_type(::std::string* room_type);

  // repeated .MsgSlotsCollect collect_mission = 2;
  inline int collect_mission_size() const;
  inline void clear_collect_mission();
  static const int kCollectMissionFieldNumber = 2;
  inline const ::MsgSlotsCollect& collect_mission(int index) const;
  inline ::MsgSlotsCollect* mutable_collect_mission(int index);
  inline ::MsgSlotsCollect* add_collect_mission();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect >&
      collect_mission() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect >*
      mutable_collect_mission();

  // @@protoc_insertion_point(class_scope:MsgSlotsRoomFeatureCollect)
 private:
  inline void set_has_room_type();
  inline void clear_has_room_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* room_type_;
  ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect > collect_mission_;
  friend void  protobuf_AddDesc_msg_5fslots_2eproto();
  friend void protobuf_AssignDesc_msg_5fslots_2eproto();
  friend void protobuf_ShutdownFile_msg_5fslots_2eproto();

  void InitAsDefaultInstance();
  static MsgSlotsRoomFeatureCollect* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgCollectSymbol

// optional uint32 symbol_id = 1;
inline bool MsgCollectSymbol::has_symbol_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCollectSymbol::set_has_symbol_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCollectSymbol::clear_has_symbol_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCollectSymbol::clear_symbol_id() {
  symbol_id_ = 0u;
  clear_has_symbol_id();
}
inline ::google::protobuf::uint32 MsgCollectSymbol::symbol_id() const {
  // @@protoc_insertion_point(field_get:MsgCollectSymbol.symbol_id)
  return symbol_id_;
}
inline void MsgCollectSymbol::set_symbol_id(::google::protobuf::uint32 value) {
  set_has_symbol_id();
  symbol_id_ = value;
  // @@protoc_insertion_point(field_set:MsgCollectSymbol.symbol_id)
}

// optional uint32 need_num = 2;
inline bool MsgCollectSymbol::has_need_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCollectSymbol::set_has_need_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCollectSymbol::clear_has_need_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCollectSymbol::clear_need_num() {
  need_num_ = 0u;
  clear_has_need_num();
}
inline ::google::protobuf::uint32 MsgCollectSymbol::need_num() const {
  // @@protoc_insertion_point(field_get:MsgCollectSymbol.need_num)
  return need_num_;
}
inline void MsgCollectSymbol::set_need_num(::google::protobuf::uint32 value) {
  set_has_need_num();
  need_num_ = value;
  // @@protoc_insertion_point(field_set:MsgCollectSymbol.need_num)
}

// optional uint32 curr_num = 3;
inline bool MsgCollectSymbol::has_curr_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgCollectSymbol::set_has_curr_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgCollectSymbol::clear_has_curr_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgCollectSymbol::clear_curr_num() {
  curr_num_ = 0u;
  clear_has_curr_num();
}
inline ::google::protobuf::uint32 MsgCollectSymbol::curr_num() const {
  // @@protoc_insertion_point(field_get:MsgCollectSymbol.curr_num)
  return curr_num_;
}
inline void MsgCollectSymbol::set_curr_num(::google::protobuf::uint32 value) {
  set_has_curr_num();
  curr_num_ = value;
  // @@protoc_insertion_point(field_set:MsgCollectSymbol.curr_num)
}

// -------------------------------------------------------------------

// MsgSlotsMachine

// optional uint64 machine_id = 1;
inline bool MsgSlotsMachine::has_machine_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSlotsMachine::set_has_machine_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSlotsMachine::clear_has_machine_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSlotsMachine::clear_machine_id() {
  machine_id_ = GOOGLE_ULONGLONG(0);
  clear_has_machine_id();
}
inline ::google::protobuf::uint64 MsgSlotsMachine::machine_id() const {
  // @@protoc_insertion_point(field_get:MsgSlotsMachine.machine_id)
  return machine_id_;
}
inline void MsgSlotsMachine::set_machine_id(::google::protobuf::uint64 value) {
  set_has_machine_id();
  machine_id_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsMachine.machine_id)
}

// optional string name = 2;
inline bool MsgSlotsMachine::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSlotsMachine::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSlotsMachine::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSlotsMachine::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgSlotsMachine::name() const {
  // @@protoc_insertion_point(field_get:MsgSlotsMachine.name)
  return *name_;
}
inline void MsgSlotsMachine::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgSlotsMachine.name)
}
inline void MsgSlotsMachine::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgSlotsMachine.name)
}
inline void MsgSlotsMachine::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgSlotsMachine.name)
}
inline ::std::string* MsgSlotsMachine::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgSlotsMachine.name)
  return name_;
}
inline ::std::string* MsgSlotsMachine::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgSlotsMachine::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgSlotsMachine.name)
}

// optional uint32 curr_collect_id = 3;
inline bool MsgSlotsMachine::has_curr_collect_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSlotsMachine::set_has_curr_collect_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSlotsMachine::clear_has_curr_collect_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSlotsMachine::clear_curr_collect_id() {
  curr_collect_id_ = 0u;
  clear_has_curr_collect_id();
}
inline ::google::protobuf::uint32 MsgSlotsMachine::curr_collect_id() const {
  // @@protoc_insertion_point(field_get:MsgSlotsMachine.curr_collect_id)
  return curr_collect_id_;
}
inline void MsgSlotsMachine::set_curr_collect_id(::google::protobuf::uint32 value) {
  set_has_curr_collect_id();
  curr_collect_id_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsMachine.curr_collect_id)
}

// -------------------------------------------------------------------

// MsgCollectReward

// optional uint64 pid = 1;
inline bool MsgCollectReward::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCollectReward::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCollectReward::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCollectReward::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::uint64 MsgCollectReward::pid() const {
  // @@protoc_insertion_point(field_get:MsgCollectReward.pid)
  return pid_;
}
inline void MsgCollectReward::set_pid(::google::protobuf::uint64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:MsgCollectReward.pid)
}

// optional uint64 collect_win = 2;
inline bool MsgCollectReward::has_collect_win() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCollectReward::set_has_collect_win() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCollectReward::clear_has_collect_win() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCollectReward::clear_collect_win() {
  collect_win_ = GOOGLE_ULONGLONG(0);
  clear_has_collect_win();
}
inline ::google::protobuf::uint64 MsgCollectReward::collect_win() const {
  // @@protoc_insertion_point(field_get:MsgCollectReward.collect_win)
  return collect_win_;
}
inline void MsgCollectReward::set_collect_win(::google::protobuf::uint64 value) {
  set_has_collect_win();
  collect_win_ = value;
  // @@protoc_insertion_point(field_set:MsgCollectReward.collect_win)
}

// -------------------------------------------------------------------

// MsgSlotsCollect

// repeated .MsgCollectReward collect_win = 1;
inline int MsgSlotsCollect::collect_win_size() const {
  return collect_win_.size();
}
inline void MsgSlotsCollect::clear_collect_win() {
  collect_win_.Clear();
}
inline const ::MsgCollectReward& MsgSlotsCollect::collect_win(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsCollect.collect_win)
  return collect_win_.Get(index);
}
inline ::MsgCollectReward* MsgSlotsCollect::mutable_collect_win(int index) {
  // @@protoc_insertion_point(field_mutable:MsgSlotsCollect.collect_win)
  return collect_win_.Mutable(index);
}
inline ::MsgCollectReward* MsgSlotsCollect::add_collect_win() {
  // @@protoc_insertion_point(field_add:MsgSlotsCollect.collect_win)
  return collect_win_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgCollectReward >&
MsgSlotsCollect::collect_win() const {
  // @@protoc_insertion_point(field_list:MsgSlotsCollect.collect_win)
  return collect_win_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgCollectReward >*
MsgSlotsCollect::mutable_collect_win() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsCollect.collect_win)
  return &collect_win_;
}

// repeated .MsgCollectSymbol collect_symbols = 2;
inline int MsgSlotsCollect::collect_symbols_size() const {
  return collect_symbols_.size();
}
inline void MsgSlotsCollect::clear_collect_symbols() {
  collect_symbols_.Clear();
}
inline const ::MsgCollectSymbol& MsgSlotsCollect::collect_symbols(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsCollect.collect_symbols)
  return collect_symbols_.Get(index);
}
inline ::MsgCollectSymbol* MsgSlotsCollect::mutable_collect_symbols(int index) {
  // @@protoc_insertion_point(field_mutable:MsgSlotsCollect.collect_symbols)
  return collect_symbols_.Mutable(index);
}
inline ::MsgCollectSymbol* MsgSlotsCollect::add_collect_symbols() {
  // @@protoc_insertion_point(field_add:MsgSlotsCollect.collect_symbols)
  return collect_symbols_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgCollectSymbol >&
MsgSlotsCollect::collect_symbols() const {
  // @@protoc_insertion_point(field_list:MsgSlotsCollect.collect_symbols)
  return collect_symbols_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgCollectSymbol >*
MsgSlotsCollect::mutable_collect_symbols() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsCollect.collect_symbols)
  return &collect_symbols_;
}

// optional uint32 curr_collect_id = 3;
inline bool MsgSlotsCollect::has_curr_collect_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSlotsCollect::set_has_curr_collect_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSlotsCollect::clear_has_curr_collect_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSlotsCollect::clear_curr_collect_id() {
  curr_collect_id_ = 0u;
  clear_has_curr_collect_id();
}
inline ::google::protobuf::uint32 MsgSlotsCollect::curr_collect_id() const {
  // @@protoc_insertion_point(field_get:MsgSlotsCollect.curr_collect_id)
  return curr_collect_id_;
}
inline void MsgSlotsCollect::set_curr_collect_id(::google::protobuf::uint32 value) {
  set_has_curr_collect_id();
  curr_collect_id_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsCollect.curr_collect_id)
}

// optional uint64 player_id = 4;
inline bool MsgSlotsCollect::has_player_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgSlotsCollect::set_has_player_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgSlotsCollect::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgSlotsCollect::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 MsgSlotsCollect::player_id() const {
  // @@protoc_insertion_point(field_get:MsgSlotsCollect.player_id)
  return player_id_;
}
inline void MsgSlotsCollect::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsCollect.player_id)
}

// -------------------------------------------------------------------

// MsgSlotsPlayerInfo

// optional .MsgPlayerInfo player_base = 1;
inline bool MsgSlotsPlayerInfo::has_player_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSlotsPlayerInfo::set_has_player_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSlotsPlayerInfo::clear_has_player_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSlotsPlayerInfo::clear_player_base() {
  if (player_base_ != NULL) player_base_->::MsgPlayerInfo::Clear();
  clear_has_player_base();
}
inline const ::MsgPlayerInfo& MsgSlotsPlayerInfo::player_base() const {
  // @@protoc_insertion_point(field_get:MsgSlotsPlayerInfo.player_base)
  return player_base_ != NULL ? *player_base_ : *default_instance_->player_base_;
}
inline ::MsgPlayerInfo* MsgSlotsPlayerInfo::mutable_player_base() {
  set_has_player_base();
  if (player_base_ == NULL) player_base_ = new ::MsgPlayerInfo;
  // @@protoc_insertion_point(field_mutable:MsgSlotsPlayerInfo.player_base)
  return player_base_;
}
inline ::MsgPlayerInfo* MsgSlotsPlayerInfo::release_player_base() {
  clear_has_player_base();
  ::MsgPlayerInfo* temp = player_base_;
  player_base_ = NULL;
  return temp;
}
inline void MsgSlotsPlayerInfo::set_allocated_player_base(::MsgPlayerInfo* player_base) {
  delete player_base_;
  player_base_ = player_base;
  if (player_base) {
    set_has_player_base();
  } else {
    clear_has_player_base();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgSlotsPlayerInfo.player_base)
}

// -------------------------------------------------------------------

// MsgSlotsRoomInfo

// repeated .MsgSlotsPlayerInfo player_list = 1;
inline int MsgSlotsRoomInfo::player_list_size() const {
  return player_list_.size();
}
inline void MsgSlotsRoomInfo::clear_player_list() {
  player_list_.Clear();
}
inline const ::MsgSlotsPlayerInfo& MsgSlotsRoomInfo::player_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsRoomInfo.player_list)
  return player_list_.Get(index);
}
inline ::MsgSlotsPlayerInfo* MsgSlotsRoomInfo::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgSlotsRoomInfo.player_list)
  return player_list_.Mutable(index);
}
inline ::MsgSlotsPlayerInfo* MsgSlotsRoomInfo::add_player_list() {
  // @@protoc_insertion_point(field_add:MsgSlotsRoomInfo.player_list)
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsPlayerInfo >&
MsgSlotsRoomInfo::player_list() const {
  // @@protoc_insertion_point(field_list:MsgSlotsRoomInfo.player_list)
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsPlayerInfo >*
MsgSlotsRoomInfo::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsRoomInfo.player_list)
  return &player_list_;
}

// repeated uint64 seats = 2;
inline int MsgSlotsRoomInfo::seats_size() const {
  return seats_.size();
}
inline void MsgSlotsRoomInfo::clear_seats() {
  seats_.Clear();
}
inline ::google::protobuf::uint64 MsgSlotsRoomInfo::seats(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsRoomInfo.seats)
  return seats_.Get(index);
}
inline void MsgSlotsRoomInfo::set_seats(int index, ::google::protobuf::uint64 value) {
  seats_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgSlotsRoomInfo.seats)
}
inline void MsgSlotsRoomInfo::add_seats(::google::protobuf::uint64 value) {
  seats_.Add(value);
  // @@protoc_insertion_point(field_add:MsgSlotsRoomInfo.seats)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MsgSlotsRoomInfo::seats() const {
  // @@protoc_insertion_point(field_list:MsgSlotsRoomInfo.seats)
  return seats_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MsgSlotsRoomInfo::mutable_seats() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsRoomInfo.seats)
  return &seats_;
}

// repeated .MsgSlotsMachine slots_machines = 3;
inline int MsgSlotsRoomInfo::slots_machines_size() const {
  return slots_machines_.size();
}
inline void MsgSlotsRoomInfo::clear_slots_machines() {
  slots_machines_.Clear();
}
inline const ::MsgSlotsMachine& MsgSlotsRoomInfo::slots_machines(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsRoomInfo.slots_machines)
  return slots_machines_.Get(index);
}
inline ::MsgSlotsMachine* MsgSlotsRoomInfo::mutable_slots_machines(int index) {
  // @@protoc_insertion_point(field_mutable:MsgSlotsRoomInfo.slots_machines)
  return slots_machines_.Mutable(index);
}
inline ::MsgSlotsMachine* MsgSlotsRoomInfo::add_slots_machines() {
  // @@protoc_insertion_point(field_add:MsgSlotsRoomInfo.slots_machines)
  return slots_machines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsMachine >&
MsgSlotsRoomInfo::slots_machines() const {
  // @@protoc_insertion_point(field_list:MsgSlotsRoomInfo.slots_machines)
  return slots_machines_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsMachine >*
MsgSlotsRoomInfo::mutable_slots_machines() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsRoomInfo.slots_machines)
  return &slots_machines_;
}

// optional uint64 room_id = 4;
inline bool MsgSlotsRoomInfo::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgSlotsRoomInfo::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgSlotsRoomInfo::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgSlotsRoomInfo::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
  clear_has_room_id();
}
inline ::google::protobuf::uint64 MsgSlotsRoomInfo::room_id() const {
  // @@protoc_insertion_point(field_get:MsgSlotsRoomInfo.room_id)
  return room_id_;
}
inline void MsgSlotsRoomInfo::set_room_id(::google::protobuf::uint64 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsRoomInfo.room_id)
}

// optional .MsgBaseRoomInfo room_info = 5;
inline bool MsgSlotsRoomInfo::has_room_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgSlotsRoomInfo::set_has_room_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgSlotsRoomInfo::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgSlotsRoomInfo::clear_room_info() {
  if (room_info_ != NULL) room_info_->::MsgBaseRoomInfo::Clear();
  clear_has_room_info();
}
inline const ::MsgBaseRoomInfo& MsgSlotsRoomInfo::room_info() const {
  // @@protoc_insertion_point(field_get:MsgSlotsRoomInfo.room_info)
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::MsgBaseRoomInfo* MsgSlotsRoomInfo::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) room_info_ = new ::MsgBaseRoomInfo;
  // @@protoc_insertion_point(field_mutable:MsgSlotsRoomInfo.room_info)
  return room_info_;
}
inline ::MsgBaseRoomInfo* MsgSlotsRoomInfo::release_room_info() {
  clear_has_room_info();
  ::MsgBaseRoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void MsgSlotsRoomInfo::set_allocated_room_info(::MsgBaseRoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgSlotsRoomInfo.room_info)
}

// repeated .MsgSlotsCollect room_collect_info = 6;
inline int MsgSlotsRoomInfo::room_collect_info_size() const {
  return room_collect_info_.size();
}
inline void MsgSlotsRoomInfo::clear_room_collect_info() {
  room_collect_info_.Clear();
}
inline const ::MsgSlotsCollect& MsgSlotsRoomInfo::room_collect_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsRoomInfo.room_collect_info)
  return room_collect_info_.Get(index);
}
inline ::MsgSlotsCollect* MsgSlotsRoomInfo::mutable_room_collect_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgSlotsRoomInfo.room_collect_info)
  return room_collect_info_.Mutable(index);
}
inline ::MsgSlotsCollect* MsgSlotsRoomInfo::add_room_collect_info() {
  // @@protoc_insertion_point(field_add:MsgSlotsRoomInfo.room_collect_info)
  return room_collect_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect >&
MsgSlotsRoomInfo::room_collect_info() const {
  // @@protoc_insertion_point(field_list:MsgSlotsRoomInfo.room_collect_info)
  return room_collect_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect >*
MsgSlotsRoomInfo::mutable_room_collect_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsRoomInfo.room_collect_info)
  return &room_collect_info_;
}

// -------------------------------------------------------------------

// MsgSlotsPull

// optional uint64 bet = 1;
inline bool MsgSlotsPull::has_bet() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSlotsPull::set_has_bet() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSlotsPull::clear_has_bet() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSlotsPull::clear_bet() {
  bet_ = GOOGLE_ULONGLONG(0);
  clear_has_bet();
}
inline ::google::protobuf::uint64 MsgSlotsPull::bet() const {
  // @@protoc_insertion_point(field_get:MsgSlotsPull.bet)
  return bet_;
}
inline void MsgSlotsPull::set_bet(::google::protobuf::uint64 value) {
  set_has_bet();
  bet_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsPull.bet)
}

// optional uint32 lines = 2;
inline bool MsgSlotsPull::has_lines() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSlotsPull::set_has_lines() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSlotsPull::clear_has_lines() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSlotsPull::clear_lines() {
  lines_ = 0u;
  clear_has_lines();
}
inline ::google::protobuf::uint32 MsgSlotsPull::lines() const {
  // @@protoc_insertion_point(field_get:MsgSlotsPull.lines)
  return lines_;
}
inline void MsgSlotsPull::set_lines(::google::protobuf::uint32 value) {
  set_has_lines();
  lines_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsPull.lines)
}

// -------------------------------------------------------------------

// MsgSlotsWheel

// repeated uint32 icons = 1;
inline int MsgSlotsWheel::icons_size() const {
  return icons_.size();
}
inline void MsgSlotsWheel::clear_icons() {
  icons_.Clear();
}
inline ::google::protobuf::uint32 MsgSlotsWheel::icons(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsWheel.icons)
  return icons_.Get(index);
}
inline void MsgSlotsWheel::set_icons(int index, ::google::protobuf::uint32 value) {
  icons_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgSlotsWheel.icons)
}
inline void MsgSlotsWheel::add_icons(::google::protobuf::uint32 value) {
  icons_.Add(value);
  // @@protoc_insertion_point(field_add:MsgSlotsWheel.icons)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgSlotsWheel::icons() const {
  // @@protoc_insertion_point(field_list:MsgSlotsWheel.icons)
  return icons_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgSlotsWheel::mutable_icons() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsWheel.icons)
  return &icons_;
}

// -------------------------------------------------------------------

// MsgWheelAttrib

// optional uint32 idx = 1;
inline bool MsgWheelAttrib::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgWheelAttrib::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgWheelAttrib::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgWheelAttrib::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 MsgWheelAttrib::idx() const {
  // @@protoc_insertion_point(field_get:MsgWheelAttrib.idx)
  return idx_;
}
inline void MsgWheelAttrib::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:MsgWheelAttrib.idx)
}

// optional uint32 s_src = 2;
inline bool MsgWheelAttrib::has_s_src() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgWheelAttrib::set_has_s_src() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgWheelAttrib::clear_has_s_src() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgWheelAttrib::clear_s_src() {
  s_src_ = 0u;
  clear_has_s_src();
}
inline ::google::protobuf::uint32 MsgWheelAttrib::s_src() const {
  // @@protoc_insertion_point(field_get:MsgWheelAttrib.s_src)
  return s_src_;
}
inline void MsgWheelAttrib::set_s_src(::google::protobuf::uint32 value) {
  set_has_s_src();
  s_src_ = value;
  // @@protoc_insertion_point(field_set:MsgWheelAttrib.s_src)
}

// optional uint32 s_dec = 3;
inline bool MsgWheelAttrib::has_s_dec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgWheelAttrib::set_has_s_dec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgWheelAttrib::clear_has_s_dec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgWheelAttrib::clear_s_dec() {
  s_dec_ = 0u;
  clear_has_s_dec();
}
inline ::google::protobuf::uint32 MsgWheelAttrib::s_dec() const {
  // @@protoc_insertion_point(field_get:MsgWheelAttrib.s_dec)
  return s_dec_;
}
inline void MsgWheelAttrib::set_s_dec(::google::protobuf::uint32 value) {
  set_has_s_dec();
  s_dec_ = value;
  // @@protoc_insertion_point(field_set:MsgWheelAttrib.s_dec)
}

// -------------------------------------------------------------------

// MsgSlotsResult

// optional uint64 pid = 1;
inline bool MsgSlotsResult::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSlotsResult::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSlotsResult::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSlotsResult::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::uint64 MsgSlotsResult::pid() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.pid)
  return pid_;
}
inline void MsgSlotsResult::set_pid(::google::protobuf::uint64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsResult.pid)
}

// optional uint64 total_coins = 2;
inline bool MsgSlotsResult::has_total_coins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSlotsResult::set_has_total_coins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSlotsResult::clear_has_total_coins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSlotsResult::clear_total_coins() {
  total_coins_ = GOOGLE_ULONGLONG(0);
  clear_has_total_coins();
}
inline ::google::protobuf::uint64 MsgSlotsResult::total_coins() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.total_coins)
  return total_coins_;
}
inline void MsgSlotsResult::set_total_coins(::google::protobuf::uint64 value) {
  set_has_total_coins();
  total_coins_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsResult.total_coins)
}

// optional uint64 win_coins = 3;
inline bool MsgSlotsResult::has_win_coins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSlotsResult::set_has_win_coins() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSlotsResult::clear_has_win_coins() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSlotsResult::clear_win_coins() {
  win_coins_ = GOOGLE_ULONGLONG(0);
  clear_has_win_coins();
}
inline ::google::protobuf::uint64 MsgSlotsResult::win_coins() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.win_coins)
  return win_coins_;
}
inline void MsgSlotsResult::set_win_coins(::google::protobuf::uint64 value) {
  set_has_win_coins();
  win_coins_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsResult.win_coins)
}

// optional uint32 win_bet = 4;
inline bool MsgSlotsResult::has_win_bet() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgSlotsResult::set_has_win_bet() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgSlotsResult::clear_has_win_bet() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgSlotsResult::clear_win_bet() {
  win_bet_ = 0u;
  clear_has_win_bet();
}
inline ::google::protobuf::uint32 MsgSlotsResult::win_bet() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.win_bet)
  return win_bet_;
}
inline void MsgSlotsResult::set_win_bet(::google::protobuf::uint32 value) {
  set_has_win_bet();
  win_bet_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsResult.win_bet)
}

// optional uint32 free_count = 5;
inline bool MsgSlotsResult::has_free_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgSlotsResult::set_has_free_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgSlotsResult::clear_has_free_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgSlotsResult::clear_free_count() {
  free_count_ = 0u;
  clear_has_free_count();
}
inline ::google::protobuf::uint32 MsgSlotsResult::free_count() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.free_count)
  return free_count_;
}
inline void MsgSlotsResult::set_free_count(::google::protobuf::uint32 value) {
  set_has_free_count();
  free_count_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsResult.free_count)
}

// repeated .MsgSlotsWheel wheels = 6;
inline int MsgSlotsResult::wheels_size() const {
  return wheels_.size();
}
inline void MsgSlotsResult::clear_wheels() {
  wheels_.Clear();
}
inline const ::MsgSlotsWheel& MsgSlotsResult::wheels(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.wheels)
  return wheels_.Get(index);
}
inline ::MsgSlotsWheel* MsgSlotsResult::mutable_wheels(int index) {
  // @@protoc_insertion_point(field_mutable:MsgSlotsResult.wheels)
  return wheels_.Mutable(index);
}
inline ::MsgSlotsWheel* MsgSlotsResult::add_wheels() {
  // @@protoc_insertion_point(field_add:MsgSlotsResult.wheels)
  return wheels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsWheel >&
MsgSlotsResult::wheels() const {
  // @@protoc_insertion_point(field_list:MsgSlotsResult.wheels)
  return wheels_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsWheel >*
MsgSlotsResult::mutable_wheels() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsResult.wheels)
  return &wheels_;
}

// repeated uint32 wheel_idx = 7;
inline int MsgSlotsResult::wheel_idx_size() const {
  return wheel_idx_.size();
}
inline void MsgSlotsResult::clear_wheel_idx() {
  wheel_idx_.Clear();
}
inline ::google::protobuf::uint32 MsgSlotsResult::wheel_idx(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.wheel_idx)
  return wheel_idx_.Get(index);
}
inline void MsgSlotsResult::set_wheel_idx(int index, ::google::protobuf::uint32 value) {
  wheel_idx_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgSlotsResult.wheel_idx)
}
inline void MsgSlotsResult::add_wheel_idx(::google::protobuf::uint32 value) {
  wheel_idx_.Add(value);
  // @@protoc_insertion_point(field_add:MsgSlotsResult.wheel_idx)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgSlotsResult::wheel_idx() const {
  // @@protoc_insertion_point(field_list:MsgSlotsResult.wheel_idx)
  return wheel_idx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgSlotsResult::mutable_wheel_idx() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsResult.wheel_idx)
  return &wheel_idx_;
}

// optional string bonus_name = 8;
inline bool MsgSlotsResult::has_bonus_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgSlotsResult::set_has_bonus_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgSlotsResult::clear_has_bonus_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgSlotsResult::clear_bonus_name() {
  if (bonus_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bonus_name_->clear();
  }
  clear_has_bonus_name();
}
inline const ::std::string& MsgSlotsResult::bonus_name() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.bonus_name)
  return *bonus_name_;
}
inline void MsgSlotsResult::set_bonus_name(const ::std::string& value) {
  set_has_bonus_name();
  if (bonus_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bonus_name_ = new ::std::string;
  }
  bonus_name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgSlotsResult.bonus_name)
}
inline void MsgSlotsResult::set_bonus_name(const char* value) {
  set_has_bonus_name();
  if (bonus_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bonus_name_ = new ::std::string;
  }
  bonus_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgSlotsResult.bonus_name)
}
inline void MsgSlotsResult::set_bonus_name(const char* value, size_t size) {
  set_has_bonus_name();
  if (bonus_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bonus_name_ = new ::std::string;
  }
  bonus_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgSlotsResult.bonus_name)
}
inline ::std::string* MsgSlotsResult::mutable_bonus_name() {
  set_has_bonus_name();
  if (bonus_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bonus_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgSlotsResult.bonus_name)
  return bonus_name_;
}
inline ::std::string* MsgSlotsResult::release_bonus_name() {
  clear_has_bonus_name();
  if (bonus_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bonus_name_;
    bonus_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgSlotsResult::set_allocated_bonus_name(::std::string* bonus_name) {
  if (bonus_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bonus_name_;
  }
  if (bonus_name) {
    set_has_bonus_name();
    bonus_name_ = bonus_name;
  } else {
    clear_has_bonus_name();
    bonus_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgSlotsResult.bonus_name)
}

// optional sint32 bonus_icon_num = 9;
inline bool MsgSlotsResult::has_bonus_icon_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgSlotsResult::set_has_bonus_icon_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgSlotsResult::clear_has_bonus_icon_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgSlotsResult::clear_bonus_icon_num() {
  bonus_icon_num_ = 0;
  clear_has_bonus_icon_num();
}
inline ::google::protobuf::int32 MsgSlotsResult::bonus_icon_num() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.bonus_icon_num)
  return bonus_icon_num_;
}
inline void MsgSlotsResult::set_bonus_icon_num(::google::protobuf::int32 value) {
  set_has_bonus_icon_num();
  bonus_icon_num_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsResult.bonus_icon_num)
}

// optional bool win_free_spins = 10;
inline bool MsgSlotsResult::has_win_free_spins() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgSlotsResult::set_has_win_free_spins() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgSlotsResult::clear_has_win_free_spins() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgSlotsResult::clear_win_free_spins() {
  win_free_spins_ = false;
  clear_has_win_free_spins();
}
inline bool MsgSlotsResult::win_free_spins() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.win_free_spins)
  return win_free_spins_;
}
inline void MsgSlotsResult::set_win_free_spins(bool value) {
  set_has_win_free_spins();
  win_free_spins_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsResult.win_free_spins)
}

// optional .EnumSlotsWinType win_type = 11;
inline bool MsgSlotsResult::has_win_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgSlotsResult::set_has_win_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgSlotsResult::clear_has_win_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgSlotsResult::clear_win_type() {
  win_type_ = 0;
  clear_has_win_type();
}
inline ::EnumSlotsWinType MsgSlotsResult::win_type() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.win_type)
  return static_cast< ::EnumSlotsWinType >(win_type_);
}
inline void MsgSlotsResult::set_win_type(::EnumSlotsWinType value) {
  assert(::EnumSlotsWinType_IsValid(value));
  set_has_win_type();
  win_type_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsResult.win_type)
}

// repeated .MsgVector random_wilds = 12;
inline int MsgSlotsResult::random_wilds_size() const {
  return random_wilds_.size();
}
inline void MsgSlotsResult::clear_random_wilds() {
  random_wilds_.Clear();
}
inline const ::MsgVector& MsgSlotsResult::random_wilds(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.random_wilds)
  return random_wilds_.Get(index);
}
inline ::MsgVector* MsgSlotsResult::mutable_random_wilds(int index) {
  // @@protoc_insertion_point(field_mutable:MsgSlotsResult.random_wilds)
  return random_wilds_.Mutable(index);
}
inline ::MsgVector* MsgSlotsResult::add_random_wilds() {
  // @@protoc_insertion_point(field_add:MsgSlotsResult.random_wilds)
  return random_wilds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgVector >&
MsgSlotsResult::random_wilds() const {
  // @@protoc_insertion_point(field_list:MsgSlotsResult.random_wilds)
  return random_wilds_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgVector >*
MsgSlotsResult::mutable_random_wilds() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsResult.random_wilds)
  return &random_wilds_;
}

// repeated uint32 fill_all_wilds = 13;
inline int MsgSlotsResult::fill_all_wilds_size() const {
  return fill_all_wilds_.size();
}
inline void MsgSlotsResult::clear_fill_all_wilds() {
  fill_all_wilds_.Clear();
}
inline ::google::protobuf::uint32 MsgSlotsResult::fill_all_wilds(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.fill_all_wilds)
  return fill_all_wilds_.Get(index);
}
inline void MsgSlotsResult::set_fill_all_wilds(int index, ::google::protobuf::uint32 value) {
  fill_all_wilds_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgSlotsResult.fill_all_wilds)
}
inline void MsgSlotsResult::add_fill_all_wilds(::google::protobuf::uint32 value) {
  fill_all_wilds_.Add(value);
  // @@protoc_insertion_point(field_add:MsgSlotsResult.fill_all_wilds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgSlotsResult::fill_all_wilds() const {
  // @@protoc_insertion_point(field_list:MsgSlotsResult.fill_all_wilds)
  return fill_all_wilds_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgSlotsResult::mutable_fill_all_wilds() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsResult.fill_all_wilds)
  return &fill_all_wilds_;
}

// repeated uint32 splas_wilds = 14;
inline int MsgSlotsResult::splas_wilds_size() const {
  return splas_wilds_.size();
}
inline void MsgSlotsResult::clear_splas_wilds() {
  splas_wilds_.Clear();
}
inline ::google::protobuf::uint32 MsgSlotsResult::splas_wilds(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.splas_wilds)
  return splas_wilds_.Get(index);
}
inline void MsgSlotsResult::set_splas_wilds(int index, ::google::protobuf::uint32 value) {
  splas_wilds_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgSlotsResult.splas_wilds)
}
inline void MsgSlotsResult::add_splas_wilds(::google::protobuf::uint32 value) {
  splas_wilds_.Add(value);
  // @@protoc_insertion_point(field_add:MsgSlotsResult.splas_wilds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgSlotsResult::splas_wilds() const {
  // @@protoc_insertion_point(field_list:MsgSlotsResult.splas_wilds)
  return splas_wilds_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgSlotsResult::mutable_splas_wilds() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsResult.splas_wilds)
  return &splas_wilds_;
}

// repeated .MsgWheelAttrib s_change = 15;
inline int MsgSlotsResult::s_change_size() const {
  return s_change_.size();
}
inline void MsgSlotsResult::clear_s_change() {
  s_change_.Clear();
}
inline const ::MsgWheelAttrib& MsgSlotsResult::s_change(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.s_change)
  return s_change_.Get(index);
}
inline ::MsgWheelAttrib* MsgSlotsResult::mutable_s_change(int index) {
  // @@protoc_insertion_point(field_mutable:MsgSlotsResult.s_change)
  return s_change_.Mutable(index);
}
inline ::MsgWheelAttrib* MsgSlotsResult::add_s_change() {
  // @@protoc_insertion_point(field_add:MsgSlotsResult.s_change)
  return s_change_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgWheelAttrib >&
MsgSlotsResult::s_change() const {
  // @@protoc_insertion_point(field_list:MsgSlotsResult.s_change)
  return s_change_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgWheelAttrib >*
MsgSlotsResult::mutable_s_change() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsResult.s_change)
  return &s_change_;
}

// optional uint64 collect_score = 16;
inline bool MsgSlotsResult::has_collect_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MsgSlotsResult::set_has_collect_score() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MsgSlotsResult::clear_has_collect_score() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MsgSlotsResult::clear_collect_score() {
  collect_score_ = GOOGLE_ULONGLONG(0);
  clear_has_collect_score();
}
inline ::google::protobuf::uint64 MsgSlotsResult::collect_score() const {
  // @@protoc_insertion_point(field_get:MsgSlotsResult.collect_score)
  return collect_score_;
}
inline void MsgSlotsResult::set_collect_score(::google::protobuf::uint64 value) {
  set_has_collect_score();
  collect_score_ = value;
  // @@protoc_insertion_point(field_set:MsgSlotsResult.collect_score)
}

// -------------------------------------------------------------------

// MsgBonusGameRandomResult

// optional string rnd_name = 1;
inline bool MsgBonusGameRandomResult::has_rnd_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgBonusGameRandomResult::set_has_rnd_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgBonusGameRandomResult::clear_has_rnd_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgBonusGameRandomResult::clear_rnd_name() {
  if (rnd_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rnd_name_->clear();
  }
  clear_has_rnd_name();
}
inline const ::std::string& MsgBonusGameRandomResult::rnd_name() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameRandomResult.rnd_name)
  return *rnd_name_;
}
inline void MsgBonusGameRandomResult::set_rnd_name(const ::std::string& value) {
  set_has_rnd_name();
  if (rnd_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rnd_name_ = new ::std::string;
  }
  rnd_name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgBonusGameRandomResult.rnd_name)
}
inline void MsgBonusGameRandomResult::set_rnd_name(const char* value) {
  set_has_rnd_name();
  if (rnd_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rnd_name_ = new ::std::string;
  }
  rnd_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgBonusGameRandomResult.rnd_name)
}
inline void MsgBonusGameRandomResult::set_rnd_name(const char* value, size_t size) {
  set_has_rnd_name();
  if (rnd_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rnd_name_ = new ::std::string;
  }
  rnd_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgBonusGameRandomResult.rnd_name)
}
inline ::std::string* MsgBonusGameRandomResult::mutable_rnd_name() {
  set_has_rnd_name();
  if (rnd_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rnd_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgBonusGameRandomResult.rnd_name)
  return rnd_name_;
}
inline ::std::string* MsgBonusGameRandomResult::release_rnd_name() {
  clear_has_rnd_name();
  if (rnd_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rnd_name_;
    rnd_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgBonusGameRandomResult::set_allocated_rnd_name(::std::string* rnd_name) {
  if (rnd_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rnd_name_;
  }
  if (rnd_name) {
    set_has_rnd_name();
    rnd_name_ = rnd_name;
  } else {
    clear_has_rnd_name();
    rnd_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgBonusGameRandomResult.rnd_name)
}

// optional sint32 win_credits = 2;
inline bool MsgBonusGameRandomResult::has_win_credits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgBonusGameRandomResult::set_has_win_credits() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgBonusGameRandomResult::clear_has_win_credits() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgBonusGameRandomResult::clear_win_credits() {
  win_credits_ = 0;
  clear_has_win_credits();
}
inline ::google::protobuf::int32 MsgBonusGameRandomResult::win_credits() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameRandomResult.win_credits)
  return win_credits_;
}
inline void MsgBonusGameRandomResult::set_win_credits(::google::protobuf::int32 value) {
  set_has_win_credits();
  win_credits_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameRandomResult.win_credits)
}

// optional sint32 win_multiplier = 3;
inline bool MsgBonusGameRandomResult::has_win_multiplier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgBonusGameRandomResult::set_has_win_multiplier() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgBonusGameRandomResult::clear_has_win_multiplier() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgBonusGameRandomResult::clear_win_multiplier() {
  win_multiplier_ = 0;
  clear_has_win_multiplier();
}
inline ::google::protobuf::int32 MsgBonusGameRandomResult::win_multiplier() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameRandomResult.win_multiplier)
  return win_multiplier_;
}
inline void MsgBonusGameRandomResult::set_win_multiplier(::google::protobuf::int32 value) {
  set_has_win_multiplier();
  win_multiplier_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameRandomResult.win_multiplier)
}

// optional sint32 win_free_spins = 4;
inline bool MsgBonusGameRandomResult::has_win_free_spins() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgBonusGameRandomResult::set_has_win_free_spins() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgBonusGameRandomResult::clear_has_win_free_spins() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgBonusGameRandomResult::clear_win_free_spins() {
  win_free_spins_ = 0;
  clear_has_win_free_spins();
}
inline ::google::protobuf::int32 MsgBonusGameRandomResult::win_free_spins() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameRandomResult.win_free_spins)
  return win_free_spins_;
}
inline void MsgBonusGameRandomResult::set_win_free_spins(::google::protobuf::int32 value) {
  set_has_win_free_spins();
  win_free_spins_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameRandomResult.win_free_spins)
}

// -------------------------------------------------------------------

// MsgBonusGameSelectResult

// optional bool is_end = 1;
inline bool MsgBonusGameSelectResult::has_is_end() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgBonusGameSelectResult::set_has_is_end() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgBonusGameSelectResult::clear_has_is_end() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgBonusGameSelectResult::clear_is_end() {
  is_end_ = false;
  clear_has_is_end();
}
inline bool MsgBonusGameSelectResult::is_end() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.is_end)
  return is_end_;
}
inline void MsgBonusGameSelectResult::set_is_end(bool value) {
  set_has_is_end();
  is_end_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameSelectResult.is_end)
}

// optional uint32 select_surplus_count = 2;
inline bool MsgBonusGameSelectResult::has_select_surplus_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgBonusGameSelectResult::set_has_select_surplus_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgBonusGameSelectResult::clear_has_select_surplus_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgBonusGameSelectResult::clear_select_surplus_count() {
  select_surplus_count_ = 0u;
  clear_has_select_surplus_count();
}
inline ::google::protobuf::uint32 MsgBonusGameSelectResult::select_surplus_count() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.select_surplus_count)
  return select_surplus_count_;
}
inline void MsgBonusGameSelectResult::set_select_surplus_count(::google::protobuf::uint32 value) {
  set_has_select_surplus_count();
  select_surplus_count_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameSelectResult.select_surplus_count)
}

// optional uint64 total_money = 3;
inline bool MsgBonusGameSelectResult::has_total_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgBonusGameSelectResult::set_has_total_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgBonusGameSelectResult::clear_has_total_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgBonusGameSelectResult::clear_total_money() {
  total_money_ = GOOGLE_ULONGLONG(0);
  clear_has_total_money();
}
inline ::google::protobuf::uint64 MsgBonusGameSelectResult::total_money() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.total_money)
  return total_money_;
}
inline void MsgBonusGameSelectResult::set_total_money(::google::protobuf::uint64 value) {
  set_has_total_money();
  total_money_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameSelectResult.total_money)
}

// optional uint64 curr_money = 4;
inline bool MsgBonusGameSelectResult::has_curr_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgBonusGameSelectResult::set_has_curr_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgBonusGameSelectResult::clear_has_curr_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgBonusGameSelectResult::clear_curr_money() {
  curr_money_ = GOOGLE_ULONGLONG(0);
  clear_has_curr_money();
}
inline ::google::protobuf::uint64 MsgBonusGameSelectResult::curr_money() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.curr_money)
  return curr_money_;
}
inline void MsgBonusGameSelectResult::set_curr_money(::google::protobuf::uint64 value) {
  set_has_curr_money();
  curr_money_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameSelectResult.curr_money)
}

// optional .EnumSlotsWinType win_type = 5;
inline bool MsgBonusGameSelectResult::has_win_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgBonusGameSelectResult::set_has_win_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgBonusGameSelectResult::clear_has_win_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgBonusGameSelectResult::clear_win_type() {
  win_type_ = 0;
  clear_has_win_type();
}
inline ::EnumSlotsWinType MsgBonusGameSelectResult::win_type() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.win_type)
  return static_cast< ::EnumSlotsWinType >(win_type_);
}
inline void MsgBonusGameSelectResult::set_win_type(::EnumSlotsWinType value) {
  assert(::EnumSlotsWinType_IsValid(value));
  set_has_win_type();
  win_type_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameSelectResult.win_type)
}

// optional uint64 pid = 6;
inline bool MsgBonusGameSelectResult::has_pid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgBonusGameSelectResult::set_has_pid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgBonusGameSelectResult::clear_has_pid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgBonusGameSelectResult::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::uint64 MsgBonusGameSelectResult::pid() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.pid)
  return pid_;
}
inline void MsgBonusGameSelectResult::set_pid(::google::protobuf::uint64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameSelectResult.pid)
}

// repeated .MsgBonusGameRandomResult random_results = 7;
inline int MsgBonusGameSelectResult::random_results_size() const {
  return random_results_.size();
}
inline void MsgBonusGameSelectResult::clear_random_results() {
  random_results_.Clear();
}
inline const ::MsgBonusGameRandomResult& MsgBonusGameSelectResult::random_results(int index) const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.random_results)
  return random_results_.Get(index);
}
inline ::MsgBonusGameRandomResult* MsgBonusGameSelectResult::mutable_random_results(int index) {
  // @@protoc_insertion_point(field_mutable:MsgBonusGameSelectResult.random_results)
  return random_results_.Mutable(index);
}
inline ::MsgBonusGameRandomResult* MsgBonusGameSelectResult::add_random_results() {
  // @@protoc_insertion_point(field_add:MsgBonusGameSelectResult.random_results)
  return random_results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult >&
MsgBonusGameSelectResult::random_results() const {
  // @@protoc_insertion_point(field_list:MsgBonusGameSelectResult.random_results)
  return random_results_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult >*
MsgBonusGameSelectResult::mutable_random_results() {
  // @@protoc_insertion_point(field_mutable_list:MsgBonusGameSelectResult.random_results)
  return &random_results_;
}

// optional uint32 free_spins = 8;
inline bool MsgBonusGameSelectResult::has_free_spins() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgBonusGameSelectResult::set_has_free_spins() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgBonusGameSelectResult::clear_has_free_spins() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgBonusGameSelectResult::clear_free_spins() {
  free_spins_ = 0u;
  clear_has_free_spins();
}
inline ::google::protobuf::uint32 MsgBonusGameSelectResult::free_spins() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.free_spins)
  return free_spins_;
}
inline void MsgBonusGameSelectResult::set_free_spins(::google::protobuf::uint32 value) {
  set_has_free_spins();
  free_spins_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameSelectResult.free_spins)
}

// optional uint32 win_free_spins = 9;
inline bool MsgBonusGameSelectResult::has_win_free_spins() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgBonusGameSelectResult::set_has_win_free_spins() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgBonusGameSelectResult::clear_has_win_free_spins() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgBonusGameSelectResult::clear_win_free_spins() {
  win_free_spins_ = 0u;
  clear_has_win_free_spins();
}
inline ::google::protobuf::uint32 MsgBonusGameSelectResult::win_free_spins() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.win_free_spins)
  return win_free_spins_;
}
inline void MsgBonusGameSelectResult::set_win_free_spins(::google::protobuf::uint32 value) {
  set_has_win_free_spins();
  win_free_spins_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameSelectResult.win_free_spins)
}

// repeated .MsgBonusGameRandomResult surplus_randoms = 10;
inline int MsgBonusGameSelectResult::surplus_randoms_size() const {
  return surplus_randoms_.size();
}
inline void MsgBonusGameSelectResult::clear_surplus_randoms() {
  surplus_randoms_.Clear();
}
inline const ::MsgBonusGameRandomResult& MsgBonusGameSelectResult::surplus_randoms(int index) const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.surplus_randoms)
  return surplus_randoms_.Get(index);
}
inline ::MsgBonusGameRandomResult* MsgBonusGameSelectResult::mutable_surplus_randoms(int index) {
  // @@protoc_insertion_point(field_mutable:MsgBonusGameSelectResult.surplus_randoms)
  return surplus_randoms_.Mutable(index);
}
inline ::MsgBonusGameRandomResult* MsgBonusGameSelectResult::add_surplus_randoms() {
  // @@protoc_insertion_point(field_add:MsgBonusGameSelectResult.surplus_randoms)
  return surplus_randoms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult >&
MsgBonusGameSelectResult::surplus_randoms() const {
  // @@protoc_insertion_point(field_list:MsgBonusGameSelectResult.surplus_randoms)
  return surplus_randoms_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgBonusGameRandomResult >*
MsgBonusGameSelectResult::mutable_surplus_randoms() {
  // @@protoc_insertion_point(field_mutable_list:MsgBonusGameSelectResult.surplus_randoms)
  return &surplus_randoms_;
}

// optional uint32 surplus_select_count = 11;
inline bool MsgBonusGameSelectResult::has_surplus_select_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgBonusGameSelectResult::set_has_surplus_select_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgBonusGameSelectResult::clear_has_surplus_select_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgBonusGameSelectResult::clear_surplus_select_count() {
  surplus_select_count_ = 0u;
  clear_has_surplus_select_count();
}
inline ::google::protobuf::uint32 MsgBonusGameSelectResult::surplus_select_count() const {
  // @@protoc_insertion_point(field_get:MsgBonusGameSelectResult.surplus_select_count)
  return surplus_select_count_;
}
inline void MsgBonusGameSelectResult::set_surplus_select_count(::google::protobuf::uint32 value) {
  set_has_surplus_select_count();
  surplus_select_count_ = value;
  // @@protoc_insertion_point(field_set:MsgBonusGameSelectResult.surplus_select_count)
}

// -------------------------------------------------------------------

// MsgSlotsRoomFeatureCollect

// optional string room_type = 1;
inline bool MsgSlotsRoomFeatureCollect::has_room_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSlotsRoomFeatureCollect::set_has_room_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSlotsRoomFeatureCollect::clear_has_room_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSlotsRoomFeatureCollect::clear_room_type() {
  if (room_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_type_->clear();
  }
  clear_has_room_type();
}
inline const ::std::string& MsgSlotsRoomFeatureCollect::room_type() const {
  // @@protoc_insertion_point(field_get:MsgSlotsRoomFeatureCollect.room_type)
  return *room_type_;
}
inline void MsgSlotsRoomFeatureCollect::set_room_type(const ::std::string& value) {
  set_has_room_type();
  if (room_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_type_ = new ::std::string;
  }
  room_type_->assign(value);
  // @@protoc_insertion_point(field_set:MsgSlotsRoomFeatureCollect.room_type)
}
inline void MsgSlotsRoomFeatureCollect::set_room_type(const char* value) {
  set_has_room_type();
  if (room_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_type_ = new ::std::string;
  }
  room_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgSlotsRoomFeatureCollect.room_type)
}
inline void MsgSlotsRoomFeatureCollect::set_room_type(const char* value, size_t size) {
  set_has_room_type();
  if (room_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_type_ = new ::std::string;
  }
  room_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgSlotsRoomFeatureCollect.room_type)
}
inline ::std::string* MsgSlotsRoomFeatureCollect::mutable_room_type() {
  set_has_room_type();
  if (room_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgSlotsRoomFeatureCollect.room_type)
  return room_type_;
}
inline ::std::string* MsgSlotsRoomFeatureCollect::release_room_type() {
  clear_has_room_type();
  if (room_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = room_type_;
    room_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgSlotsRoomFeatureCollect::set_allocated_room_type(::std::string* room_type) {
  if (room_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_type_;
  }
  if (room_type) {
    set_has_room_type();
    room_type_ = room_type;
  } else {
    clear_has_room_type();
    room_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgSlotsRoomFeatureCollect.room_type)
}

// repeated .MsgSlotsCollect collect_mission = 2;
inline int MsgSlotsRoomFeatureCollect::collect_mission_size() const {
  return collect_mission_.size();
}
inline void MsgSlotsRoomFeatureCollect::clear_collect_mission() {
  collect_mission_.Clear();
}
inline const ::MsgSlotsCollect& MsgSlotsRoomFeatureCollect::collect_mission(int index) const {
  // @@protoc_insertion_point(field_get:MsgSlotsRoomFeatureCollect.collect_mission)
  return collect_mission_.Get(index);
}
inline ::MsgSlotsCollect* MsgSlotsRoomFeatureCollect::mutable_collect_mission(int index) {
  // @@protoc_insertion_point(field_mutable:MsgSlotsRoomFeatureCollect.collect_mission)
  return collect_mission_.Mutable(index);
}
inline ::MsgSlotsCollect* MsgSlotsRoomFeatureCollect::add_collect_mission() {
  // @@protoc_insertion_point(field_add:MsgSlotsRoomFeatureCollect.collect_mission)
  return collect_mission_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect >&
MsgSlotsRoomFeatureCollect::collect_mission() const {
  // @@protoc_insertion_point(field_list:MsgSlotsRoomFeatureCollect.collect_mission)
  return collect_mission_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgSlotsCollect >*
MsgSlotsRoomFeatureCollect::mutable_collect_mission() {
  // @@protoc_insertion_point(field_mutable_list:MsgSlotsRoomFeatureCollect.collect_mission)
  return &collect_mission_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fslots_2eproto__INCLUDED
