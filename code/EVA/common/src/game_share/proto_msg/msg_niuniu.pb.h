// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_niuniu.proto

#ifndef PROTOBUF_msg_5fniuniu_2eproto__INCLUDED
#define PROTOBUF_msg_5fniuniu_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "public_pro.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5fniuniu_2eproto();
void protobuf_AssignDesc_msg_5fniuniu_2eproto();
void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

class MsgPlayerAddPour;
class MsgPlayerSelectHandCard;
class MsgNiuNiuPlayer;
class MsgNiuNiuShowHandCard;
class MsgNiuNiuHandCardInfo;
class MsgNiuNiuRoom;
class MsgNNGameOverInfo;
class MsgNiuNiuShowDown;
class MsgNNIntegralCount;

enum TNiuNiuState {
  TNiuNiuStateWait = 0,
  TNiuNiuCheckStartGame = 1,
  TNiuNiuStartGame = 2,
  TNiuNiuPlayerSelectAddPour = 3,
  TNiuNiuPlayerSelectHandCard = 4,
  TNiuNiuSendHandCard = 5,
  TNiuNiuShowCard = 6,
  TNiuNiuStateShowDown = 7,
  TNiuNiuStateRelieveRoom = 8
};
bool TNiuNiuState_IsValid(int value);
const TNiuNiuState TNiuNiuState_MIN = TNiuNiuStateWait;
const TNiuNiuState TNiuNiuState_MAX = TNiuNiuStateRelieveRoom;
const int TNiuNiuState_ARRAYSIZE = TNiuNiuState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TNiuNiuState_descriptor();
inline const ::std::string& TNiuNiuState_Name(TNiuNiuState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TNiuNiuState_descriptor(), value);
}
inline bool TNiuNiuState_Parse(
    const ::std::string& name, TNiuNiuState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TNiuNiuState>(
    TNiuNiuState_descriptor(), name, value);
}
enum TNiuNiuPlayerState {
  STATE_NN_READY = 1,
  STATE_NN_NEWROLE = 2,
  STATE_NN_ROOM_OWNER = 4,
  STATE_NN_RELIEVE = 8,
  STATE_NN_LEAVE = 16,
  STATE_NN_LIMIT = 32,
  STATE_NN_OFFLINE = 64,
  STATE_NN_BANK = 128,
  STATE_NN_TUOGUAN = 256,
  STATE_NN_ALREADR_TANPAI = 512,
  STATE_NN_ADDPOUR = 1024,
  STATE_NN_SELECTHANDCARD = 2048,
  STATE_NN_CONTINUE_GAME = 4096
};
bool TNiuNiuPlayerState_IsValid(int value);
const TNiuNiuPlayerState TNiuNiuPlayerState_MIN = STATE_NN_READY;
const TNiuNiuPlayerState TNiuNiuPlayerState_MAX = STATE_NN_CONTINUE_GAME;
const int TNiuNiuPlayerState_ARRAYSIZE = TNiuNiuPlayerState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TNiuNiuPlayerState_descriptor();
inline const ::std::string& TNiuNiuPlayerState_Name(TNiuNiuPlayerState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TNiuNiuPlayerState_descriptor(), value);
}
inline bool TNiuNiuPlayerState_Parse(
    const ::std::string& name, TNiuNiuPlayerState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TNiuNiuPlayerState>(
    TNiuNiuPlayerState_descriptor(), name, value);
}
enum TNiuNiuDirection {
  NIUNIU_DIREC_NULL = 0,
  NIUNIU_DIREC_ONE = 1,
  NIUNIU_DIREC_TWO = 2,
  NIUNIU_DIREC_THREE = 3,
  NIUNIU_DIREC_FOUR = 4,
  NIUNIU_DIREC_FIVE = 5
};
bool TNiuNiuDirection_IsValid(int value);
const TNiuNiuDirection TNiuNiuDirection_MIN = NIUNIU_DIREC_NULL;
const TNiuNiuDirection TNiuNiuDirection_MAX = NIUNIU_DIREC_FIVE;
const int TNiuNiuDirection_ARRAYSIZE = TNiuNiuDirection_MAX + 1;

const ::google::protobuf::EnumDescriptor* TNiuNiuDirection_descriptor();
inline const ::std::string& TNiuNiuDirection_Name(TNiuNiuDirection value) {
  return ::google::protobuf::internal::NameOfEnum(
    TNiuNiuDirection_descriptor(), value);
}
inline bool TNiuNiuDirection_Parse(
    const ::std::string& name, TNiuNiuDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TNiuNiuDirection>(
    TNiuNiuDirection_descriptor(), name, value);
}
enum TNiuNiuCT {
  CT_NN_NULL = 0,
  CT_NN_ONE = 1,
  CT_NN_TWO = 2,
  CT_NN_THREE = 3,
  CT_NN_FOUR = 4,
  CT_NN_FIVE = 5,
  CT_NN_SIX = 6,
  CT_NN_SEVEN = 7,
  CT_NN_EIGHT = 8,
  CT_NN_NINE = 9,
  CT_NN_NIUNIU = 10,
  CT_NN_YINNIU = 11,
  CT_NN_JINNIU = 12,
  CT_NN_WUXIAONIU = 13,
  CT_NN_ZHADANNIU = 14,
  CT_NN_YITIAOLONG = 15,
  CT_NN_MAXINVALID = 16
};
bool TNiuNiuCT_IsValid(int value);
const TNiuNiuCT TNiuNiuCT_MIN = CT_NN_NULL;
const TNiuNiuCT TNiuNiuCT_MAX = CT_NN_MAXINVALID;
const int TNiuNiuCT_ARRAYSIZE = TNiuNiuCT_MAX + 1;

const ::google::protobuf::EnumDescriptor* TNiuNiuCT_descriptor();
inline const ::std::string& TNiuNiuCT_Name(TNiuNiuCT value) {
  return ::google::protobuf::internal::NameOfEnum(
    TNiuNiuCT_descriptor(), value);
}
inline bool TNiuNiuCT_Parse(
    const ::std::string& name, TNiuNiuCT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TNiuNiuCT>(
    TNiuNiuCT_descriptor(), name, value);
}
// ===================================================================

class MsgPlayerAddPour : public ::google::protobuf::Message {
 public:
  MsgPlayerAddPour();
  virtual ~MsgPlayerAddPour();

  MsgPlayerAddPour(const MsgPlayerAddPour& from);

  inline MsgPlayerAddPour& operator=(const MsgPlayerAddPour& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerAddPour& default_instance();

  void Swap(MsgPlayerAddPour* other);

  // implements Message ----------------------------------------------

  MsgPlayerAddPour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerAddPour& from);
  void MergeFrom(const MsgPlayerAddPour& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPlayerAddPour)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_msg_5fniuniu_2eproto();
  friend void protobuf_AssignDesc_msg_5fniuniu_2eproto();
  friend void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerAddPour* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerSelectHandCard : public ::google::protobuf::Message {
 public:
  MsgPlayerSelectHandCard();
  virtual ~MsgPlayerSelectHandCard();

  MsgPlayerSelectHandCard(const MsgPlayerSelectHandCard& from);

  inline MsgPlayerSelectHandCard& operator=(const MsgPlayerSelectHandCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerSelectHandCard& default_instance();

  void Swap(MsgPlayerSelectHandCard* other);

  // implements Message ----------------------------------------------

  MsgPlayerSelectHandCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerSelectHandCard& from);
  void MergeFrom(const MsgPlayerSelectHandCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPlayerSelectHandCard)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_msg_5fniuniu_2eproto();
  friend void protobuf_AssignDesc_msg_5fniuniu_2eproto();
  friend void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerSelectHandCard* default_instance_;
};
// -------------------------------------------------------------------

class MsgNiuNiuPlayer : public ::google::protobuf::Message {
 public:
  MsgNiuNiuPlayer();
  virtual ~MsgNiuNiuPlayer();

  MsgNiuNiuPlayer(const MsgNiuNiuPlayer& from);

  inline MsgNiuNiuPlayer& operator=(const MsgNiuNiuPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNiuNiuPlayer& default_instance();

  void Swap(MsgNiuNiuPlayer* other);

  // implements Message ----------------------------------------------

  MsgNiuNiuPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNiuNiuPlayer& from);
  void MergeFrom(const MsgNiuNiuPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPlayerInfo player_base = 1;
  inline bool has_player_base() const;
  inline void clear_player_base();
  static const int kPlayerBaseFieldNumber = 1;
  inline const ::MsgPlayerInfo& player_base() const;
  inline ::MsgPlayerInfo* mutable_player_base();
  inline ::MsgPlayerInfo* release_player_base();
  inline void set_allocated_player_base(::MsgPlayerInfo* player_base);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 hand_count = 3;
  inline bool has_hand_count() const;
  inline void clear_hand_count();
  static const int kHandCountFieldNumber = 3;
  inline ::google::protobuf::uint32 hand_count() const;
  inline void set_hand_count(::google::protobuf::uint32 value);

  // repeated .MsgNiuNiuHandCardInfo hand_info = 4;
  inline int hand_info_size() const;
  inline void clear_hand_info();
  static const int kHandInfoFieldNumber = 4;
  inline const ::MsgNiuNiuHandCardInfo& hand_info(int index) const;
  inline ::MsgNiuNiuHandCardInfo* mutable_hand_info(int index);
  inline ::MsgNiuNiuHandCardInfo* add_hand_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo >&
      hand_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo >*
      mutable_hand_info();

  // optional uint32 seats = 5;
  inline bool has_seats() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 5;
  inline ::google::protobuf::uint32 seats() const;
  inline void set_seats(::google::protobuf::uint32 value);

  // optional int64 score = 6;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 6;
  inline ::google::protobuf::int64 score() const;
  inline void set_score(::google::protobuf::int64 value);

  // optional uint32 multiple = 7;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 7;
  inline ::google::protobuf::uint32 multiple() const;
  inline void set_multiple(::google::protobuf::uint32 value);

  // optional .MsgNNGameOverInfo OverInfo = 8;
  inline bool has_overinfo() const;
  inline void clear_overinfo();
  static const int kOverInfoFieldNumber = 8;
  inline const ::MsgNNGameOverInfo& overinfo() const;
  inline ::MsgNNGameOverInfo* mutable_overinfo();
  inline ::MsgNNGameOverInfo* release_overinfo();
  inline void set_allocated_overinfo(::MsgNNGameOverInfo* overinfo);

  // @@protoc_insertion_point(class_scope:MsgNiuNiuPlayer)
 private:
  inline void set_has_player_base();
  inline void clear_has_player_base();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_hand_count();
  inline void clear_has_hand_count();
  inline void set_has_seats();
  inline void clear_has_seats();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_multiple();
  inline void clear_has_multiple();
  inline void set_has_overinfo();
  inline void clear_has_overinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgPlayerInfo* player_base_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 hand_count_;
  ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo > hand_info_;
  ::google::protobuf::int64 score_;
  ::google::protobuf::uint32 seats_;
  ::google::protobuf::uint32 multiple_;
  ::MsgNNGameOverInfo* overinfo_;
  friend void  protobuf_AddDesc_msg_5fniuniu_2eproto();
  friend void protobuf_AssignDesc_msg_5fniuniu_2eproto();
  friend void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

  void InitAsDefaultInstance();
  static MsgNiuNiuPlayer* default_instance_;
};
// -------------------------------------------------------------------

class MsgNiuNiuShowHandCard : public ::google::protobuf::Message {
 public:
  MsgNiuNiuShowHandCard();
  virtual ~MsgNiuNiuShowHandCard();

  MsgNiuNiuShowHandCard(const MsgNiuNiuShowHandCard& from);

  inline MsgNiuNiuShowHandCard& operator=(const MsgNiuNiuShowHandCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNiuNiuShowHandCard& default_instance();

  void Swap(MsgNiuNiuShowHandCard* other);

  // implements Message ----------------------------------------------

  MsgNiuNiuShowHandCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNiuNiuShowHandCard& from);
  void MergeFrom(const MsgNiuNiuShowHandCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .MsgNiuNiuHandCardInfo hand_info = 2;
  inline int hand_info_size() const;
  inline void clear_hand_info();
  static const int kHandInfoFieldNumber = 2;
  inline const ::MsgNiuNiuHandCardInfo& hand_info(int index) const;
  inline ::MsgNiuNiuHandCardInfo* mutable_hand_info(int index);
  inline ::MsgNiuNiuHandCardInfo* add_hand_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo >&
      hand_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo >*
      mutable_hand_info();

  // @@protoc_insertion_point(class_scope:MsgNiuNiuShowHandCard)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo > hand_info_;
  friend void  protobuf_AddDesc_msg_5fniuniu_2eproto();
  friend void protobuf_AssignDesc_msg_5fniuniu_2eproto();
  friend void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

  void InitAsDefaultInstance();
  static MsgNiuNiuShowHandCard* default_instance_;
};
// -------------------------------------------------------------------

class MsgNiuNiuHandCardInfo : public ::google::protobuf::Message {
 public:
  MsgNiuNiuHandCardInfo();
  virtual ~MsgNiuNiuHandCardInfo();

  MsgNiuNiuHandCardInfo(const MsgNiuNiuHandCardInfo& from);

  inline MsgNiuNiuHandCardInfo& operator=(const MsgNiuNiuHandCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNiuNiuHandCardInfo& default_instance();

  void Swap(MsgNiuNiuHandCardInfo* other);

  // implements Message ----------------------------------------------

  MsgNiuNiuHandCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNiuNiuHandCardInfo& from);
  void MergeFrom(const MsgNiuNiuHandCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 card_list = 1;
  inline int card_list_size() const;
  inline void clear_card_list();
  static const int kCardListFieldNumber = 1;
  inline ::google::protobuf::uint32 card_list(int index) const;
  inline void set_card_list(int index, ::google::protobuf::uint32 value);
  inline void add_card_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_list();

  // optional uint32 card_type = 2;
  inline bool has_card_type() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 card_type() const;
  inline void set_card_type(::google::protobuf::uint32 value);

  // optional int64 showndown_score = 3;
  inline bool has_showndown_score() const;
  inline void clear_showndown_score();
  static const int kShowndownScoreFieldNumber = 3;
  inline ::google::protobuf::int64 showndown_score() const;
  inline void set_showndown_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgNiuNiuHandCardInfo)
 private:
  inline void set_has_card_type();
  inline void clear_has_card_type();
  inline void set_has_showndown_score();
  inline void clear_has_showndown_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_list_;
  ::google::protobuf::int64 showndown_score_;
  ::google::protobuf::uint32 card_type_;
  friend void  protobuf_AddDesc_msg_5fniuniu_2eproto();
  friend void protobuf_AssignDesc_msg_5fniuniu_2eproto();
  friend void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

  void InitAsDefaultInstance();
  static MsgNiuNiuHandCardInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgNiuNiuRoom : public ::google::protobuf::Message {
 public:
  MsgNiuNiuRoom();
  virtual ~MsgNiuNiuRoom();

  MsgNiuNiuRoom(const MsgNiuNiuRoom& from);

  inline MsgNiuNiuRoom& operator=(const MsgNiuNiuRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNiuNiuRoom& default_instance();

  void Swap(MsgNiuNiuRoom* other);

  // implements Message ----------------------------------------------

  MsgNiuNiuRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNiuNiuRoom& from);
  void MergeFrom(const MsgNiuNiuRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TNiuNiuState room_state = 1;
  inline bool has_room_state() const;
  inline void clear_room_state();
  static const int kRoomStateFieldNumber = 1;
  inline ::TNiuNiuState room_state() const;
  inline void set_room_state(::TNiuNiuState value);

  // optional uint32 state_time = 2;
  inline bool has_state_time() const;
  inline void clear_state_time();
  static const int kStateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 state_time() const;
  inline void set_state_time(::google::protobuf::uint32 value);

  // repeated .MsgNiuNiuPlayer player_list = 3;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  inline const ::MsgNiuNiuPlayer& player_list(int index) const;
  inline ::MsgNiuNiuPlayer* mutable_player_list(int index);
  inline ::MsgNiuNiuPlayer* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer >*
      mutable_player_list();

  // optional uint64 bank_id = 4;
  inline bool has_bank_id() const;
  inline void clear_bank_id();
  static const int kBankIdFieldNumber = 4;
  inline ::google::protobuf::uint64 bank_id() const;
  inline void set_bank_id(::google::protobuf::uint64 value);

  // optional uint64 room_id = 5;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 5;
  inline ::google::protobuf::uint64 room_id() const;
  inline void set_room_id(::google::protobuf::uint64 value);

  // optional uint32 game_count = 6;
  inline bool has_game_count() const;
  inline void clear_game_count();
  static const int kGameCountFieldNumber = 6;
  inline ::google::protobuf::uint32 game_count() const;
  inline void set_game_count(::google::protobuf::uint32 value);

  // optional .MsgCreatePrivateRoom private_room = 7;
  inline bool has_private_room() const;
  inline void clear_private_room();
  static const int kPrivateRoomFieldNumber = 7;
  inline const ::MsgCreatePrivateRoom& private_room() const;
  inline ::MsgCreatePrivateRoom* mutable_private_room();
  inline ::MsgCreatePrivateRoom* release_private_room();
  inline void set_allocated_private_room(::MsgCreatePrivateRoom* private_room);

  // optional .MsgRoleHostCount role_host = 8;
  inline bool has_role_host() const;
  inline void clear_role_host();
  static const int kRoleHostFieldNumber = 8;
  inline const ::MsgRoleHostCount& role_host() const;
  inline ::MsgRoleHostCount* mutable_role_host();
  inline ::MsgRoleHostCount* release_role_host();
  inline void set_allocated_role_host(::MsgRoleHostCount* role_host);

  // optional .MsgRoleStateCount role_state = 9;
  inline bool has_role_state() const;
  inline void clear_role_state();
  static const int kRoleStateFieldNumber = 9;
  inline const ::MsgRoleStateCount& role_state() const;
  inline ::MsgRoleStateCount* mutable_role_state();
  inline ::MsgRoleStateCount* release_role_state();
  inline void set_allocated_role_state(::MsgRoleStateCount* role_state);

  // optional bool relieve = 10;
  inline bool has_relieve() const;
  inline void clear_relieve();
  static const int kRelieveFieldNumber = 10;
  inline bool relieve() const;
  inline void set_relieve(bool value);

  // optional uint32 room_pay_type = 11;
  inline bool has_room_pay_type() const;
  inline void clear_room_pay_type();
  static const int kRoomPayTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 room_pay_type() const;
  inline void set_room_pay_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgNiuNiuRoom)
 private:
  inline void set_has_room_state();
  inline void clear_has_room_state();
  inline void set_has_state_time();
  inline void clear_has_state_time();
  inline void set_has_bank_id();
  inline void clear_has_bank_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_count();
  inline void clear_has_game_count();
  inline void set_has_private_room();
  inline void clear_has_private_room();
  inline void set_has_role_host();
  inline void clear_has_role_host();
  inline void set_has_role_state();
  inline void clear_has_role_state();
  inline void set_has_relieve();
  inline void clear_has_relieve();
  inline void set_has_room_pay_type();
  inline void clear_has_room_pay_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int room_state_;
  ::google::protobuf::uint32 state_time_;
  ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer > player_list_;
  ::google::protobuf::uint64 bank_id_;
  ::google::protobuf::uint64 room_id_;
  ::MsgCreatePrivateRoom* private_room_;
  ::MsgRoleHostCount* role_host_;
  ::google::protobuf::uint32 game_count_;
  bool relieve_;
  ::MsgRoleStateCount* role_state_;
  ::google::protobuf::uint32 room_pay_type_;
  friend void  protobuf_AddDesc_msg_5fniuniu_2eproto();
  friend void protobuf_AssignDesc_msg_5fniuniu_2eproto();
  friend void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

  void InitAsDefaultInstance();
  static MsgNiuNiuRoom* default_instance_;
};
// -------------------------------------------------------------------

class MsgNNGameOverInfo : public ::google::protobuf::Message {
 public:
  MsgNNGameOverInfo();
  virtual ~MsgNNGameOverInfo();

  MsgNNGameOverInfo(const MsgNNGameOverInfo& from);

  inline MsgNNGameOverInfo& operator=(const MsgNNGameOverInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNNGameOverInfo& default_instance();

  void Swap(MsgNNGameOverInfo* other);

  // implements Message ----------------------------------------------

  MsgNNGameOverInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNNGameOverInfo& from);
  void MergeFrom(const MsgNNGameOverInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 win_count = 1;
  inline bool has_win_count() const;
  inline void clear_win_count();
  static const int kWinCountFieldNumber = 1;
  inline ::google::protobuf::uint32 win_count() const;
  inline void set_win_count(::google::protobuf::uint32 value);

  // optional uint32 lose_count = 2;
  inline bool has_lose_count() const;
  inline void clear_lose_count();
  static const int kLoseCountFieldNumber = 2;
  inline ::google::protobuf::uint32 lose_count() const;
  inline void set_lose_count(::google::protobuf::uint32 value);

  // optional uint32 haveniu_count = 3;
  inline bool has_haveniu_count() const;
  inline void clear_haveniu_count();
  static const int kHaveniuCountFieldNumber = 3;
  inline ::google::protobuf::uint32 haveniu_count() const;
  inline void set_haveniu_count(::google::protobuf::uint32 value);

  // optional uint32 nullniu_count = 4;
  inline bool has_nullniu_count() const;
  inline void clear_nullniu_count();
  static const int kNullniuCountFieldNumber = 4;
  inline ::google::protobuf::uint32 nullniu_count() const;
  inline void set_nullniu_count(::google::protobuf::uint32 value);

  // optional uint32 specialniu_count = 5;
  inline bool has_specialniu_count() const;
  inline void clear_specialniu_count();
  static const int kSpecialniuCountFieldNumber = 5;
  inline ::google::protobuf::uint32 specialniu_count() const;
  inline void set_specialniu_count(::google::protobuf::uint32 value);

  // optional uint32 bank_count = 6;
  inline bool has_bank_count() const;
  inline void clear_bank_count();
  static const int kBankCountFieldNumber = 6;
  inline ::google::protobuf::uint32 bank_count() const;
  inline void set_bank_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgNNGameOverInfo)
 private:
  inline void set_has_win_count();
  inline void clear_has_win_count();
  inline void set_has_lose_count();
  inline void clear_has_lose_count();
  inline void set_has_haveniu_count();
  inline void clear_has_haveniu_count();
  inline void set_has_nullniu_count();
  inline void clear_has_nullniu_count();
  inline void set_has_specialniu_count();
  inline void clear_has_specialniu_count();
  inline void set_has_bank_count();
  inline void clear_has_bank_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 win_count_;
  ::google::protobuf::uint32 lose_count_;
  ::google::protobuf::uint32 haveniu_count_;
  ::google::protobuf::uint32 nullniu_count_;
  ::google::protobuf::uint32 specialniu_count_;
  ::google::protobuf::uint32 bank_count_;
  friend void  protobuf_AddDesc_msg_5fniuniu_2eproto();
  friend void protobuf_AssignDesc_msg_5fniuniu_2eproto();
  friend void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

  void InitAsDefaultInstance();
  static MsgNNGameOverInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgNiuNiuShowDown : public ::google::protobuf::Message {
 public:
  MsgNiuNiuShowDown();
  virtual ~MsgNiuNiuShowDown();

  MsgNiuNiuShowDown(const MsgNiuNiuShowDown& from);

  inline MsgNiuNiuShowDown& operator=(const MsgNiuNiuShowDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNiuNiuShowDown& default_instance();

  void Swap(MsgNiuNiuShowDown* other);

  // implements Message ----------------------------------------------

  MsgNiuNiuShowDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNiuNiuShowDown& from);
  void MergeFrom(const MsgNiuNiuShowDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TNiuNiuState room_state = 1;
  inline bool has_room_state() const;
  inline void clear_room_state();
  static const int kRoomStateFieldNumber = 1;
  inline ::TNiuNiuState room_state() const;
  inline void set_room_state(::TNiuNiuState value);

  // optional uint32 state_time = 2;
  inline bool has_state_time() const;
  inline void clear_state_time();
  static const int kStateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 state_time() const;
  inline void set_state_time(::google::protobuf::uint32 value);

  // repeated .MsgNiuNiuPlayer player_list = 3;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  inline const ::MsgNiuNiuPlayer& player_list(int index) const;
  inline ::MsgNiuNiuPlayer* mutable_player_list(int index);
  inline ::MsgNiuNiuPlayer* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer >*
      mutable_player_list();

  // optional uint64 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint64 room_id() const;
  inline void set_room_id(::google::protobuf::uint64 value);

  // optional uint32 game_count = 5;
  inline bool has_game_count() const;
  inline void clear_game_count();
  static const int kGameCountFieldNumber = 5;
  inline ::google::protobuf::uint32 game_count() const;
  inline void set_game_count(::google::protobuf::uint32 value);

  // optional uint32 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional bool game_over = 7;
  inline bool has_game_over() const;
  inline void clear_game_over();
  static const int kGameOverFieldNumber = 7;
  inline bool game_over() const;
  inline void set_game_over(bool value);

  // repeated .MsgNNIntegralCount integral_list = 8;
  inline int integral_list_size() const;
  inline void clear_integral_list();
  static const int kIntegralListFieldNumber = 8;
  inline const ::MsgNNIntegralCount& integral_list(int index) const;
  inline ::MsgNNIntegralCount* mutable_integral_list(int index);
  inline ::MsgNNIntegralCount* add_integral_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgNNIntegralCount >&
      integral_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgNNIntegralCount >*
      mutable_integral_list();

  // @@protoc_insertion_point(class_scope:MsgNiuNiuShowDown)
 private:
  inline void set_has_room_state();
  inline void clear_has_room_state();
  inline void set_has_state_time();
  inline void clear_has_state_time();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_count();
  inline void clear_has_game_count();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_game_over();
  inline void clear_has_game_over();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int room_state_;
  ::google::protobuf::uint32 state_time_;
  ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer > player_list_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 game_count_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::RepeatedPtrField< ::MsgNNIntegralCount > integral_list_;
  bool game_over_;
  friend void  protobuf_AddDesc_msg_5fniuniu_2eproto();
  friend void protobuf_AssignDesc_msg_5fniuniu_2eproto();
  friend void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

  void InitAsDefaultInstance();
  static MsgNiuNiuShowDown* default_instance_;
};
// -------------------------------------------------------------------

class MsgNNIntegralCount : public ::google::protobuf::Message {
 public:
  MsgNNIntegralCount();
  virtual ~MsgNNIntegralCount();

  MsgNNIntegralCount(const MsgNNIntegralCount& from);

  inline MsgNNIntegralCount& operator=(const MsgNNIntegralCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNNIntegralCount& default_instance();

  void Swap(MsgNNIntegralCount* other);

  // implements Message ----------------------------------------------

  MsgNNIntegralCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNNIntegralCount& from);
  void MergeFrom(const MsgNNIntegralCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgNNIntegralCount)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_msg_5fniuniu_2eproto();
  friend void protobuf_AssignDesc_msg_5fniuniu_2eproto();
  friend void protobuf_ShutdownFile_msg_5fniuniu_2eproto();

  void InitAsDefaultInstance();
  static MsgNNIntegralCount* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgPlayerAddPour

// optional uint64 id = 1;
inline bool MsgPlayerAddPour::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerAddPour::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerAddPour::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerAddPour::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MsgPlayerAddPour::id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerAddPour.id)
  return id_;
}
inline void MsgPlayerAddPour::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerAddPour.id)
}

// optional uint32 value = 2;
inline bool MsgPlayerAddPour::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerAddPour::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerAddPour::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerAddPour::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 MsgPlayerAddPour::value() const {
  // @@protoc_insertion_point(field_get:MsgPlayerAddPour.value)
  return value_;
}
inline void MsgPlayerAddPour::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerAddPour.value)
}

// -------------------------------------------------------------------

// MsgPlayerSelectHandCard

// optional uint64 id = 1;
inline bool MsgPlayerSelectHandCard::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerSelectHandCard::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerSelectHandCard::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerSelectHandCard::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MsgPlayerSelectHandCard::id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerSelectHandCard.id)
  return id_;
}
inline void MsgPlayerSelectHandCard::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerSelectHandCard.id)
}

// optional uint32 value = 2;
inline bool MsgPlayerSelectHandCard::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerSelectHandCard::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerSelectHandCard::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerSelectHandCard::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 MsgPlayerSelectHandCard::value() const {
  // @@protoc_insertion_point(field_get:MsgPlayerSelectHandCard.value)
  return value_;
}
inline void MsgPlayerSelectHandCard::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerSelectHandCard.value)
}

// -------------------------------------------------------------------

// MsgNiuNiuPlayer

// optional .MsgPlayerInfo player_base = 1;
inline bool MsgNiuNiuPlayer::has_player_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNiuNiuPlayer::set_has_player_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNiuNiuPlayer::clear_has_player_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNiuNiuPlayer::clear_player_base() {
  if (player_base_ != NULL) player_base_->::MsgPlayerInfo::Clear();
  clear_has_player_base();
}
inline const ::MsgPlayerInfo& MsgNiuNiuPlayer::player_base() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuPlayer.player_base)
  return player_base_ != NULL ? *player_base_ : *default_instance_->player_base_;
}
inline ::MsgPlayerInfo* MsgNiuNiuPlayer::mutable_player_base() {
  set_has_player_base();
  if (player_base_ == NULL) player_base_ = new ::MsgPlayerInfo;
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuPlayer.player_base)
  return player_base_;
}
inline ::MsgPlayerInfo* MsgNiuNiuPlayer::release_player_base() {
  clear_has_player_base();
  ::MsgPlayerInfo* temp = player_base_;
  player_base_ = NULL;
  return temp;
}
inline void MsgNiuNiuPlayer::set_allocated_player_base(::MsgPlayerInfo* player_base) {
  delete player_base_;
  player_base_ = player_base;
  if (player_base) {
    set_has_player_base();
  } else {
    clear_has_player_base();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgNiuNiuPlayer.player_base)
}

// optional uint32 state = 2;
inline bool MsgNiuNiuPlayer::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNiuNiuPlayer::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNiuNiuPlayer::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNiuNiuPlayer::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 MsgNiuNiuPlayer::state() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuPlayer.state)
  return state_;
}
inline void MsgNiuNiuPlayer::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuPlayer.state)
}

// optional uint32 hand_count = 3;
inline bool MsgNiuNiuPlayer::has_hand_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNiuNiuPlayer::set_has_hand_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNiuNiuPlayer::clear_has_hand_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNiuNiuPlayer::clear_hand_count() {
  hand_count_ = 0u;
  clear_has_hand_count();
}
inline ::google::protobuf::uint32 MsgNiuNiuPlayer::hand_count() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuPlayer.hand_count)
  return hand_count_;
}
inline void MsgNiuNiuPlayer::set_hand_count(::google::protobuf::uint32 value) {
  set_has_hand_count();
  hand_count_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuPlayer.hand_count)
}

// repeated .MsgNiuNiuHandCardInfo hand_info = 4;
inline int MsgNiuNiuPlayer::hand_info_size() const {
  return hand_info_.size();
}
inline void MsgNiuNiuPlayer::clear_hand_info() {
  hand_info_.Clear();
}
inline const ::MsgNiuNiuHandCardInfo& MsgNiuNiuPlayer::hand_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuPlayer.hand_info)
  return hand_info_.Get(index);
}
inline ::MsgNiuNiuHandCardInfo* MsgNiuNiuPlayer::mutable_hand_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuPlayer.hand_info)
  return hand_info_.Mutable(index);
}
inline ::MsgNiuNiuHandCardInfo* MsgNiuNiuPlayer::add_hand_info() {
  // @@protoc_insertion_point(field_add:MsgNiuNiuPlayer.hand_info)
  return hand_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo >&
MsgNiuNiuPlayer::hand_info() const {
  // @@protoc_insertion_point(field_list:MsgNiuNiuPlayer.hand_info)
  return hand_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo >*
MsgNiuNiuPlayer::mutable_hand_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgNiuNiuPlayer.hand_info)
  return &hand_info_;
}

// optional uint32 seats = 5;
inline bool MsgNiuNiuPlayer::has_seats() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgNiuNiuPlayer::set_has_seats() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgNiuNiuPlayer::clear_has_seats() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgNiuNiuPlayer::clear_seats() {
  seats_ = 0u;
  clear_has_seats();
}
inline ::google::protobuf::uint32 MsgNiuNiuPlayer::seats() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuPlayer.seats)
  return seats_;
}
inline void MsgNiuNiuPlayer::set_seats(::google::protobuf::uint32 value) {
  set_has_seats();
  seats_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuPlayer.seats)
}

// optional int64 score = 6;
inline bool MsgNiuNiuPlayer::has_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgNiuNiuPlayer::set_has_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgNiuNiuPlayer::clear_has_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgNiuNiuPlayer::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::int64 MsgNiuNiuPlayer::score() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuPlayer.score)
  return score_;
}
inline void MsgNiuNiuPlayer::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuPlayer.score)
}

// optional uint32 multiple = 7;
inline bool MsgNiuNiuPlayer::has_multiple() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgNiuNiuPlayer::set_has_multiple() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgNiuNiuPlayer::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgNiuNiuPlayer::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 MsgNiuNiuPlayer::multiple() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuPlayer.multiple)
  return multiple_;
}
inline void MsgNiuNiuPlayer::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuPlayer.multiple)
}

// optional .MsgNNGameOverInfo OverInfo = 8;
inline bool MsgNiuNiuPlayer::has_overinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgNiuNiuPlayer::set_has_overinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgNiuNiuPlayer::clear_has_overinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgNiuNiuPlayer::clear_overinfo() {
  if (overinfo_ != NULL) overinfo_->::MsgNNGameOverInfo::Clear();
  clear_has_overinfo();
}
inline const ::MsgNNGameOverInfo& MsgNiuNiuPlayer::overinfo() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuPlayer.OverInfo)
  return overinfo_ != NULL ? *overinfo_ : *default_instance_->overinfo_;
}
inline ::MsgNNGameOverInfo* MsgNiuNiuPlayer::mutable_overinfo() {
  set_has_overinfo();
  if (overinfo_ == NULL) overinfo_ = new ::MsgNNGameOverInfo;
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuPlayer.OverInfo)
  return overinfo_;
}
inline ::MsgNNGameOverInfo* MsgNiuNiuPlayer::release_overinfo() {
  clear_has_overinfo();
  ::MsgNNGameOverInfo* temp = overinfo_;
  overinfo_ = NULL;
  return temp;
}
inline void MsgNiuNiuPlayer::set_allocated_overinfo(::MsgNNGameOverInfo* overinfo) {
  delete overinfo_;
  overinfo_ = overinfo;
  if (overinfo) {
    set_has_overinfo();
  } else {
    clear_has_overinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgNiuNiuPlayer.OverInfo)
}

// -------------------------------------------------------------------

// MsgNiuNiuShowHandCard

// optional uint64 id = 1;
inline bool MsgNiuNiuShowHandCard::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNiuNiuShowHandCard::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNiuNiuShowHandCard::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNiuNiuShowHandCard::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MsgNiuNiuShowHandCard::id() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowHandCard.id)
  return id_;
}
inline void MsgNiuNiuShowHandCard::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuShowHandCard.id)
}

// repeated .MsgNiuNiuHandCardInfo hand_info = 2;
inline int MsgNiuNiuShowHandCard::hand_info_size() const {
  return hand_info_.size();
}
inline void MsgNiuNiuShowHandCard::clear_hand_info() {
  hand_info_.Clear();
}
inline const ::MsgNiuNiuHandCardInfo& MsgNiuNiuShowHandCard::hand_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowHandCard.hand_info)
  return hand_info_.Get(index);
}
inline ::MsgNiuNiuHandCardInfo* MsgNiuNiuShowHandCard::mutable_hand_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuShowHandCard.hand_info)
  return hand_info_.Mutable(index);
}
inline ::MsgNiuNiuHandCardInfo* MsgNiuNiuShowHandCard::add_hand_info() {
  // @@protoc_insertion_point(field_add:MsgNiuNiuShowHandCard.hand_info)
  return hand_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo >&
MsgNiuNiuShowHandCard::hand_info() const {
  // @@protoc_insertion_point(field_list:MsgNiuNiuShowHandCard.hand_info)
  return hand_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuHandCardInfo >*
MsgNiuNiuShowHandCard::mutable_hand_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgNiuNiuShowHandCard.hand_info)
  return &hand_info_;
}

// -------------------------------------------------------------------

// MsgNiuNiuHandCardInfo

// repeated uint32 card_list = 1;
inline int MsgNiuNiuHandCardInfo::card_list_size() const {
  return card_list_.size();
}
inline void MsgNiuNiuHandCardInfo::clear_card_list() {
  card_list_.Clear();
}
inline ::google::protobuf::uint32 MsgNiuNiuHandCardInfo::card_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuHandCardInfo.card_list)
  return card_list_.Get(index);
}
inline void MsgNiuNiuHandCardInfo::set_card_list(int index, ::google::protobuf::uint32 value) {
  card_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgNiuNiuHandCardInfo.card_list)
}
inline void MsgNiuNiuHandCardInfo::add_card_list(::google::protobuf::uint32 value) {
  card_list_.Add(value);
  // @@protoc_insertion_point(field_add:MsgNiuNiuHandCardInfo.card_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgNiuNiuHandCardInfo::card_list() const {
  // @@protoc_insertion_point(field_list:MsgNiuNiuHandCardInfo.card_list)
  return card_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgNiuNiuHandCardInfo::mutable_card_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgNiuNiuHandCardInfo.card_list)
  return &card_list_;
}

// optional uint32 card_type = 2;
inline bool MsgNiuNiuHandCardInfo::has_card_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNiuNiuHandCardInfo::set_has_card_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNiuNiuHandCardInfo::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNiuNiuHandCardInfo::clear_card_type() {
  card_type_ = 0u;
  clear_has_card_type();
}
inline ::google::protobuf::uint32 MsgNiuNiuHandCardInfo::card_type() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuHandCardInfo.card_type)
  return card_type_;
}
inline void MsgNiuNiuHandCardInfo::set_card_type(::google::protobuf::uint32 value) {
  set_has_card_type();
  card_type_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuHandCardInfo.card_type)
}

// optional int64 showndown_score = 3;
inline bool MsgNiuNiuHandCardInfo::has_showndown_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNiuNiuHandCardInfo::set_has_showndown_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNiuNiuHandCardInfo::clear_has_showndown_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNiuNiuHandCardInfo::clear_showndown_score() {
  showndown_score_ = GOOGLE_LONGLONG(0);
  clear_has_showndown_score();
}
inline ::google::protobuf::int64 MsgNiuNiuHandCardInfo::showndown_score() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuHandCardInfo.showndown_score)
  return showndown_score_;
}
inline void MsgNiuNiuHandCardInfo::set_showndown_score(::google::protobuf::int64 value) {
  set_has_showndown_score();
  showndown_score_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuHandCardInfo.showndown_score)
}

// -------------------------------------------------------------------

// MsgNiuNiuRoom

// optional .TNiuNiuState room_state = 1;
inline bool MsgNiuNiuRoom::has_room_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNiuNiuRoom::set_has_room_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNiuNiuRoom::clear_has_room_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNiuNiuRoom::clear_room_state() {
  room_state_ = 0;
  clear_has_room_state();
}
inline ::TNiuNiuState MsgNiuNiuRoom::room_state() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.room_state)
  return static_cast< ::TNiuNiuState >(room_state_);
}
inline void MsgNiuNiuRoom::set_room_state(::TNiuNiuState value) {
  assert(::TNiuNiuState_IsValid(value));
  set_has_room_state();
  room_state_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuRoom.room_state)
}

// optional uint32 state_time = 2;
inline bool MsgNiuNiuRoom::has_state_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNiuNiuRoom::set_has_state_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNiuNiuRoom::clear_has_state_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNiuNiuRoom::clear_state_time() {
  state_time_ = 0u;
  clear_has_state_time();
}
inline ::google::protobuf::uint32 MsgNiuNiuRoom::state_time() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.state_time)
  return state_time_;
}
inline void MsgNiuNiuRoom::set_state_time(::google::protobuf::uint32 value) {
  set_has_state_time();
  state_time_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuRoom.state_time)
}

// repeated .MsgNiuNiuPlayer player_list = 3;
inline int MsgNiuNiuRoom::player_list_size() const {
  return player_list_.size();
}
inline void MsgNiuNiuRoom::clear_player_list() {
  player_list_.Clear();
}
inline const ::MsgNiuNiuPlayer& MsgNiuNiuRoom::player_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.player_list)
  return player_list_.Get(index);
}
inline ::MsgNiuNiuPlayer* MsgNiuNiuRoom::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuRoom.player_list)
  return player_list_.Mutable(index);
}
inline ::MsgNiuNiuPlayer* MsgNiuNiuRoom::add_player_list() {
  // @@protoc_insertion_point(field_add:MsgNiuNiuRoom.player_list)
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer >&
MsgNiuNiuRoom::player_list() const {
  // @@protoc_insertion_point(field_list:MsgNiuNiuRoom.player_list)
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer >*
MsgNiuNiuRoom::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgNiuNiuRoom.player_list)
  return &player_list_;
}

// optional uint64 bank_id = 4;
inline bool MsgNiuNiuRoom::has_bank_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNiuNiuRoom::set_has_bank_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNiuNiuRoom::clear_has_bank_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNiuNiuRoom::clear_bank_id() {
  bank_id_ = GOOGLE_ULONGLONG(0);
  clear_has_bank_id();
}
inline ::google::protobuf::uint64 MsgNiuNiuRoom::bank_id() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.bank_id)
  return bank_id_;
}
inline void MsgNiuNiuRoom::set_bank_id(::google::protobuf::uint64 value) {
  set_has_bank_id();
  bank_id_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuRoom.bank_id)
}

// optional uint64 room_id = 5;
inline bool MsgNiuNiuRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgNiuNiuRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgNiuNiuRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgNiuNiuRoom::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
  clear_has_room_id();
}
inline ::google::protobuf::uint64 MsgNiuNiuRoom::room_id() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.room_id)
  return room_id_;
}
inline void MsgNiuNiuRoom::set_room_id(::google::protobuf::uint64 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuRoom.room_id)
}

// optional uint32 game_count = 6;
inline bool MsgNiuNiuRoom::has_game_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgNiuNiuRoom::set_has_game_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgNiuNiuRoom::clear_has_game_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgNiuNiuRoom::clear_game_count() {
  game_count_ = 0u;
  clear_has_game_count();
}
inline ::google::protobuf::uint32 MsgNiuNiuRoom::game_count() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.game_count)
  return game_count_;
}
inline void MsgNiuNiuRoom::set_game_count(::google::protobuf::uint32 value) {
  set_has_game_count();
  game_count_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuRoom.game_count)
}

// optional .MsgCreatePrivateRoom private_room = 7;
inline bool MsgNiuNiuRoom::has_private_room() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgNiuNiuRoom::set_has_private_room() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgNiuNiuRoom::clear_has_private_room() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgNiuNiuRoom::clear_private_room() {
  if (private_room_ != NULL) private_room_->::MsgCreatePrivateRoom::Clear();
  clear_has_private_room();
}
inline const ::MsgCreatePrivateRoom& MsgNiuNiuRoom::private_room() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.private_room)
  return private_room_ != NULL ? *private_room_ : *default_instance_->private_room_;
}
inline ::MsgCreatePrivateRoom* MsgNiuNiuRoom::mutable_private_room() {
  set_has_private_room();
  if (private_room_ == NULL) private_room_ = new ::MsgCreatePrivateRoom;
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuRoom.private_room)
  return private_room_;
}
inline ::MsgCreatePrivateRoom* MsgNiuNiuRoom::release_private_room() {
  clear_has_private_room();
  ::MsgCreatePrivateRoom* temp = private_room_;
  private_room_ = NULL;
  return temp;
}
inline void MsgNiuNiuRoom::set_allocated_private_room(::MsgCreatePrivateRoom* private_room) {
  delete private_room_;
  private_room_ = private_room;
  if (private_room) {
    set_has_private_room();
  } else {
    clear_has_private_room();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgNiuNiuRoom.private_room)
}

// optional .MsgRoleHostCount role_host = 8;
inline bool MsgNiuNiuRoom::has_role_host() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgNiuNiuRoom::set_has_role_host() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgNiuNiuRoom::clear_has_role_host() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgNiuNiuRoom::clear_role_host() {
  if (role_host_ != NULL) role_host_->::MsgRoleHostCount::Clear();
  clear_has_role_host();
}
inline const ::MsgRoleHostCount& MsgNiuNiuRoom::role_host() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.role_host)
  return role_host_ != NULL ? *role_host_ : *default_instance_->role_host_;
}
inline ::MsgRoleHostCount* MsgNiuNiuRoom::mutable_role_host() {
  set_has_role_host();
  if (role_host_ == NULL) role_host_ = new ::MsgRoleHostCount;
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuRoom.role_host)
  return role_host_;
}
inline ::MsgRoleHostCount* MsgNiuNiuRoom::release_role_host() {
  clear_has_role_host();
  ::MsgRoleHostCount* temp = role_host_;
  role_host_ = NULL;
  return temp;
}
inline void MsgNiuNiuRoom::set_allocated_role_host(::MsgRoleHostCount* role_host) {
  delete role_host_;
  role_host_ = role_host;
  if (role_host) {
    set_has_role_host();
  } else {
    clear_has_role_host();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgNiuNiuRoom.role_host)
}

// optional .MsgRoleStateCount role_state = 9;
inline bool MsgNiuNiuRoom::has_role_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgNiuNiuRoom::set_has_role_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgNiuNiuRoom::clear_has_role_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgNiuNiuRoom::clear_role_state() {
  if (role_state_ != NULL) role_state_->::MsgRoleStateCount::Clear();
  clear_has_role_state();
}
inline const ::MsgRoleStateCount& MsgNiuNiuRoom::role_state() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.role_state)
  return role_state_ != NULL ? *role_state_ : *default_instance_->role_state_;
}
inline ::MsgRoleStateCount* MsgNiuNiuRoom::mutable_role_state() {
  set_has_role_state();
  if (role_state_ == NULL) role_state_ = new ::MsgRoleStateCount;
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuRoom.role_state)
  return role_state_;
}
inline ::MsgRoleStateCount* MsgNiuNiuRoom::release_role_state() {
  clear_has_role_state();
  ::MsgRoleStateCount* temp = role_state_;
  role_state_ = NULL;
  return temp;
}
inline void MsgNiuNiuRoom::set_allocated_role_state(::MsgRoleStateCount* role_state) {
  delete role_state_;
  role_state_ = role_state;
  if (role_state) {
    set_has_role_state();
  } else {
    clear_has_role_state();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgNiuNiuRoom.role_state)
}

// optional bool relieve = 10;
inline bool MsgNiuNiuRoom::has_relieve() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgNiuNiuRoom::set_has_relieve() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgNiuNiuRoom::clear_has_relieve() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgNiuNiuRoom::clear_relieve() {
  relieve_ = false;
  clear_has_relieve();
}
inline bool MsgNiuNiuRoom::relieve() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.relieve)
  return relieve_;
}
inline void MsgNiuNiuRoom::set_relieve(bool value) {
  set_has_relieve();
  relieve_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuRoom.relieve)
}

// optional uint32 room_pay_type = 11;
inline bool MsgNiuNiuRoom::has_room_pay_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgNiuNiuRoom::set_has_room_pay_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgNiuNiuRoom::clear_has_room_pay_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgNiuNiuRoom::clear_room_pay_type() {
  room_pay_type_ = 0u;
  clear_has_room_pay_type();
}
inline ::google::protobuf::uint32 MsgNiuNiuRoom::room_pay_type() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuRoom.room_pay_type)
  return room_pay_type_;
}
inline void MsgNiuNiuRoom::set_room_pay_type(::google::protobuf::uint32 value) {
  set_has_room_pay_type();
  room_pay_type_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuRoom.room_pay_type)
}

// -------------------------------------------------------------------

// MsgNNGameOverInfo

// optional uint32 win_count = 1;
inline bool MsgNNGameOverInfo::has_win_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNNGameOverInfo::set_has_win_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNNGameOverInfo::clear_has_win_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNNGameOverInfo::clear_win_count() {
  win_count_ = 0u;
  clear_has_win_count();
}
inline ::google::protobuf::uint32 MsgNNGameOverInfo::win_count() const {
  // @@protoc_insertion_point(field_get:MsgNNGameOverInfo.win_count)
  return win_count_;
}
inline void MsgNNGameOverInfo::set_win_count(::google::protobuf::uint32 value) {
  set_has_win_count();
  win_count_ = value;
  // @@protoc_insertion_point(field_set:MsgNNGameOverInfo.win_count)
}

// optional uint32 lose_count = 2;
inline bool MsgNNGameOverInfo::has_lose_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNNGameOverInfo::set_has_lose_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNNGameOverInfo::clear_has_lose_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNNGameOverInfo::clear_lose_count() {
  lose_count_ = 0u;
  clear_has_lose_count();
}
inline ::google::protobuf::uint32 MsgNNGameOverInfo::lose_count() const {
  // @@protoc_insertion_point(field_get:MsgNNGameOverInfo.lose_count)
  return lose_count_;
}
inline void MsgNNGameOverInfo::set_lose_count(::google::protobuf::uint32 value) {
  set_has_lose_count();
  lose_count_ = value;
  // @@protoc_insertion_point(field_set:MsgNNGameOverInfo.lose_count)
}

// optional uint32 haveniu_count = 3;
inline bool MsgNNGameOverInfo::has_haveniu_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNNGameOverInfo::set_has_haveniu_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNNGameOverInfo::clear_has_haveniu_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNNGameOverInfo::clear_haveniu_count() {
  haveniu_count_ = 0u;
  clear_has_haveniu_count();
}
inline ::google::protobuf::uint32 MsgNNGameOverInfo::haveniu_count() const {
  // @@protoc_insertion_point(field_get:MsgNNGameOverInfo.haveniu_count)
  return haveniu_count_;
}
inline void MsgNNGameOverInfo::set_haveniu_count(::google::protobuf::uint32 value) {
  set_has_haveniu_count();
  haveniu_count_ = value;
  // @@protoc_insertion_point(field_set:MsgNNGameOverInfo.haveniu_count)
}

// optional uint32 nullniu_count = 4;
inline bool MsgNNGameOverInfo::has_nullniu_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNNGameOverInfo::set_has_nullniu_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNNGameOverInfo::clear_has_nullniu_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNNGameOverInfo::clear_nullniu_count() {
  nullniu_count_ = 0u;
  clear_has_nullniu_count();
}
inline ::google::protobuf::uint32 MsgNNGameOverInfo::nullniu_count() const {
  // @@protoc_insertion_point(field_get:MsgNNGameOverInfo.nullniu_count)
  return nullniu_count_;
}
inline void MsgNNGameOverInfo::set_nullniu_count(::google::protobuf::uint32 value) {
  set_has_nullniu_count();
  nullniu_count_ = value;
  // @@protoc_insertion_point(field_set:MsgNNGameOverInfo.nullniu_count)
}

// optional uint32 specialniu_count = 5;
inline bool MsgNNGameOverInfo::has_specialniu_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgNNGameOverInfo::set_has_specialniu_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgNNGameOverInfo::clear_has_specialniu_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgNNGameOverInfo::clear_specialniu_count() {
  specialniu_count_ = 0u;
  clear_has_specialniu_count();
}
inline ::google::protobuf::uint32 MsgNNGameOverInfo::specialniu_count() const {
  // @@protoc_insertion_point(field_get:MsgNNGameOverInfo.specialniu_count)
  return specialniu_count_;
}
inline void MsgNNGameOverInfo::set_specialniu_count(::google::protobuf::uint32 value) {
  set_has_specialniu_count();
  specialniu_count_ = value;
  // @@protoc_insertion_point(field_set:MsgNNGameOverInfo.specialniu_count)
}

// optional uint32 bank_count = 6;
inline bool MsgNNGameOverInfo::has_bank_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgNNGameOverInfo::set_has_bank_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgNNGameOverInfo::clear_has_bank_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgNNGameOverInfo::clear_bank_count() {
  bank_count_ = 0u;
  clear_has_bank_count();
}
inline ::google::protobuf::uint32 MsgNNGameOverInfo::bank_count() const {
  // @@protoc_insertion_point(field_get:MsgNNGameOverInfo.bank_count)
  return bank_count_;
}
inline void MsgNNGameOverInfo::set_bank_count(::google::protobuf::uint32 value) {
  set_has_bank_count();
  bank_count_ = value;
  // @@protoc_insertion_point(field_set:MsgNNGameOverInfo.bank_count)
}

// -------------------------------------------------------------------

// MsgNiuNiuShowDown

// optional .TNiuNiuState room_state = 1;
inline bool MsgNiuNiuShowDown::has_room_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNiuNiuShowDown::set_has_room_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNiuNiuShowDown::clear_has_room_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNiuNiuShowDown::clear_room_state() {
  room_state_ = 0;
  clear_has_room_state();
}
inline ::TNiuNiuState MsgNiuNiuShowDown::room_state() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowDown.room_state)
  return static_cast< ::TNiuNiuState >(room_state_);
}
inline void MsgNiuNiuShowDown::set_room_state(::TNiuNiuState value) {
  assert(::TNiuNiuState_IsValid(value));
  set_has_room_state();
  room_state_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuShowDown.room_state)
}

// optional uint32 state_time = 2;
inline bool MsgNiuNiuShowDown::has_state_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNiuNiuShowDown::set_has_state_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNiuNiuShowDown::clear_has_state_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNiuNiuShowDown::clear_state_time() {
  state_time_ = 0u;
  clear_has_state_time();
}
inline ::google::protobuf::uint32 MsgNiuNiuShowDown::state_time() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowDown.state_time)
  return state_time_;
}
inline void MsgNiuNiuShowDown::set_state_time(::google::protobuf::uint32 value) {
  set_has_state_time();
  state_time_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuShowDown.state_time)
}

// repeated .MsgNiuNiuPlayer player_list = 3;
inline int MsgNiuNiuShowDown::player_list_size() const {
  return player_list_.size();
}
inline void MsgNiuNiuShowDown::clear_player_list() {
  player_list_.Clear();
}
inline const ::MsgNiuNiuPlayer& MsgNiuNiuShowDown::player_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowDown.player_list)
  return player_list_.Get(index);
}
inline ::MsgNiuNiuPlayer* MsgNiuNiuShowDown::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuShowDown.player_list)
  return player_list_.Mutable(index);
}
inline ::MsgNiuNiuPlayer* MsgNiuNiuShowDown::add_player_list() {
  // @@protoc_insertion_point(field_add:MsgNiuNiuShowDown.player_list)
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer >&
MsgNiuNiuShowDown::player_list() const {
  // @@protoc_insertion_point(field_list:MsgNiuNiuShowDown.player_list)
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgNiuNiuPlayer >*
MsgNiuNiuShowDown::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgNiuNiuShowDown.player_list)
  return &player_list_;
}

// optional uint64 room_id = 4;
inline bool MsgNiuNiuShowDown::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNiuNiuShowDown::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNiuNiuShowDown::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNiuNiuShowDown::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
  clear_has_room_id();
}
inline ::google::protobuf::uint64 MsgNiuNiuShowDown::room_id() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowDown.room_id)
  return room_id_;
}
inline void MsgNiuNiuShowDown::set_room_id(::google::protobuf::uint64 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuShowDown.room_id)
}

// optional uint32 game_count = 5;
inline bool MsgNiuNiuShowDown::has_game_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgNiuNiuShowDown::set_has_game_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgNiuNiuShowDown::clear_has_game_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgNiuNiuShowDown::clear_game_count() {
  game_count_ = 0u;
  clear_has_game_count();
}
inline ::google::protobuf::uint32 MsgNiuNiuShowDown::game_count() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowDown.game_count)
  return game_count_;
}
inline void MsgNiuNiuShowDown::set_game_count(::google::protobuf::uint32 value) {
  set_has_game_count();
  game_count_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuShowDown.game_count)
}

// optional uint32 time = 6;
inline bool MsgNiuNiuShowDown::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgNiuNiuShowDown::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgNiuNiuShowDown::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgNiuNiuShowDown::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 MsgNiuNiuShowDown::time() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowDown.time)
  return time_;
}
inline void MsgNiuNiuShowDown::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuShowDown.time)
}

// optional bool game_over = 7;
inline bool MsgNiuNiuShowDown::has_game_over() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgNiuNiuShowDown::set_has_game_over() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgNiuNiuShowDown::clear_has_game_over() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgNiuNiuShowDown::clear_game_over() {
  game_over_ = false;
  clear_has_game_over();
}
inline bool MsgNiuNiuShowDown::game_over() const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowDown.game_over)
  return game_over_;
}
inline void MsgNiuNiuShowDown::set_game_over(bool value) {
  set_has_game_over();
  game_over_ = value;
  // @@protoc_insertion_point(field_set:MsgNiuNiuShowDown.game_over)
}

// repeated .MsgNNIntegralCount integral_list = 8;
inline int MsgNiuNiuShowDown::integral_list_size() const {
  return integral_list_.size();
}
inline void MsgNiuNiuShowDown::clear_integral_list() {
  integral_list_.Clear();
}
inline const ::MsgNNIntegralCount& MsgNiuNiuShowDown::integral_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgNiuNiuShowDown.integral_list)
  return integral_list_.Get(index);
}
inline ::MsgNNIntegralCount* MsgNiuNiuShowDown::mutable_integral_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgNiuNiuShowDown.integral_list)
  return integral_list_.Mutable(index);
}
inline ::MsgNNIntegralCount* MsgNiuNiuShowDown::add_integral_list() {
  // @@protoc_insertion_point(field_add:MsgNiuNiuShowDown.integral_list)
  return integral_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgNNIntegralCount >&
MsgNiuNiuShowDown::integral_list() const {
  // @@protoc_insertion_point(field_list:MsgNiuNiuShowDown.integral_list)
  return integral_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgNNIntegralCount >*
MsgNiuNiuShowDown::mutable_integral_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgNiuNiuShowDown.integral_list)
  return &integral_list_;
}

// -------------------------------------------------------------------

// MsgNNIntegralCount

// optional uint64 roleid = 1;
inline bool MsgNNIntegralCount::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNNIntegralCount::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNNIntegralCount::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNNIntegralCount::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 MsgNNIntegralCount::roleid() const {
  // @@protoc_insertion_point(field_get:MsgNNIntegralCount.roleid)
  return roleid_;
}
inline void MsgNNIntegralCount::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:MsgNNIntegralCount.roleid)
}

// optional uint32 count = 2;
inline bool MsgNNIntegralCount::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNNIntegralCount::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNNIntegralCount::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNNIntegralCount::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 MsgNNIntegralCount::count() const {
  // @@protoc_insertion_point(field_get:MsgNNIntegralCount.count)
  return count_;
}
inline void MsgNNIntegralCount::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:MsgNNIntegralCount.count)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TNiuNiuState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TNiuNiuState>() {
  return ::TNiuNiuState_descriptor();
}
template <> struct is_proto_enum< ::TNiuNiuPlayerState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TNiuNiuPlayerState>() {
  return ::TNiuNiuPlayerState_descriptor();
}
template <> struct is_proto_enum< ::TNiuNiuDirection> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TNiuNiuDirection>() {
  return ::TNiuNiuDirection_descriptor();
}
template <> struct is_proto_enum< ::TNiuNiuCT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TNiuNiuCT>() {
  return ::TNiuNiuCT_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fniuniu_2eproto__INCLUDED
