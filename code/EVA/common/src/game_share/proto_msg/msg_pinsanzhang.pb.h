// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_pinsanzhang.proto

#ifndef PROTOBUF_msg_5fpinsanzhang_2eproto__INCLUDED
#define PROTOBUF_msg_5fpinsanzhang_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "public_pro.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

class MsgPSZPlayerAddPour;
class MsgPlayerFollowPour;
class MsgPinSanZhangPlayer;
class MsgPSZAction;
class MsgPSZSPlayerCardInfo;
class MsgPSZSHandCardInfo;
class MsgPSZSComparePlayerInfo;
class MsgPSZSComparePlayerResult;
class MsgCompareLoseInfo;
class MsgPinSanZhangRoom;
class MsgPSZGameOverInfo;
class MsgPinSanZhangShowDown;
class MsgPSZIntegralCount;

enum TPinSanZhangState {
  TPinSanZhangStateWait = 0,
  TPinSanZhangCheckStartGame = 1,
  TPinSanZhangStartGame = 2,
  TPinSanZhangSendHandCard = 3,
  TPinSanZhangWaitAddPour = 4,
  TPinSanZhangAction = 5,
  TPinSanZhangCompareCard = 6,
  TPinSanZhangCompareCardFinish = 7,
  TPinSanZhangWaitShowDown = 8,
  TPinSanZhangStateShowDown = 9,
  TPinSanZhangStateRelieveRoom = 10
};
bool TPinSanZhangState_IsValid(int value);
const TPinSanZhangState TPinSanZhangState_MIN = TPinSanZhangStateWait;
const TPinSanZhangState TPinSanZhangState_MAX = TPinSanZhangStateRelieveRoom;
const int TPinSanZhangState_ARRAYSIZE = TPinSanZhangState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TPinSanZhangState_descriptor();
inline const ::std::string& TPinSanZhangState_Name(TPinSanZhangState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TPinSanZhangState_descriptor(), value);
}
inline bool TPinSanZhangState_Parse(
    const ::std::string& name, TPinSanZhangState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPinSanZhangState>(
    TPinSanZhangState_descriptor(), name, value);
}
enum TPSZPlayerState {
  STATE_PSZ_READY = 1,
  STATE_PSZ_NEWROLE = 2,
  STATE_PSZ_ROOM_OWNER = 4,
  STATE_PSZ_RELIEVE = 8,
  STATE_PSZ_LEAVE = 16,
  STATE_PSZ_LIMIT = 32,
  STATE_PSZ_OFFLINE = 64,
  STATE_PSZ_BANK = 128,
  STATE_PSZ_TUOGUAN = 256,
  STATE_PSZ_CONTINUE_GAME = 512,
  STATE_PSZ_ALREADYSEECARD = 1024,
  STATE_PSZ_GIVEUPCARD = 2048,
  STATE_PSZ_LOSEROLE = 4096,
  STATE_PSZ_WINROLE = 8192,
  STATE_PSZ_SHOWCARD = 16384
};
bool TPSZPlayerState_IsValid(int value);
const TPSZPlayerState TPSZPlayerState_MIN = STATE_PSZ_READY;
const TPSZPlayerState TPSZPlayerState_MAX = STATE_PSZ_SHOWCARD;
const int TPSZPlayerState_ARRAYSIZE = TPSZPlayerState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TPSZPlayerState_descriptor();
inline const ::std::string& TPSZPlayerState_Name(TPSZPlayerState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TPSZPlayerState_descriptor(), value);
}
inline bool TPSZPlayerState_Parse(
    const ::std::string& name, TPSZPlayerState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPSZPlayerState>(
    TPSZPlayerState_descriptor(), name, value);
}
enum TPSZPlayerWik {
  PSZ_WIK_NULL = 1,
  PSZ_WIK_GIVEUP = 2,
  PSZ_WIK_COMPARE = 4,
  PSZ_WIK_ADDPOUR = 8,
  PSZ_WIK_FOLLOWPOUR = 16,
  PSZ_WIK_AUTO_FOLLOWPOUR = 32,
  PSZ_WIK_SHOWCARD = 64,
  PSZ_WIK_SEECARD = 128
};
bool TPSZPlayerWik_IsValid(int value);
const TPSZPlayerWik TPSZPlayerWik_MIN = PSZ_WIK_NULL;
const TPSZPlayerWik TPSZPlayerWik_MAX = PSZ_WIK_SEECARD;
const int TPSZPlayerWik_ARRAYSIZE = TPSZPlayerWik_MAX + 1;

const ::google::protobuf::EnumDescriptor* TPSZPlayerWik_descriptor();
inline const ::std::string& TPSZPlayerWik_Name(TPSZPlayerWik value) {
  return ::google::protobuf::internal::NameOfEnum(
    TPSZPlayerWik_descriptor(), value);
}
inline bool TPSZPlayerWik_Parse(
    const ::std::string& name, TPSZPlayerWik* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPSZPlayerWik>(
    TPSZPlayerWik_descriptor(), name, value);
}
enum TPinSanZhangCT {
  CT_PSZ_NULL = 0,
  CT_PSZ_ERSANWU = 1,
  CT_PSZ_ONE = 2,
  CT_PSZ_DUIZI = 3,
  CT_PSZ_SHUNZI = 4,
  CT_PSZ_JINHUA = 5,
  CT_PSZ_SHUNJIN = 6,
  CT_PSZ_BAOZI = 7,
  CT_PSZ_MAXINVALID = 8
};
bool TPinSanZhangCT_IsValid(int value);
const TPinSanZhangCT TPinSanZhangCT_MIN = CT_PSZ_NULL;
const TPinSanZhangCT TPinSanZhangCT_MAX = CT_PSZ_MAXINVALID;
const int TPinSanZhangCT_ARRAYSIZE = TPinSanZhangCT_MAX + 1;

const ::google::protobuf::EnumDescriptor* TPinSanZhangCT_descriptor();
inline const ::std::string& TPinSanZhangCT_Name(TPinSanZhangCT value) {
  return ::google::protobuf::internal::NameOfEnum(
    TPinSanZhangCT_descriptor(), value);
}
inline bool TPinSanZhangCT_Parse(
    const ::std::string& name, TPinSanZhangCT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPinSanZhangCT>(
    TPinSanZhangCT_descriptor(), name, value);
}
// ===================================================================

class MsgPSZPlayerAddPour : public ::google::protobuf::Message {
 public:
  MsgPSZPlayerAddPour();
  virtual ~MsgPSZPlayerAddPour();

  MsgPSZPlayerAddPour(const MsgPSZPlayerAddPour& from);

  inline MsgPSZPlayerAddPour& operator=(const MsgPSZPlayerAddPour& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPSZPlayerAddPour& default_instance();

  void Swap(MsgPSZPlayerAddPour* other);

  // implements Message ----------------------------------------------

  MsgPSZPlayerAddPour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPSZPlayerAddPour& from);
  void MergeFrom(const MsgPSZPlayerAddPour& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPSZPlayerAddPour)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPSZPlayerAddPour* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerFollowPour : public ::google::protobuf::Message {
 public:
  MsgPlayerFollowPour();
  virtual ~MsgPlayerFollowPour();

  MsgPlayerFollowPour(const MsgPlayerFollowPour& from);

  inline MsgPlayerFollowPour& operator=(const MsgPlayerFollowPour& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerFollowPour& default_instance();

  void Swap(MsgPlayerFollowPour* other);

  // implements Message ----------------------------------------------

  MsgPlayerFollowPour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerFollowPour& from);
  void MergeFrom(const MsgPlayerFollowPour& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 room_multi_total = 3;
  inline bool has_room_multi_total() const;
  inline void clear_room_multi_total();
  static const int kRoomMultiTotalFieldNumber = 3;
  inline ::google::protobuf::uint32 room_multi_total() const;
  inline void set_room_multi_total(::google::protobuf::uint32 value);

  // optional uint32 player_multi = 4;
  inline bool has_player_multi() const;
  inline void clear_player_multi();
  static const int kPlayerMultiFieldNumber = 4;
  inline ::google::protobuf::uint32 player_multi() const;
  inline void set_player_multi(::google::protobuf::uint32 value);

  // optional uint32 room_multi_current = 5;
  inline bool has_room_multi_current() const;
  inline void clear_room_multi_current();
  static const int kRoomMultiCurrentFieldNumber = 5;
  inline ::google::protobuf::uint32 room_multi_current() const;
  inline void set_room_multi_current(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPlayerFollowPour)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_room_multi_total();
  inline void clear_has_room_multi_total();
  inline void set_has_player_multi();
  inline void clear_has_player_multi();
  inline void set_has_room_multi_current();
  inline void clear_has_room_multi_current();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 room_multi_total_;
  ::google::protobuf::uint32 player_multi_;
  ::google::protobuf::uint32 room_multi_current_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerFollowPour* default_instance_;
};
// -------------------------------------------------------------------

class MsgPinSanZhangPlayer : public ::google::protobuf::Message {
 public:
  MsgPinSanZhangPlayer();
  virtual ~MsgPinSanZhangPlayer();

  MsgPinSanZhangPlayer(const MsgPinSanZhangPlayer& from);

  inline MsgPinSanZhangPlayer& operator=(const MsgPinSanZhangPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPinSanZhangPlayer& default_instance();

  void Swap(MsgPinSanZhangPlayer* other);

  // implements Message ----------------------------------------------

  MsgPinSanZhangPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPinSanZhangPlayer& from);
  void MergeFrom(const MsgPinSanZhangPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPlayerInfo player_base = 1;
  inline bool has_player_base() const;
  inline void clear_player_base();
  static const int kPlayerBaseFieldNumber = 1;
  inline const ::MsgPlayerInfo& player_base() const;
  inline ::MsgPlayerInfo* mutable_player_base();
  inline ::MsgPlayerInfo* release_player_base();
  inline void set_allocated_player_base(::MsgPlayerInfo* player_base);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional .MsgPSZSHandCardInfo hand_info = 3;
  inline bool has_hand_info() const;
  inline void clear_hand_info();
  static const int kHandInfoFieldNumber = 3;
  inline const ::MsgPSZSHandCardInfo& hand_info() const;
  inline ::MsgPSZSHandCardInfo* mutable_hand_info();
  inline ::MsgPSZSHandCardInfo* release_hand_info();
  inline void set_allocated_hand_info(::MsgPSZSHandCardInfo* hand_info);

  // optional uint32 seats = 4;
  inline bool has_seats() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 4;
  inline ::google::protobuf::uint32 seats() const;
  inline void set_seats(::google::protobuf::uint32 value);

  // optional int64 score = 5;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 5;
  inline ::google::protobuf::int64 score() const;
  inline void set_score(::google::protobuf::int64 value);

  // optional uint32 multiple = 6;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 6;
  inline ::google::protobuf::uint32 multiple() const;
  inline void set_multiple(::google::protobuf::uint32 value);

  // optional .MsgPSZGameOverInfo overInfo = 7;
  inline bool has_overinfo() const;
  inline void clear_overinfo();
  static const int kOverInfoFieldNumber = 7;
  inline const ::MsgPSZGameOverInfo& overinfo() const;
  inline ::MsgPSZGameOverInfo* mutable_overinfo();
  inline ::MsgPSZGameOverInfo* release_overinfo();
  inline void set_allocated_overinfo(::MsgPSZGameOverInfo* overinfo);

  // repeated .MsgPSZSComparePlayerInfo compare_info = 8;
  inline int compare_info_size() const;
  inline void clear_compare_info();
  static const int kCompareInfoFieldNumber = 8;
  inline const ::MsgPSZSComparePlayerInfo& compare_info(int index) const;
  inline ::MsgPSZSComparePlayerInfo* mutable_compare_info(int index);
  inline ::MsgPSZSComparePlayerInfo* add_compare_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPSZSComparePlayerInfo >&
      compare_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPSZSComparePlayerInfo >*
      mutable_compare_info();

  // optional int64 showdown_score = 9;
  inline bool has_showdown_score() const;
  inline void clear_showdown_score();
  static const int kShowdownScoreFieldNumber = 9;
  inline ::google::protobuf::int64 showdown_score() const;
  inline void set_showdown_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPinSanZhangPlayer)
 private:
  inline void set_has_player_base();
  inline void clear_has_player_base();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_hand_info();
  inline void clear_has_hand_info();
  inline void set_has_seats();
  inline void clear_has_seats();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_multiple();
  inline void clear_has_multiple();
  inline void set_has_overinfo();
  inline void clear_has_overinfo();
  inline void set_has_showdown_score();
  inline void clear_has_showdown_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgPlayerInfo* player_base_;
  ::MsgPSZSHandCardInfo* hand_info_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 seats_;
  ::google::protobuf::int64 score_;
  ::MsgPSZGameOverInfo* overinfo_;
  ::google::protobuf::RepeatedPtrField< ::MsgPSZSComparePlayerInfo > compare_info_;
  ::google::protobuf::int64 showdown_score_;
  ::google::protobuf::uint32 multiple_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPinSanZhangPlayer* default_instance_;
};
// -------------------------------------------------------------------

class MsgPSZAction : public ::google::protobuf::Message {
 public:
  MsgPSZAction();
  virtual ~MsgPSZAction();

  MsgPSZAction(const MsgPSZAction& from);

  inline MsgPSZAction& operator=(const MsgPSZAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPSZAction& default_instance();

  void Swap(MsgPSZAction* other);

  // implements Message ----------------------------------------------

  MsgPSZAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPSZAction& from);
  void MergeFrom(const MsgPSZAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 action_id = 1;
  inline bool has_action_id() const;
  inline void clear_action_id();
  static const int kActionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 action_id() const;
  inline void set_action_id(::google::protobuf::uint64 value);

  // optional uint32 total_multi = 2;
  inline bool has_total_multi() const;
  inline void clear_total_multi();
  static const int kTotalMultiFieldNumber = 2;
  inline ::google::protobuf::uint32 total_multi() const;
  inline void set_total_multi(::google::protobuf::uint32 value);

  // optional uint32 current_multi = 3;
  inline bool has_current_multi() const;
  inline void clear_current_multi();
  static const int kCurrentMultiFieldNumber = 3;
  inline ::google::protobuf::uint32 current_multi() const;
  inline void set_current_multi(::google::protobuf::uint32 value);

  // optional uint32 current_huihe = 4;
  inline bool has_current_huihe() const;
  inline void clear_current_huihe();
  static const int kCurrentHuiheFieldNumber = 4;
  inline ::google::protobuf::uint32 current_huihe() const;
  inline void set_current_huihe(::google::protobuf::uint32 value);

  // optional uint32 action_wik = 5;
  inline bool has_action_wik() const;
  inline void clear_action_wik();
  static const int kActionWikFieldNumber = 5;
  inline ::google::protobuf::uint32 action_wik() const;
  inline void set_action_wik(::google::protobuf::uint32 value);

  // repeated .MsgPinSanZhangPlayer player_info = 6;
  inline int player_info_size() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 6;
  inline const ::MsgPinSanZhangPlayer& player_info(int index) const;
  inline ::MsgPinSanZhangPlayer* mutable_player_info(int index);
  inline ::MsgPinSanZhangPlayer* add_player_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >&
      player_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >*
      mutable_player_info();

  // @@protoc_insertion_point(class_scope:MsgPSZAction)
 private:
  inline void set_has_action_id();
  inline void clear_has_action_id();
  inline void set_has_total_multi();
  inline void clear_has_total_multi();
  inline void set_has_current_multi();
  inline void clear_has_current_multi();
  inline void set_has_current_huihe();
  inline void clear_has_current_huihe();
  inline void set_has_action_wik();
  inline void clear_has_action_wik();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 action_id_;
  ::google::protobuf::uint32 total_multi_;
  ::google::protobuf::uint32 current_multi_;
  ::google::protobuf::uint32 current_huihe_;
  ::google::protobuf::uint32 action_wik_;
  ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer > player_info_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPSZAction* default_instance_;
};
// -------------------------------------------------------------------

class MsgPSZSPlayerCardInfo : public ::google::protobuf::Message {
 public:
  MsgPSZSPlayerCardInfo();
  virtual ~MsgPSZSPlayerCardInfo();

  MsgPSZSPlayerCardInfo(const MsgPSZSPlayerCardInfo& from);

  inline MsgPSZSPlayerCardInfo& operator=(const MsgPSZSPlayerCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPSZSPlayerCardInfo& default_instance();

  void Swap(MsgPSZSPlayerCardInfo* other);

  // implements Message ----------------------------------------------

  MsgPSZSPlayerCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPSZSPlayerCardInfo& from);
  void MergeFrom(const MsgPSZSPlayerCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional .MsgPSZSHandCardInfo card_info = 2;
  inline bool has_card_info() const;
  inline void clear_card_info();
  static const int kCardInfoFieldNumber = 2;
  inline const ::MsgPSZSHandCardInfo& card_info() const;
  inline ::MsgPSZSHandCardInfo* mutable_card_info();
  inline ::MsgPSZSHandCardInfo* release_card_info();
  inline void set_allocated_card_info(::MsgPSZSHandCardInfo* card_info);

  // @@protoc_insertion_point(class_scope:MsgPSZSPlayerCardInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_card_info();
  inline void clear_has_card_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::MsgPSZSHandCardInfo* card_info_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPSZSPlayerCardInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPSZSHandCardInfo : public ::google::protobuf::Message {
 public:
  MsgPSZSHandCardInfo();
  virtual ~MsgPSZSHandCardInfo();

  MsgPSZSHandCardInfo(const MsgPSZSHandCardInfo& from);

  inline MsgPSZSHandCardInfo& operator=(const MsgPSZSHandCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPSZSHandCardInfo& default_instance();

  void Swap(MsgPSZSHandCardInfo* other);

  // implements Message ----------------------------------------------

  MsgPSZSHandCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPSZSHandCardInfo& from);
  void MergeFrom(const MsgPSZSHandCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 card_list = 1;
  inline int card_list_size() const;
  inline void clear_card_list();
  static const int kCardListFieldNumber = 1;
  inline ::google::protobuf::uint32 card_list(int index) const;
  inline void set_card_list(int index, ::google::protobuf::uint32 value);
  inline void add_card_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_list();

  // optional uint32 card_type = 2;
  inline bool has_card_type() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 card_type() const;
  inline void set_card_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPSZSHandCardInfo)
 private:
  inline void set_has_card_type();
  inline void clear_has_card_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_list_;
  ::google::protobuf::uint32 card_type_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPSZSHandCardInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPSZSComparePlayerInfo : public ::google::protobuf::Message {
 public:
  MsgPSZSComparePlayerInfo();
  virtual ~MsgPSZSComparePlayerInfo();

  MsgPSZSComparePlayerInfo(const MsgPSZSComparePlayerInfo& from);

  inline MsgPSZSComparePlayerInfo& operator=(const MsgPSZSComparePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPSZSComparePlayerInfo& default_instance();

  void Swap(MsgPSZSComparePlayerInfo* other);

  // implements Message ----------------------------------------------

  MsgPSZSComparePlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPSZSComparePlayerInfo& from);
  void MergeFrom(const MsgPSZSComparePlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MsgPSZSComparePlayerInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPSZSComparePlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPSZSComparePlayerResult : public ::google::protobuf::Message {
 public:
  MsgPSZSComparePlayerResult();
  virtual ~MsgPSZSComparePlayerResult();

  MsgPSZSComparePlayerResult(const MsgPSZSComparePlayerResult& from);

  inline MsgPSZSComparePlayerResult& operator=(const MsgPSZSComparePlayerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPSZSComparePlayerResult& default_instance();

  void Swap(MsgPSZSComparePlayerResult* other);

  // implements Message ----------------------------------------------

  MsgPSZSComparePlayerResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPSZSComparePlayerResult& from);
  void MergeFrom(const MsgPSZSComparePlayerResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgCompareLoseInfo loseinfo = 1;
  inline int loseinfo_size() const;
  inline void clear_loseinfo();
  static const int kLoseinfoFieldNumber = 1;
  inline const ::MsgCompareLoseInfo& loseinfo(int index) const;
  inline ::MsgCompareLoseInfo* mutable_loseinfo(int index);
  inline ::MsgCompareLoseInfo* add_loseinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgCompareLoseInfo >&
      loseinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgCompareLoseInfo >*
      mutable_loseinfo();

  // optional uint32 room_pour = 2;
  inline bool has_room_pour() const;
  inline void clear_room_pour();
  static const int kRoomPourFieldNumber = 2;
  inline ::google::protobuf::uint32 room_pour() const;
  inline void set_room_pour(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPSZSComparePlayerResult)
 private:
  inline void set_has_room_pour();
  inline void clear_has_room_pour();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgCompareLoseInfo > loseinfo_;
  ::google::protobuf::uint32 room_pour_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPSZSComparePlayerResult* default_instance_;
};
// -------------------------------------------------------------------

class MsgCompareLoseInfo : public ::google::protobuf::Message {
 public:
  MsgCompareLoseInfo();
  virtual ~MsgCompareLoseInfo();

  MsgCompareLoseInfo(const MsgCompareLoseInfo& from);

  inline MsgCompareLoseInfo& operator=(const MsgCompareLoseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCompareLoseInfo& default_instance();

  void Swap(MsgCompareLoseInfo* other);

  // implements Message ----------------------------------------------

  MsgCompareLoseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCompareLoseInfo& from);
  void MergeFrom(const MsgCompareLoseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 pour = 3;
  inline bool has_pour() const;
  inline void clear_pour();
  static const int kPourFieldNumber = 3;
  inline ::google::protobuf::uint32 pour() const;
  inline void set_pour(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgCompareLoseInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_pour();
  inline void clear_has_pour();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 pour_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgCompareLoseInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPinSanZhangRoom : public ::google::protobuf::Message {
 public:
  MsgPinSanZhangRoom();
  virtual ~MsgPinSanZhangRoom();

  MsgPinSanZhangRoom(const MsgPinSanZhangRoom& from);

  inline MsgPinSanZhangRoom& operator=(const MsgPinSanZhangRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPinSanZhangRoom& default_instance();

  void Swap(MsgPinSanZhangRoom* other);

  // implements Message ----------------------------------------------

  MsgPinSanZhangRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPinSanZhangRoom& from);
  void MergeFrom(const MsgPinSanZhangRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TPinSanZhangState room_state = 1;
  inline bool has_room_state() const;
  inline void clear_room_state();
  static const int kRoomStateFieldNumber = 1;
  inline ::TPinSanZhangState room_state() const;
  inline void set_room_state(::TPinSanZhangState value);

  // optional uint32 state_time = 2;
  inline bool has_state_time() const;
  inline void clear_state_time();
  static const int kStateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 state_time() const;
  inline void set_state_time(::google::protobuf::uint32 value);

  // repeated .MsgPinSanZhangPlayer player_list = 3;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  inline const ::MsgPinSanZhangPlayer& player_list(int index) const;
  inline ::MsgPinSanZhangPlayer* mutable_player_list(int index);
  inline ::MsgPinSanZhangPlayer* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >*
      mutable_player_list();

  // optional uint64 bank_id = 4;
  inline bool has_bank_id() const;
  inline void clear_bank_id();
  static const int kBankIdFieldNumber = 4;
  inline ::google::protobuf::uint64 bank_id() const;
  inline void set_bank_id(::google::protobuf::uint64 value);

  // optional uint64 room_id = 5;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 5;
  inline ::google::protobuf::uint64 room_id() const;
  inline void set_room_id(::google::protobuf::uint64 value);

  // optional uint32 game_count = 6;
  inline bool has_game_count() const;
  inline void clear_game_count();
  static const int kGameCountFieldNumber = 6;
  inline ::google::protobuf::uint32 game_count() const;
  inline void set_game_count(::google::protobuf::uint32 value);

  // optional .MsgCreatePrivateRoom private_room = 7;
  inline bool has_private_room() const;
  inline void clear_private_room();
  static const int kPrivateRoomFieldNumber = 7;
  inline const ::MsgCreatePrivateRoom& private_room() const;
  inline ::MsgCreatePrivateRoom* mutable_private_room();
  inline ::MsgCreatePrivateRoom* release_private_room();
  inline void set_allocated_private_room(::MsgCreatePrivateRoom* private_room);

  // optional .MsgRoleHostCount role_host = 8;
  inline bool has_role_host() const;
  inline void clear_role_host();
  static const int kRoleHostFieldNumber = 8;
  inline const ::MsgRoleHostCount& role_host() const;
  inline ::MsgRoleHostCount* mutable_role_host();
  inline ::MsgRoleHostCount* release_role_host();
  inline void set_allocated_role_host(::MsgRoleHostCount* role_host);

  // optional .MsgRoleStateCount role_state = 9;
  inline bool has_role_state() const;
  inline void clear_role_state();
  static const int kRoleStateFieldNumber = 9;
  inline const ::MsgRoleStateCount& role_state() const;
  inline ::MsgRoleStateCount* mutable_role_state();
  inline ::MsgRoleStateCount* release_role_state();
  inline void set_allocated_role_state(::MsgRoleStateCount* role_state);

  // optional bool relieve = 10;
  inline bool has_relieve() const;
  inline void clear_relieve();
  static const int kRelieveFieldNumber = 10;
  inline bool relieve() const;
  inline void set_relieve(bool value);

  // optional uint32 room_pay_type = 11;
  inline bool has_room_pay_type() const;
  inline void clear_room_pay_type();
  static const int kRoomPayTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 room_pay_type() const;
  inline void set_room_pay_type(::google::protobuf::uint32 value);

  // optional uint32 room_muliti = 12;
  inline bool has_room_muliti() const;
  inline void clear_room_muliti();
  static const int kRoomMulitiFieldNumber = 12;
  inline ::google::protobuf::uint32 room_muliti() const;
  inline void set_room_muliti(::google::protobuf::uint32 value);

  // optional uint32 room_total_muliti = 13;
  inline bool has_room_total_muliti() const;
  inline void clear_room_total_muliti();
  static const int kRoomTotalMulitiFieldNumber = 13;
  inline ::google::protobuf::uint32 room_total_muliti() const;
  inline void set_room_total_muliti(::google::protobuf::uint32 value);

  // optional uint32 room_current_huihe = 14;
  inline bool has_room_current_huihe() const;
  inline void clear_room_current_huihe();
  static const int kRoomCurrentHuiheFieldNumber = 14;
  inline ::google::protobuf::uint32 room_current_huihe() const;
  inline void set_room_current_huihe(::google::protobuf::uint32 value);

  // optional uint64 action_id = 15;
  inline bool has_action_id() const;
  inline void clear_action_id();
  static const int kActionIdFieldNumber = 15;
  inline ::google::protobuf::uint64 action_id() const;
  inline void set_action_id(::google::protobuf::uint64 value);

  // optional uint32 wiki = 16;
  inline bool has_wiki() const;
  inline void clear_wiki();
  static const int kWikiFieldNumber = 16;
  inline ::google::protobuf::uint32 wiki() const;
  inline void set_wiki(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPinSanZhangRoom)
 private:
  inline void set_has_room_state();
  inline void clear_has_room_state();
  inline void set_has_state_time();
  inline void clear_has_state_time();
  inline void set_has_bank_id();
  inline void clear_has_bank_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_count();
  inline void clear_has_game_count();
  inline void set_has_private_room();
  inline void clear_has_private_room();
  inline void set_has_role_host();
  inline void clear_has_role_host();
  inline void set_has_role_state();
  inline void clear_has_role_state();
  inline void set_has_relieve();
  inline void clear_has_relieve();
  inline void set_has_room_pay_type();
  inline void clear_has_room_pay_type();
  inline void set_has_room_muliti();
  inline void clear_has_room_muliti();
  inline void set_has_room_total_muliti();
  inline void clear_has_room_total_muliti();
  inline void set_has_room_current_huihe();
  inline void clear_has_room_current_huihe();
  inline void set_has_action_id();
  inline void clear_has_action_id();
  inline void set_has_wiki();
  inline void clear_has_wiki();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int room_state_;
  ::google::protobuf::uint32 state_time_;
  ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer > player_list_;
  ::google::protobuf::uint64 bank_id_;
  ::google::protobuf::uint64 room_id_;
  ::MsgCreatePrivateRoom* private_room_;
  ::MsgRoleHostCount* role_host_;
  ::google::protobuf::uint32 game_count_;
  bool relieve_;
  ::MsgRoleStateCount* role_state_;
  ::google::protobuf::uint32 room_pay_type_;
  ::google::protobuf::uint32 room_muliti_;
  ::google::protobuf::uint32 room_total_muliti_;
  ::google::protobuf::uint32 room_current_huihe_;
  ::google::protobuf::uint64 action_id_;
  ::google::protobuf::uint32 wiki_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPinSanZhangRoom* default_instance_;
};
// -------------------------------------------------------------------

class MsgPSZGameOverInfo : public ::google::protobuf::Message {
 public:
  MsgPSZGameOverInfo();
  virtual ~MsgPSZGameOverInfo();

  MsgPSZGameOverInfo(const MsgPSZGameOverInfo& from);

  inline MsgPSZGameOverInfo& operator=(const MsgPSZGameOverInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPSZGameOverInfo& default_instance();

  void Swap(MsgPSZGameOverInfo* other);

  // implements Message ----------------------------------------------

  MsgPSZGameOverInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPSZGameOverInfo& from);
  void MergeFrom(const MsgPSZGameOverInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 win_count = 1;
  inline bool has_win_count() const;
  inline void clear_win_count();
  static const int kWinCountFieldNumber = 1;
  inline ::google::protobuf::uint32 win_count() const;
  inline void set_win_count(::google::protobuf::uint32 value);

  // optional uint32 lose_count = 2;
  inline bool has_lose_count() const;
  inline void clear_lose_count();
  static const int kLoseCountFieldNumber = 2;
  inline ::google::protobuf::uint32 lose_count() const;
  inline void set_lose_count(::google::protobuf::uint32 value);

  // optional uint32 socre_max = 3;
  inline bool has_socre_max() const;
  inline void clear_socre_max();
  static const int kSocreMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 socre_max() const;
  inline void set_socre_max(::google::protobuf::uint32 value);

  // optional uint32 giveup_count = 4;
  inline bool has_giveup_count() const;
  inline void clear_giveup_count();
  static const int kGiveupCountFieldNumber = 4;
  inline ::google::protobuf::uint32 giveup_count() const;
  inline void set_giveup_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPSZGameOverInfo)
 private:
  inline void set_has_win_count();
  inline void clear_has_win_count();
  inline void set_has_lose_count();
  inline void clear_has_lose_count();
  inline void set_has_socre_max();
  inline void clear_has_socre_max();
  inline void set_has_giveup_count();
  inline void clear_has_giveup_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 win_count_;
  ::google::protobuf::uint32 lose_count_;
  ::google::protobuf::uint32 socre_max_;
  ::google::protobuf::uint32 giveup_count_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPSZGameOverInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPinSanZhangShowDown : public ::google::protobuf::Message {
 public:
  MsgPinSanZhangShowDown();
  virtual ~MsgPinSanZhangShowDown();

  MsgPinSanZhangShowDown(const MsgPinSanZhangShowDown& from);

  inline MsgPinSanZhangShowDown& operator=(const MsgPinSanZhangShowDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPinSanZhangShowDown& default_instance();

  void Swap(MsgPinSanZhangShowDown* other);

  // implements Message ----------------------------------------------

  MsgPinSanZhangShowDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPinSanZhangShowDown& from);
  void MergeFrom(const MsgPinSanZhangShowDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TPinSanZhangState room_state = 1;
  inline bool has_room_state() const;
  inline void clear_room_state();
  static const int kRoomStateFieldNumber = 1;
  inline ::TPinSanZhangState room_state() const;
  inline void set_room_state(::TPinSanZhangState value);

  // optional uint32 state_time = 2;
  inline bool has_state_time() const;
  inline void clear_state_time();
  static const int kStateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 state_time() const;
  inline void set_state_time(::google::protobuf::uint32 value);

  // repeated .MsgPinSanZhangPlayer player_list = 3;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  inline const ::MsgPinSanZhangPlayer& player_list(int index) const;
  inline ::MsgPinSanZhangPlayer* mutable_player_list(int index);
  inline ::MsgPinSanZhangPlayer* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >*
      mutable_player_list();

  // optional uint64 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint64 room_id() const;
  inline void set_room_id(::google::protobuf::uint64 value);

  // optional uint32 game_count = 5;
  inline bool has_game_count() const;
  inline void clear_game_count();
  static const int kGameCountFieldNumber = 5;
  inline ::google::protobuf::uint32 game_count() const;
  inline void set_game_count(::google::protobuf::uint32 value);

  // optional uint32 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional bool game_over = 7;
  inline bool has_game_over() const;
  inline void clear_game_over();
  static const int kGameOverFieldNumber = 7;
  inline bool game_over() const;
  inline void set_game_over(bool value);

  // repeated .MsgPSZIntegralCount integral_list = 8;
  inline int integral_list_size() const;
  inline void clear_integral_list();
  static const int kIntegralListFieldNumber = 8;
  inline const ::MsgPSZIntegralCount& integral_list(int index) const;
  inline ::MsgPSZIntegralCount* mutable_integral_list(int index);
  inline ::MsgPSZIntegralCount* add_integral_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPSZIntegralCount >&
      integral_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPSZIntegralCount >*
      mutable_integral_list();

  // @@protoc_insertion_point(class_scope:MsgPinSanZhangShowDown)
 private:
  inline void set_has_room_state();
  inline void clear_has_room_state();
  inline void set_has_state_time();
  inline void clear_has_state_time();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_count();
  inline void clear_has_game_count();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_game_over();
  inline void clear_has_game_over();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int room_state_;
  ::google::protobuf::uint32 state_time_;
  ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer > player_list_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 game_count_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::RepeatedPtrField< ::MsgPSZIntegralCount > integral_list_;
  bool game_over_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPinSanZhangShowDown* default_instance_;
};
// -------------------------------------------------------------------

class MsgPSZIntegralCount : public ::google::protobuf::Message {
 public:
  MsgPSZIntegralCount();
  virtual ~MsgPSZIntegralCount();

  MsgPSZIntegralCount(const MsgPSZIntegralCount& from);

  inline MsgPSZIntegralCount& operator=(const MsgPSZIntegralCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPSZIntegralCount& default_instance();

  void Swap(MsgPSZIntegralCount* other);

  // implements Message ----------------------------------------------

  MsgPSZIntegralCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPSZIntegralCount& from);
  void MergeFrom(const MsgPSZIntegralCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPSZIntegralCount)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_AssignDesc_msg_5fpinsanzhang_2eproto();
  friend void protobuf_ShutdownFile_msg_5fpinsanzhang_2eproto();

  void InitAsDefaultInstance();
  static MsgPSZIntegralCount* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgPSZPlayerAddPour

// optional uint64 id = 1;
inline bool MsgPSZPlayerAddPour::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPSZPlayerAddPour::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPSZPlayerAddPour::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPSZPlayerAddPour::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MsgPSZPlayerAddPour::id() const {
  // @@protoc_insertion_point(field_get:MsgPSZPlayerAddPour.id)
  return id_;
}
inline void MsgPSZPlayerAddPour::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZPlayerAddPour.id)
}

// optional uint32 value = 2;
inline bool MsgPSZPlayerAddPour::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPSZPlayerAddPour::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPSZPlayerAddPour::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPSZPlayerAddPour::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 MsgPSZPlayerAddPour::value() const {
  // @@protoc_insertion_point(field_get:MsgPSZPlayerAddPour.value)
  return value_;
}
inline void MsgPSZPlayerAddPour::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZPlayerAddPour.value)
}

// -------------------------------------------------------------------

// MsgPlayerFollowPour

// optional uint64 id = 1;
inline bool MsgPlayerFollowPour::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerFollowPour::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerFollowPour::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerFollowPour::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MsgPlayerFollowPour::id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerFollowPour.id)
  return id_;
}
inline void MsgPlayerFollowPour::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerFollowPour.id)
}

// optional uint32 value = 2;
inline bool MsgPlayerFollowPour::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerFollowPour::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerFollowPour::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerFollowPour::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 MsgPlayerFollowPour::value() const {
  // @@protoc_insertion_point(field_get:MsgPlayerFollowPour.value)
  return value_;
}
inline void MsgPlayerFollowPour::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerFollowPour.value)
}

// optional uint32 room_multi_total = 3;
inline bool MsgPlayerFollowPour::has_room_multi_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlayerFollowPour::set_has_room_multi_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlayerFollowPour::clear_has_room_multi_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlayerFollowPour::clear_room_multi_total() {
  room_multi_total_ = 0u;
  clear_has_room_multi_total();
}
inline ::google::protobuf::uint32 MsgPlayerFollowPour::room_multi_total() const {
  // @@protoc_insertion_point(field_get:MsgPlayerFollowPour.room_multi_total)
  return room_multi_total_;
}
inline void MsgPlayerFollowPour::set_room_multi_total(::google::protobuf::uint32 value) {
  set_has_room_multi_total();
  room_multi_total_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerFollowPour.room_multi_total)
}

// optional uint32 player_multi = 4;
inline bool MsgPlayerFollowPour::has_player_multi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlayerFollowPour::set_has_player_multi() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlayerFollowPour::clear_has_player_multi() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlayerFollowPour::clear_player_multi() {
  player_multi_ = 0u;
  clear_has_player_multi();
}
inline ::google::protobuf::uint32 MsgPlayerFollowPour::player_multi() const {
  // @@protoc_insertion_point(field_get:MsgPlayerFollowPour.player_multi)
  return player_multi_;
}
inline void MsgPlayerFollowPour::set_player_multi(::google::protobuf::uint32 value) {
  set_has_player_multi();
  player_multi_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerFollowPour.player_multi)
}

// optional uint32 room_multi_current = 5;
inline bool MsgPlayerFollowPour::has_room_multi_current() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlayerFollowPour::set_has_room_multi_current() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlayerFollowPour::clear_has_room_multi_current() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlayerFollowPour::clear_room_multi_current() {
  room_multi_current_ = 0u;
  clear_has_room_multi_current();
}
inline ::google::protobuf::uint32 MsgPlayerFollowPour::room_multi_current() const {
  // @@protoc_insertion_point(field_get:MsgPlayerFollowPour.room_multi_current)
  return room_multi_current_;
}
inline void MsgPlayerFollowPour::set_room_multi_current(::google::protobuf::uint32 value) {
  set_has_room_multi_current();
  room_multi_current_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerFollowPour.room_multi_current)
}

// -------------------------------------------------------------------

// MsgPinSanZhangPlayer

// optional .MsgPlayerInfo player_base = 1;
inline bool MsgPinSanZhangPlayer::has_player_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPinSanZhangPlayer::set_has_player_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPinSanZhangPlayer::clear_has_player_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPinSanZhangPlayer::clear_player_base() {
  if (player_base_ != NULL) player_base_->::MsgPlayerInfo::Clear();
  clear_has_player_base();
}
inline const ::MsgPlayerInfo& MsgPinSanZhangPlayer::player_base() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangPlayer.player_base)
  return player_base_ != NULL ? *player_base_ : *default_instance_->player_base_;
}
inline ::MsgPlayerInfo* MsgPinSanZhangPlayer::mutable_player_base() {
  set_has_player_base();
  if (player_base_ == NULL) player_base_ = new ::MsgPlayerInfo;
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangPlayer.player_base)
  return player_base_;
}
inline ::MsgPlayerInfo* MsgPinSanZhangPlayer::release_player_base() {
  clear_has_player_base();
  ::MsgPlayerInfo* temp = player_base_;
  player_base_ = NULL;
  return temp;
}
inline void MsgPinSanZhangPlayer::set_allocated_player_base(::MsgPlayerInfo* player_base) {
  delete player_base_;
  player_base_ = player_base;
  if (player_base) {
    set_has_player_base();
  } else {
    clear_has_player_base();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPinSanZhangPlayer.player_base)
}

// optional uint32 state = 2;
inline bool MsgPinSanZhangPlayer::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPinSanZhangPlayer::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPinSanZhangPlayer::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPinSanZhangPlayer::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 MsgPinSanZhangPlayer::state() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangPlayer.state)
  return state_;
}
inline void MsgPinSanZhangPlayer::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangPlayer.state)
}

// optional .MsgPSZSHandCardInfo hand_info = 3;
inline bool MsgPinSanZhangPlayer::has_hand_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPinSanZhangPlayer::set_has_hand_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPinSanZhangPlayer::clear_has_hand_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPinSanZhangPlayer::clear_hand_info() {
  if (hand_info_ != NULL) hand_info_->::MsgPSZSHandCardInfo::Clear();
  clear_has_hand_info();
}
inline const ::MsgPSZSHandCardInfo& MsgPinSanZhangPlayer::hand_info() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangPlayer.hand_info)
  return hand_info_ != NULL ? *hand_info_ : *default_instance_->hand_info_;
}
inline ::MsgPSZSHandCardInfo* MsgPinSanZhangPlayer::mutable_hand_info() {
  set_has_hand_info();
  if (hand_info_ == NULL) hand_info_ = new ::MsgPSZSHandCardInfo;
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangPlayer.hand_info)
  return hand_info_;
}
inline ::MsgPSZSHandCardInfo* MsgPinSanZhangPlayer::release_hand_info() {
  clear_has_hand_info();
  ::MsgPSZSHandCardInfo* temp = hand_info_;
  hand_info_ = NULL;
  return temp;
}
inline void MsgPinSanZhangPlayer::set_allocated_hand_info(::MsgPSZSHandCardInfo* hand_info) {
  delete hand_info_;
  hand_info_ = hand_info;
  if (hand_info) {
    set_has_hand_info();
  } else {
    clear_has_hand_info();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPinSanZhangPlayer.hand_info)
}

// optional uint32 seats = 4;
inline bool MsgPinSanZhangPlayer::has_seats() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPinSanZhangPlayer::set_has_seats() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPinSanZhangPlayer::clear_has_seats() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPinSanZhangPlayer::clear_seats() {
  seats_ = 0u;
  clear_has_seats();
}
inline ::google::protobuf::uint32 MsgPinSanZhangPlayer::seats() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangPlayer.seats)
  return seats_;
}
inline void MsgPinSanZhangPlayer::set_seats(::google::protobuf::uint32 value) {
  set_has_seats();
  seats_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangPlayer.seats)
}

// optional int64 score = 5;
inline bool MsgPinSanZhangPlayer::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPinSanZhangPlayer::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPinSanZhangPlayer::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPinSanZhangPlayer::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::int64 MsgPinSanZhangPlayer::score() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangPlayer.score)
  return score_;
}
inline void MsgPinSanZhangPlayer::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangPlayer.score)
}

// optional uint32 multiple = 6;
inline bool MsgPinSanZhangPlayer::has_multiple() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPinSanZhangPlayer::set_has_multiple() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPinSanZhangPlayer::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPinSanZhangPlayer::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 MsgPinSanZhangPlayer::multiple() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangPlayer.multiple)
  return multiple_;
}
inline void MsgPinSanZhangPlayer::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangPlayer.multiple)
}

// optional .MsgPSZGameOverInfo overInfo = 7;
inline bool MsgPinSanZhangPlayer::has_overinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPinSanZhangPlayer::set_has_overinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPinSanZhangPlayer::clear_has_overinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPinSanZhangPlayer::clear_overinfo() {
  if (overinfo_ != NULL) overinfo_->::MsgPSZGameOverInfo::Clear();
  clear_has_overinfo();
}
inline const ::MsgPSZGameOverInfo& MsgPinSanZhangPlayer::overinfo() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangPlayer.overInfo)
  return overinfo_ != NULL ? *overinfo_ : *default_instance_->overinfo_;
}
inline ::MsgPSZGameOverInfo* MsgPinSanZhangPlayer::mutable_overinfo() {
  set_has_overinfo();
  if (overinfo_ == NULL) overinfo_ = new ::MsgPSZGameOverInfo;
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangPlayer.overInfo)
  return overinfo_;
}
inline ::MsgPSZGameOverInfo* MsgPinSanZhangPlayer::release_overinfo() {
  clear_has_overinfo();
  ::MsgPSZGameOverInfo* temp = overinfo_;
  overinfo_ = NULL;
  return temp;
}
inline void MsgPinSanZhangPlayer::set_allocated_overinfo(::MsgPSZGameOverInfo* overinfo) {
  delete overinfo_;
  overinfo_ = overinfo;
  if (overinfo) {
    set_has_overinfo();
  } else {
    clear_has_overinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPinSanZhangPlayer.overInfo)
}

// repeated .MsgPSZSComparePlayerInfo compare_info = 8;
inline int MsgPinSanZhangPlayer::compare_info_size() const {
  return compare_info_.size();
}
inline void MsgPinSanZhangPlayer::clear_compare_info() {
  compare_info_.Clear();
}
inline const ::MsgPSZSComparePlayerInfo& MsgPinSanZhangPlayer::compare_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangPlayer.compare_info)
  return compare_info_.Get(index);
}
inline ::MsgPSZSComparePlayerInfo* MsgPinSanZhangPlayer::mutable_compare_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangPlayer.compare_info)
  return compare_info_.Mutable(index);
}
inline ::MsgPSZSComparePlayerInfo* MsgPinSanZhangPlayer::add_compare_info() {
  // @@protoc_insertion_point(field_add:MsgPinSanZhangPlayer.compare_info)
  return compare_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPSZSComparePlayerInfo >&
MsgPinSanZhangPlayer::compare_info() const {
  // @@protoc_insertion_point(field_list:MsgPinSanZhangPlayer.compare_info)
  return compare_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPSZSComparePlayerInfo >*
MsgPinSanZhangPlayer::mutable_compare_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgPinSanZhangPlayer.compare_info)
  return &compare_info_;
}

// optional int64 showdown_score = 9;
inline bool MsgPinSanZhangPlayer::has_showdown_score() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgPinSanZhangPlayer::set_has_showdown_score() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgPinSanZhangPlayer::clear_has_showdown_score() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgPinSanZhangPlayer::clear_showdown_score() {
  showdown_score_ = GOOGLE_LONGLONG(0);
  clear_has_showdown_score();
}
inline ::google::protobuf::int64 MsgPinSanZhangPlayer::showdown_score() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangPlayer.showdown_score)
  return showdown_score_;
}
inline void MsgPinSanZhangPlayer::set_showdown_score(::google::protobuf::int64 value) {
  set_has_showdown_score();
  showdown_score_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangPlayer.showdown_score)
}

// -------------------------------------------------------------------

// MsgPSZAction

// optional uint64 action_id = 1;
inline bool MsgPSZAction::has_action_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPSZAction::set_has_action_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPSZAction::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPSZAction::clear_action_id() {
  action_id_ = GOOGLE_ULONGLONG(0);
  clear_has_action_id();
}
inline ::google::protobuf::uint64 MsgPSZAction::action_id() const {
  // @@protoc_insertion_point(field_get:MsgPSZAction.action_id)
  return action_id_;
}
inline void MsgPSZAction::set_action_id(::google::protobuf::uint64 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZAction.action_id)
}

// optional uint32 total_multi = 2;
inline bool MsgPSZAction::has_total_multi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPSZAction::set_has_total_multi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPSZAction::clear_has_total_multi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPSZAction::clear_total_multi() {
  total_multi_ = 0u;
  clear_has_total_multi();
}
inline ::google::protobuf::uint32 MsgPSZAction::total_multi() const {
  // @@protoc_insertion_point(field_get:MsgPSZAction.total_multi)
  return total_multi_;
}
inline void MsgPSZAction::set_total_multi(::google::protobuf::uint32 value) {
  set_has_total_multi();
  total_multi_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZAction.total_multi)
}

// optional uint32 current_multi = 3;
inline bool MsgPSZAction::has_current_multi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPSZAction::set_has_current_multi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPSZAction::clear_has_current_multi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPSZAction::clear_current_multi() {
  current_multi_ = 0u;
  clear_has_current_multi();
}
inline ::google::protobuf::uint32 MsgPSZAction::current_multi() const {
  // @@protoc_insertion_point(field_get:MsgPSZAction.current_multi)
  return current_multi_;
}
inline void MsgPSZAction::set_current_multi(::google::protobuf::uint32 value) {
  set_has_current_multi();
  current_multi_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZAction.current_multi)
}

// optional uint32 current_huihe = 4;
inline bool MsgPSZAction::has_current_huihe() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPSZAction::set_has_current_huihe() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPSZAction::clear_has_current_huihe() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPSZAction::clear_current_huihe() {
  current_huihe_ = 0u;
  clear_has_current_huihe();
}
inline ::google::protobuf::uint32 MsgPSZAction::current_huihe() const {
  // @@protoc_insertion_point(field_get:MsgPSZAction.current_huihe)
  return current_huihe_;
}
inline void MsgPSZAction::set_current_huihe(::google::protobuf::uint32 value) {
  set_has_current_huihe();
  current_huihe_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZAction.current_huihe)
}

// optional uint32 action_wik = 5;
inline bool MsgPSZAction::has_action_wik() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPSZAction::set_has_action_wik() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPSZAction::clear_has_action_wik() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPSZAction::clear_action_wik() {
  action_wik_ = 0u;
  clear_has_action_wik();
}
inline ::google::protobuf::uint32 MsgPSZAction::action_wik() const {
  // @@protoc_insertion_point(field_get:MsgPSZAction.action_wik)
  return action_wik_;
}
inline void MsgPSZAction::set_action_wik(::google::protobuf::uint32 value) {
  set_has_action_wik();
  action_wik_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZAction.action_wik)
}

// repeated .MsgPinSanZhangPlayer player_info = 6;
inline int MsgPSZAction::player_info_size() const {
  return player_info_.size();
}
inline void MsgPSZAction::clear_player_info() {
  player_info_.Clear();
}
inline const ::MsgPinSanZhangPlayer& MsgPSZAction::player_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgPSZAction.player_info)
  return player_info_.Get(index);
}
inline ::MsgPinSanZhangPlayer* MsgPSZAction::mutable_player_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPSZAction.player_info)
  return player_info_.Mutable(index);
}
inline ::MsgPinSanZhangPlayer* MsgPSZAction::add_player_info() {
  // @@protoc_insertion_point(field_add:MsgPSZAction.player_info)
  return player_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >&
MsgPSZAction::player_info() const {
  // @@protoc_insertion_point(field_list:MsgPSZAction.player_info)
  return player_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >*
MsgPSZAction::mutable_player_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgPSZAction.player_info)
  return &player_info_;
}

// -------------------------------------------------------------------

// MsgPSZSPlayerCardInfo

// optional int64 id = 1;
inline bool MsgPSZSPlayerCardInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPSZSPlayerCardInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPSZSPlayerCardInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPSZSPlayerCardInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 MsgPSZSPlayerCardInfo::id() const {
  // @@protoc_insertion_point(field_get:MsgPSZSPlayerCardInfo.id)
  return id_;
}
inline void MsgPSZSPlayerCardInfo::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZSPlayerCardInfo.id)
}

// optional .MsgPSZSHandCardInfo card_info = 2;
inline bool MsgPSZSPlayerCardInfo::has_card_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPSZSPlayerCardInfo::set_has_card_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPSZSPlayerCardInfo::clear_has_card_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPSZSPlayerCardInfo::clear_card_info() {
  if (card_info_ != NULL) card_info_->::MsgPSZSHandCardInfo::Clear();
  clear_has_card_info();
}
inline const ::MsgPSZSHandCardInfo& MsgPSZSPlayerCardInfo::card_info() const {
  // @@protoc_insertion_point(field_get:MsgPSZSPlayerCardInfo.card_info)
  return card_info_ != NULL ? *card_info_ : *default_instance_->card_info_;
}
inline ::MsgPSZSHandCardInfo* MsgPSZSPlayerCardInfo::mutable_card_info() {
  set_has_card_info();
  if (card_info_ == NULL) card_info_ = new ::MsgPSZSHandCardInfo;
  // @@protoc_insertion_point(field_mutable:MsgPSZSPlayerCardInfo.card_info)
  return card_info_;
}
inline ::MsgPSZSHandCardInfo* MsgPSZSPlayerCardInfo::release_card_info() {
  clear_has_card_info();
  ::MsgPSZSHandCardInfo* temp = card_info_;
  card_info_ = NULL;
  return temp;
}
inline void MsgPSZSPlayerCardInfo::set_allocated_card_info(::MsgPSZSHandCardInfo* card_info) {
  delete card_info_;
  card_info_ = card_info;
  if (card_info) {
    set_has_card_info();
  } else {
    clear_has_card_info();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPSZSPlayerCardInfo.card_info)
}

// -------------------------------------------------------------------

// MsgPSZSHandCardInfo

// repeated uint32 card_list = 1;
inline int MsgPSZSHandCardInfo::card_list_size() const {
  return card_list_.size();
}
inline void MsgPSZSHandCardInfo::clear_card_list() {
  card_list_.Clear();
}
inline ::google::protobuf::uint32 MsgPSZSHandCardInfo::card_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgPSZSHandCardInfo.card_list)
  return card_list_.Get(index);
}
inline void MsgPSZSHandCardInfo::set_card_list(int index, ::google::protobuf::uint32 value) {
  card_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgPSZSHandCardInfo.card_list)
}
inline void MsgPSZSHandCardInfo::add_card_list(::google::protobuf::uint32 value) {
  card_list_.Add(value);
  // @@protoc_insertion_point(field_add:MsgPSZSHandCardInfo.card_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgPSZSHandCardInfo::card_list() const {
  // @@protoc_insertion_point(field_list:MsgPSZSHandCardInfo.card_list)
  return card_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgPSZSHandCardInfo::mutable_card_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgPSZSHandCardInfo.card_list)
  return &card_list_;
}

// optional uint32 card_type = 2;
inline bool MsgPSZSHandCardInfo::has_card_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPSZSHandCardInfo::set_has_card_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPSZSHandCardInfo::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPSZSHandCardInfo::clear_card_type() {
  card_type_ = 0u;
  clear_has_card_type();
}
inline ::google::protobuf::uint32 MsgPSZSHandCardInfo::card_type() const {
  // @@protoc_insertion_point(field_get:MsgPSZSHandCardInfo.card_type)
  return card_type_;
}
inline void MsgPSZSHandCardInfo::set_card_type(::google::protobuf::uint32 value) {
  set_has_card_type();
  card_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZSHandCardInfo.card_type)
}

// -------------------------------------------------------------------

// MsgPSZSComparePlayerInfo

// optional uint64 id = 1;
inline bool MsgPSZSComparePlayerInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPSZSComparePlayerInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPSZSComparePlayerInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPSZSComparePlayerInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MsgPSZSComparePlayerInfo::id() const {
  // @@protoc_insertion_point(field_get:MsgPSZSComparePlayerInfo.id)
  return id_;
}
inline void MsgPSZSComparePlayerInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZSComparePlayerInfo.id)
}

// -------------------------------------------------------------------

// MsgPSZSComparePlayerResult

// repeated .MsgCompareLoseInfo loseinfo = 1;
inline int MsgPSZSComparePlayerResult::loseinfo_size() const {
  return loseinfo_.size();
}
inline void MsgPSZSComparePlayerResult::clear_loseinfo() {
  loseinfo_.Clear();
}
inline const ::MsgCompareLoseInfo& MsgPSZSComparePlayerResult::loseinfo(int index) const {
  // @@protoc_insertion_point(field_get:MsgPSZSComparePlayerResult.loseinfo)
  return loseinfo_.Get(index);
}
inline ::MsgCompareLoseInfo* MsgPSZSComparePlayerResult::mutable_loseinfo(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPSZSComparePlayerResult.loseinfo)
  return loseinfo_.Mutable(index);
}
inline ::MsgCompareLoseInfo* MsgPSZSComparePlayerResult::add_loseinfo() {
  // @@protoc_insertion_point(field_add:MsgPSZSComparePlayerResult.loseinfo)
  return loseinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgCompareLoseInfo >&
MsgPSZSComparePlayerResult::loseinfo() const {
  // @@protoc_insertion_point(field_list:MsgPSZSComparePlayerResult.loseinfo)
  return loseinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgCompareLoseInfo >*
MsgPSZSComparePlayerResult::mutable_loseinfo() {
  // @@protoc_insertion_point(field_mutable_list:MsgPSZSComparePlayerResult.loseinfo)
  return &loseinfo_;
}

// optional uint32 room_pour = 2;
inline bool MsgPSZSComparePlayerResult::has_room_pour() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPSZSComparePlayerResult::set_has_room_pour() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPSZSComparePlayerResult::clear_has_room_pour() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPSZSComparePlayerResult::clear_room_pour() {
  room_pour_ = 0u;
  clear_has_room_pour();
}
inline ::google::protobuf::uint32 MsgPSZSComparePlayerResult::room_pour() const {
  // @@protoc_insertion_point(field_get:MsgPSZSComparePlayerResult.room_pour)
  return room_pour_;
}
inline void MsgPSZSComparePlayerResult::set_room_pour(::google::protobuf::uint32 value) {
  set_has_room_pour();
  room_pour_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZSComparePlayerResult.room_pour)
}

// -------------------------------------------------------------------

// MsgCompareLoseInfo

// optional uint64 id = 1;
inline bool MsgCompareLoseInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCompareLoseInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCompareLoseInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCompareLoseInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MsgCompareLoseInfo::id() const {
  // @@protoc_insertion_point(field_get:MsgCompareLoseInfo.id)
  return id_;
}
inline void MsgCompareLoseInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgCompareLoseInfo.id)
}

// optional uint32 state = 2;
inline bool MsgCompareLoseInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCompareLoseInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCompareLoseInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCompareLoseInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 MsgCompareLoseInfo::state() const {
  // @@protoc_insertion_point(field_get:MsgCompareLoseInfo.state)
  return state_;
}
inline void MsgCompareLoseInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:MsgCompareLoseInfo.state)
}

// optional uint32 pour = 3;
inline bool MsgCompareLoseInfo::has_pour() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgCompareLoseInfo::set_has_pour() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgCompareLoseInfo::clear_has_pour() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgCompareLoseInfo::clear_pour() {
  pour_ = 0u;
  clear_has_pour();
}
inline ::google::protobuf::uint32 MsgCompareLoseInfo::pour() const {
  // @@protoc_insertion_point(field_get:MsgCompareLoseInfo.pour)
  return pour_;
}
inline void MsgCompareLoseInfo::set_pour(::google::protobuf::uint32 value) {
  set_has_pour();
  pour_ = value;
  // @@protoc_insertion_point(field_set:MsgCompareLoseInfo.pour)
}

// -------------------------------------------------------------------

// MsgPinSanZhangRoom

// optional .TPinSanZhangState room_state = 1;
inline bool MsgPinSanZhangRoom::has_room_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_room_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPinSanZhangRoom::clear_has_room_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPinSanZhangRoom::clear_room_state() {
  room_state_ = 0;
  clear_has_room_state();
}
inline ::TPinSanZhangState MsgPinSanZhangRoom::room_state() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.room_state)
  return static_cast< ::TPinSanZhangState >(room_state_);
}
inline void MsgPinSanZhangRoom::set_room_state(::TPinSanZhangState value) {
  assert(::TPinSanZhangState_IsValid(value));
  set_has_room_state();
  room_state_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.room_state)
}

// optional uint32 state_time = 2;
inline bool MsgPinSanZhangRoom::has_state_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_state_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPinSanZhangRoom::clear_has_state_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPinSanZhangRoom::clear_state_time() {
  state_time_ = 0u;
  clear_has_state_time();
}
inline ::google::protobuf::uint32 MsgPinSanZhangRoom::state_time() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.state_time)
  return state_time_;
}
inline void MsgPinSanZhangRoom::set_state_time(::google::protobuf::uint32 value) {
  set_has_state_time();
  state_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.state_time)
}

// repeated .MsgPinSanZhangPlayer player_list = 3;
inline int MsgPinSanZhangRoom::player_list_size() const {
  return player_list_.size();
}
inline void MsgPinSanZhangRoom::clear_player_list() {
  player_list_.Clear();
}
inline const ::MsgPinSanZhangPlayer& MsgPinSanZhangRoom::player_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.player_list)
  return player_list_.Get(index);
}
inline ::MsgPinSanZhangPlayer* MsgPinSanZhangRoom::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangRoom.player_list)
  return player_list_.Mutable(index);
}
inline ::MsgPinSanZhangPlayer* MsgPinSanZhangRoom::add_player_list() {
  // @@protoc_insertion_point(field_add:MsgPinSanZhangRoom.player_list)
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >&
MsgPinSanZhangRoom::player_list() const {
  // @@protoc_insertion_point(field_list:MsgPinSanZhangRoom.player_list)
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >*
MsgPinSanZhangRoom::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgPinSanZhangRoom.player_list)
  return &player_list_;
}

// optional uint64 bank_id = 4;
inline bool MsgPinSanZhangRoom::has_bank_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_bank_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPinSanZhangRoom::clear_has_bank_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPinSanZhangRoom::clear_bank_id() {
  bank_id_ = GOOGLE_ULONGLONG(0);
  clear_has_bank_id();
}
inline ::google::protobuf::uint64 MsgPinSanZhangRoom::bank_id() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.bank_id)
  return bank_id_;
}
inline void MsgPinSanZhangRoom::set_bank_id(::google::protobuf::uint64 value) {
  set_has_bank_id();
  bank_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.bank_id)
}

// optional uint64 room_id = 5;
inline bool MsgPinSanZhangRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPinSanZhangRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPinSanZhangRoom::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
  clear_has_room_id();
}
inline ::google::protobuf::uint64 MsgPinSanZhangRoom::room_id() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.room_id)
  return room_id_;
}
inline void MsgPinSanZhangRoom::set_room_id(::google::protobuf::uint64 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.room_id)
}

// optional uint32 game_count = 6;
inline bool MsgPinSanZhangRoom::has_game_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_game_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPinSanZhangRoom::clear_has_game_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPinSanZhangRoom::clear_game_count() {
  game_count_ = 0u;
  clear_has_game_count();
}
inline ::google::protobuf::uint32 MsgPinSanZhangRoom::game_count() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.game_count)
  return game_count_;
}
inline void MsgPinSanZhangRoom::set_game_count(::google::protobuf::uint32 value) {
  set_has_game_count();
  game_count_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.game_count)
}

// optional .MsgCreatePrivateRoom private_room = 7;
inline bool MsgPinSanZhangRoom::has_private_room() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_private_room() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPinSanZhangRoom::clear_has_private_room() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPinSanZhangRoom::clear_private_room() {
  if (private_room_ != NULL) private_room_->::MsgCreatePrivateRoom::Clear();
  clear_has_private_room();
}
inline const ::MsgCreatePrivateRoom& MsgPinSanZhangRoom::private_room() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.private_room)
  return private_room_ != NULL ? *private_room_ : *default_instance_->private_room_;
}
inline ::MsgCreatePrivateRoom* MsgPinSanZhangRoom::mutable_private_room() {
  set_has_private_room();
  if (private_room_ == NULL) private_room_ = new ::MsgCreatePrivateRoom;
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangRoom.private_room)
  return private_room_;
}
inline ::MsgCreatePrivateRoom* MsgPinSanZhangRoom::release_private_room() {
  clear_has_private_room();
  ::MsgCreatePrivateRoom* temp = private_room_;
  private_room_ = NULL;
  return temp;
}
inline void MsgPinSanZhangRoom::set_allocated_private_room(::MsgCreatePrivateRoom* private_room) {
  delete private_room_;
  private_room_ = private_room;
  if (private_room) {
    set_has_private_room();
  } else {
    clear_has_private_room();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPinSanZhangRoom.private_room)
}

// optional .MsgRoleHostCount role_host = 8;
inline bool MsgPinSanZhangRoom::has_role_host() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_role_host() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPinSanZhangRoom::clear_has_role_host() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPinSanZhangRoom::clear_role_host() {
  if (role_host_ != NULL) role_host_->::MsgRoleHostCount::Clear();
  clear_has_role_host();
}
inline const ::MsgRoleHostCount& MsgPinSanZhangRoom::role_host() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.role_host)
  return role_host_ != NULL ? *role_host_ : *default_instance_->role_host_;
}
inline ::MsgRoleHostCount* MsgPinSanZhangRoom::mutable_role_host() {
  set_has_role_host();
  if (role_host_ == NULL) role_host_ = new ::MsgRoleHostCount;
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangRoom.role_host)
  return role_host_;
}
inline ::MsgRoleHostCount* MsgPinSanZhangRoom::release_role_host() {
  clear_has_role_host();
  ::MsgRoleHostCount* temp = role_host_;
  role_host_ = NULL;
  return temp;
}
inline void MsgPinSanZhangRoom::set_allocated_role_host(::MsgRoleHostCount* role_host) {
  delete role_host_;
  role_host_ = role_host;
  if (role_host) {
    set_has_role_host();
  } else {
    clear_has_role_host();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPinSanZhangRoom.role_host)
}

// optional .MsgRoleStateCount role_state = 9;
inline bool MsgPinSanZhangRoom::has_role_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_role_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgPinSanZhangRoom::clear_has_role_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgPinSanZhangRoom::clear_role_state() {
  if (role_state_ != NULL) role_state_->::MsgRoleStateCount::Clear();
  clear_has_role_state();
}
inline const ::MsgRoleStateCount& MsgPinSanZhangRoom::role_state() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.role_state)
  return role_state_ != NULL ? *role_state_ : *default_instance_->role_state_;
}
inline ::MsgRoleStateCount* MsgPinSanZhangRoom::mutable_role_state() {
  set_has_role_state();
  if (role_state_ == NULL) role_state_ = new ::MsgRoleStateCount;
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangRoom.role_state)
  return role_state_;
}
inline ::MsgRoleStateCount* MsgPinSanZhangRoom::release_role_state() {
  clear_has_role_state();
  ::MsgRoleStateCount* temp = role_state_;
  role_state_ = NULL;
  return temp;
}
inline void MsgPinSanZhangRoom::set_allocated_role_state(::MsgRoleStateCount* role_state) {
  delete role_state_;
  role_state_ = role_state;
  if (role_state) {
    set_has_role_state();
  } else {
    clear_has_role_state();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPinSanZhangRoom.role_state)
}

// optional bool relieve = 10;
inline bool MsgPinSanZhangRoom::has_relieve() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_relieve() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgPinSanZhangRoom::clear_has_relieve() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgPinSanZhangRoom::clear_relieve() {
  relieve_ = false;
  clear_has_relieve();
}
inline bool MsgPinSanZhangRoom::relieve() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.relieve)
  return relieve_;
}
inline void MsgPinSanZhangRoom::set_relieve(bool value) {
  set_has_relieve();
  relieve_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.relieve)
}

// optional uint32 room_pay_type = 11;
inline bool MsgPinSanZhangRoom::has_room_pay_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_room_pay_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgPinSanZhangRoom::clear_has_room_pay_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgPinSanZhangRoom::clear_room_pay_type() {
  room_pay_type_ = 0u;
  clear_has_room_pay_type();
}
inline ::google::protobuf::uint32 MsgPinSanZhangRoom::room_pay_type() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.room_pay_type)
  return room_pay_type_;
}
inline void MsgPinSanZhangRoom::set_room_pay_type(::google::protobuf::uint32 value) {
  set_has_room_pay_type();
  room_pay_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.room_pay_type)
}

// optional uint32 room_muliti = 12;
inline bool MsgPinSanZhangRoom::has_room_muliti() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_room_muliti() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MsgPinSanZhangRoom::clear_has_room_muliti() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MsgPinSanZhangRoom::clear_room_muliti() {
  room_muliti_ = 0u;
  clear_has_room_muliti();
}
inline ::google::protobuf::uint32 MsgPinSanZhangRoom::room_muliti() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.room_muliti)
  return room_muliti_;
}
inline void MsgPinSanZhangRoom::set_room_muliti(::google::protobuf::uint32 value) {
  set_has_room_muliti();
  room_muliti_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.room_muliti)
}

// optional uint32 room_total_muliti = 13;
inline bool MsgPinSanZhangRoom::has_room_total_muliti() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_room_total_muliti() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MsgPinSanZhangRoom::clear_has_room_total_muliti() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MsgPinSanZhangRoom::clear_room_total_muliti() {
  room_total_muliti_ = 0u;
  clear_has_room_total_muliti();
}
inline ::google::protobuf::uint32 MsgPinSanZhangRoom::room_total_muliti() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.room_total_muliti)
  return room_total_muliti_;
}
inline void MsgPinSanZhangRoom::set_room_total_muliti(::google::protobuf::uint32 value) {
  set_has_room_total_muliti();
  room_total_muliti_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.room_total_muliti)
}

// optional uint32 room_current_huihe = 14;
inline bool MsgPinSanZhangRoom::has_room_current_huihe() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_room_current_huihe() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MsgPinSanZhangRoom::clear_has_room_current_huihe() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MsgPinSanZhangRoom::clear_room_current_huihe() {
  room_current_huihe_ = 0u;
  clear_has_room_current_huihe();
}
inline ::google::protobuf::uint32 MsgPinSanZhangRoom::room_current_huihe() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.room_current_huihe)
  return room_current_huihe_;
}
inline void MsgPinSanZhangRoom::set_room_current_huihe(::google::protobuf::uint32 value) {
  set_has_room_current_huihe();
  room_current_huihe_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.room_current_huihe)
}

// optional uint64 action_id = 15;
inline bool MsgPinSanZhangRoom::has_action_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_action_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MsgPinSanZhangRoom::clear_has_action_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MsgPinSanZhangRoom::clear_action_id() {
  action_id_ = GOOGLE_ULONGLONG(0);
  clear_has_action_id();
}
inline ::google::protobuf::uint64 MsgPinSanZhangRoom::action_id() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.action_id)
  return action_id_;
}
inline void MsgPinSanZhangRoom::set_action_id(::google::protobuf::uint64 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.action_id)
}

// optional uint32 wiki = 16;
inline bool MsgPinSanZhangRoom::has_wiki() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MsgPinSanZhangRoom::set_has_wiki() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MsgPinSanZhangRoom::clear_has_wiki() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MsgPinSanZhangRoom::clear_wiki() {
  wiki_ = 0u;
  clear_has_wiki();
}
inline ::google::protobuf::uint32 MsgPinSanZhangRoom::wiki() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangRoom.wiki)
  return wiki_;
}
inline void MsgPinSanZhangRoom::set_wiki(::google::protobuf::uint32 value) {
  set_has_wiki();
  wiki_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangRoom.wiki)
}

// -------------------------------------------------------------------

// MsgPSZGameOverInfo

// optional uint32 win_count = 1;
inline bool MsgPSZGameOverInfo::has_win_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPSZGameOverInfo::set_has_win_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPSZGameOverInfo::clear_has_win_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPSZGameOverInfo::clear_win_count() {
  win_count_ = 0u;
  clear_has_win_count();
}
inline ::google::protobuf::uint32 MsgPSZGameOverInfo::win_count() const {
  // @@protoc_insertion_point(field_get:MsgPSZGameOverInfo.win_count)
  return win_count_;
}
inline void MsgPSZGameOverInfo::set_win_count(::google::protobuf::uint32 value) {
  set_has_win_count();
  win_count_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZGameOverInfo.win_count)
}

// optional uint32 lose_count = 2;
inline bool MsgPSZGameOverInfo::has_lose_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPSZGameOverInfo::set_has_lose_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPSZGameOverInfo::clear_has_lose_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPSZGameOverInfo::clear_lose_count() {
  lose_count_ = 0u;
  clear_has_lose_count();
}
inline ::google::protobuf::uint32 MsgPSZGameOverInfo::lose_count() const {
  // @@protoc_insertion_point(field_get:MsgPSZGameOverInfo.lose_count)
  return lose_count_;
}
inline void MsgPSZGameOverInfo::set_lose_count(::google::protobuf::uint32 value) {
  set_has_lose_count();
  lose_count_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZGameOverInfo.lose_count)
}

// optional uint32 socre_max = 3;
inline bool MsgPSZGameOverInfo::has_socre_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPSZGameOverInfo::set_has_socre_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPSZGameOverInfo::clear_has_socre_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPSZGameOverInfo::clear_socre_max() {
  socre_max_ = 0u;
  clear_has_socre_max();
}
inline ::google::protobuf::uint32 MsgPSZGameOverInfo::socre_max() const {
  // @@protoc_insertion_point(field_get:MsgPSZGameOverInfo.socre_max)
  return socre_max_;
}
inline void MsgPSZGameOverInfo::set_socre_max(::google::protobuf::uint32 value) {
  set_has_socre_max();
  socre_max_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZGameOverInfo.socre_max)
}

// optional uint32 giveup_count = 4;
inline bool MsgPSZGameOverInfo::has_giveup_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPSZGameOverInfo::set_has_giveup_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPSZGameOverInfo::clear_has_giveup_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPSZGameOverInfo::clear_giveup_count() {
  giveup_count_ = 0u;
  clear_has_giveup_count();
}
inline ::google::protobuf::uint32 MsgPSZGameOverInfo::giveup_count() const {
  // @@protoc_insertion_point(field_get:MsgPSZGameOverInfo.giveup_count)
  return giveup_count_;
}
inline void MsgPSZGameOverInfo::set_giveup_count(::google::protobuf::uint32 value) {
  set_has_giveup_count();
  giveup_count_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZGameOverInfo.giveup_count)
}

// -------------------------------------------------------------------

// MsgPinSanZhangShowDown

// optional .TPinSanZhangState room_state = 1;
inline bool MsgPinSanZhangShowDown::has_room_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPinSanZhangShowDown::set_has_room_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPinSanZhangShowDown::clear_has_room_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPinSanZhangShowDown::clear_room_state() {
  room_state_ = 0;
  clear_has_room_state();
}
inline ::TPinSanZhangState MsgPinSanZhangShowDown::room_state() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangShowDown.room_state)
  return static_cast< ::TPinSanZhangState >(room_state_);
}
inline void MsgPinSanZhangShowDown::set_room_state(::TPinSanZhangState value) {
  assert(::TPinSanZhangState_IsValid(value));
  set_has_room_state();
  room_state_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangShowDown.room_state)
}

// optional uint32 state_time = 2;
inline bool MsgPinSanZhangShowDown::has_state_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPinSanZhangShowDown::set_has_state_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPinSanZhangShowDown::clear_has_state_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPinSanZhangShowDown::clear_state_time() {
  state_time_ = 0u;
  clear_has_state_time();
}
inline ::google::protobuf::uint32 MsgPinSanZhangShowDown::state_time() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangShowDown.state_time)
  return state_time_;
}
inline void MsgPinSanZhangShowDown::set_state_time(::google::protobuf::uint32 value) {
  set_has_state_time();
  state_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangShowDown.state_time)
}

// repeated .MsgPinSanZhangPlayer player_list = 3;
inline int MsgPinSanZhangShowDown::player_list_size() const {
  return player_list_.size();
}
inline void MsgPinSanZhangShowDown::clear_player_list() {
  player_list_.Clear();
}
inline const ::MsgPinSanZhangPlayer& MsgPinSanZhangShowDown::player_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangShowDown.player_list)
  return player_list_.Get(index);
}
inline ::MsgPinSanZhangPlayer* MsgPinSanZhangShowDown::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangShowDown.player_list)
  return player_list_.Mutable(index);
}
inline ::MsgPinSanZhangPlayer* MsgPinSanZhangShowDown::add_player_list() {
  // @@protoc_insertion_point(field_add:MsgPinSanZhangShowDown.player_list)
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >&
MsgPinSanZhangShowDown::player_list() const {
  // @@protoc_insertion_point(field_list:MsgPinSanZhangShowDown.player_list)
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPinSanZhangPlayer >*
MsgPinSanZhangShowDown::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgPinSanZhangShowDown.player_list)
  return &player_list_;
}

// optional uint64 room_id = 4;
inline bool MsgPinSanZhangShowDown::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPinSanZhangShowDown::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPinSanZhangShowDown::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPinSanZhangShowDown::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
  clear_has_room_id();
}
inline ::google::protobuf::uint64 MsgPinSanZhangShowDown::room_id() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangShowDown.room_id)
  return room_id_;
}
inline void MsgPinSanZhangShowDown::set_room_id(::google::protobuf::uint64 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangShowDown.room_id)
}

// optional uint32 game_count = 5;
inline bool MsgPinSanZhangShowDown::has_game_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPinSanZhangShowDown::set_has_game_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPinSanZhangShowDown::clear_has_game_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPinSanZhangShowDown::clear_game_count() {
  game_count_ = 0u;
  clear_has_game_count();
}
inline ::google::protobuf::uint32 MsgPinSanZhangShowDown::game_count() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangShowDown.game_count)
  return game_count_;
}
inline void MsgPinSanZhangShowDown::set_game_count(::google::protobuf::uint32 value) {
  set_has_game_count();
  game_count_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangShowDown.game_count)
}

// optional uint32 time = 6;
inline bool MsgPinSanZhangShowDown::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPinSanZhangShowDown::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPinSanZhangShowDown::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPinSanZhangShowDown::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 MsgPinSanZhangShowDown::time() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangShowDown.time)
  return time_;
}
inline void MsgPinSanZhangShowDown::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangShowDown.time)
}

// optional bool game_over = 7;
inline bool MsgPinSanZhangShowDown::has_game_over() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPinSanZhangShowDown::set_has_game_over() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPinSanZhangShowDown::clear_has_game_over() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPinSanZhangShowDown::clear_game_over() {
  game_over_ = false;
  clear_has_game_over();
}
inline bool MsgPinSanZhangShowDown::game_over() const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangShowDown.game_over)
  return game_over_;
}
inline void MsgPinSanZhangShowDown::set_game_over(bool value) {
  set_has_game_over();
  game_over_ = value;
  // @@protoc_insertion_point(field_set:MsgPinSanZhangShowDown.game_over)
}

// repeated .MsgPSZIntegralCount integral_list = 8;
inline int MsgPinSanZhangShowDown::integral_list_size() const {
  return integral_list_.size();
}
inline void MsgPinSanZhangShowDown::clear_integral_list() {
  integral_list_.Clear();
}
inline const ::MsgPSZIntegralCount& MsgPinSanZhangShowDown::integral_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgPinSanZhangShowDown.integral_list)
  return integral_list_.Get(index);
}
inline ::MsgPSZIntegralCount* MsgPinSanZhangShowDown::mutable_integral_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPinSanZhangShowDown.integral_list)
  return integral_list_.Mutable(index);
}
inline ::MsgPSZIntegralCount* MsgPinSanZhangShowDown::add_integral_list() {
  // @@protoc_insertion_point(field_add:MsgPinSanZhangShowDown.integral_list)
  return integral_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPSZIntegralCount >&
MsgPinSanZhangShowDown::integral_list() const {
  // @@protoc_insertion_point(field_list:MsgPinSanZhangShowDown.integral_list)
  return integral_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPSZIntegralCount >*
MsgPinSanZhangShowDown::mutable_integral_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgPinSanZhangShowDown.integral_list)
  return &integral_list_;
}

// -------------------------------------------------------------------

// MsgPSZIntegralCount

// optional uint64 roleid = 1;
inline bool MsgPSZIntegralCount::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPSZIntegralCount::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPSZIntegralCount::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPSZIntegralCount::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 MsgPSZIntegralCount::roleid() const {
  // @@protoc_insertion_point(field_get:MsgPSZIntegralCount.roleid)
  return roleid_;
}
inline void MsgPSZIntegralCount::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZIntegralCount.roleid)
}

// optional uint32 count = 2;
inline bool MsgPSZIntegralCount::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPSZIntegralCount::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPSZIntegralCount::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPSZIntegralCount::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 MsgPSZIntegralCount::count() const {
  // @@protoc_insertion_point(field_get:MsgPSZIntegralCount.count)
  return count_;
}
inline void MsgPSZIntegralCount::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:MsgPSZIntegralCount.count)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TPinSanZhangState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TPinSanZhangState>() {
  return ::TPinSanZhangState_descriptor();
}
template <> struct is_proto_enum< ::TPSZPlayerState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TPSZPlayerState>() {
  return ::TPSZPlayerState_descriptor();
}
template <> struct is_proto_enum< ::TPSZPlayerWik> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TPSZPlayerWik>() {
  return ::TPSZPlayerWik_descriptor();
}
template <> struct is_proto_enum< ::TPinSanZhangCT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TPinSanZhangCT>() {
  return ::TPinSanZhangCT_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fpinsanzhang_2eproto__INCLUDED
