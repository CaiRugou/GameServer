// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail_pro.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mail_pro.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MsgCommonMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgCommonMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSystemTemplate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSystemTemplate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSystemMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSystemMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgRequestMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRequestMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgGainReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgGainReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDeleteMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDeleteMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLookMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLookMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgCheckState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgCheckState_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mail_5fpro_2eproto() {
  protobuf_AddDesc_mail_5fpro_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mail_pro.proto");
  GOOGLE_CHECK(file != NULL);
  MsgCommonMail_descriptor_ = file->message_type(0);
  static const int MsgCommonMail_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, mailid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, sendid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, recvid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, sendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, currency_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, sendusername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, sendchannelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, sendheadid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, template_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, item_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, currency_num_),
  };
  MsgCommonMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgCommonMail_descriptor_,
      MsgCommonMail::default_instance_,
      MsgCommonMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCommonMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgCommonMail));
  MsgSystemTemplate_descriptor_ = file->message_type(1);
  static const int MsgSystemTemplate_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, sendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, pasttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, currency_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, template_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, item_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, currency_num_),
  };
  MsgSystemTemplate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSystemTemplate_descriptor_,
      MsgSystemTemplate::default_instance_,
      MsgSystemTemplate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemTemplate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSystemTemplate));
  MsgSystemMail_descriptor_ = file->message_type(2);
  static const int MsgSystemMail_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, mailid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, sendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, currency_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, template_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, item_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, currency_num_),
  };
  MsgSystemMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSystemMail_descriptor_,
      MsgSystemMail::default_instance_,
      MsgSystemMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSystemMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSystemMail));
  MsgRequestMail_descriptor_ = file->message_type(3);
  static const int MsgRequestMail_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRequestMail, commonlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRequestMail, systemlist_),
  };
  MsgRequestMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgRequestMail_descriptor_,
      MsgRequestMail::default_instance_,
      MsgRequestMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRequestMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRequestMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgRequestMail));
  MsgMailList_descriptor_ = file->message_type(4);
  static const int MsgMailList_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailList, commonsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailList, systemsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailList, commonlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailList, systemlist_),
  };
  MsgMailList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailList_descriptor_,
      MsgMailList::default_instance_,
      MsgMailList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailList));
  MsgGainReward_descriptor_ = file->message_type(5);
  static const int MsgGainReward_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGainReward, idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGainReward, currency_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGainReward, currency_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGainReward, msg_item_),
  };
  MsgGainReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgGainReward_descriptor_,
      MsgGainReward::default_instance_,
      MsgGainReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGainReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGainReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgGainReward));
  MsgDeleteMail_descriptor_ = file->message_type(6);
  static const int MsgDeleteMail_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeleteMail, idx_),
  };
  MsgDeleteMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDeleteMail_descriptor_,
      MsgDeleteMail::default_instance_,
      MsgDeleteMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeleteMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeleteMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDeleteMail));
  MsgLookMail_descriptor_ = file->message_type(7);
  static const int MsgLookMail_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLookMail, idx_),
  };
  MsgLookMail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLookMail_descriptor_,
      MsgLookMail::default_instance_,
      MsgLookMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLookMail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLookMail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLookMail));
  MsgCheckState_descriptor_ = file->message_type(8);
  static const int MsgCheckState_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCheckState, commonlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCheckState, systemlist_),
  };
  MsgCheckState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgCheckState_descriptor_,
      MsgCheckState::default_instance_,
      MsgCheckState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCheckState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgCheckState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgCheckState));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mail_5fpro_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgCommonMail_descriptor_, &MsgCommonMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSystemTemplate_descriptor_, &MsgSystemTemplate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSystemMail_descriptor_, &MsgSystemMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgRequestMail_descriptor_, &MsgRequestMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailList_descriptor_, &MsgMailList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgGainReward_descriptor_, &MsgGainReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDeleteMail_descriptor_, &MsgDeleteMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLookMail_descriptor_, &MsgLookMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgCheckState_descriptor_, &MsgCheckState::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mail_5fpro_2eproto() {
  delete MsgCommonMail::default_instance_;
  delete MsgCommonMail_reflection_;
  delete MsgSystemTemplate::default_instance_;
  delete MsgSystemTemplate_reflection_;
  delete MsgSystemMail::default_instance_;
  delete MsgSystemMail_reflection_;
  delete MsgRequestMail::default_instance_;
  delete MsgRequestMail_reflection_;
  delete MsgMailList::default_instance_;
  delete MsgMailList_reflection_;
  delete MsgGainReward::default_instance_;
  delete MsgGainReward_reflection_;
  delete MsgDeleteMail::default_instance_;
  delete MsgDeleteMail_reflection_;
  delete MsgLookMail::default_instance_;
  delete MsgLookMail_reflection_;
  delete MsgCheckState::default_instance_;
  delete MsgCheckState_reflection_;
}

void protobuf_AddDesc_mail_5fpro_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_define_5fpro_2eproto();
  ::protobuf_AddDesc_public_5fpro_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016mail_pro.proto\032\020define_pro.proto\032\020publ"
    "ic_pro.proto\"\301\002\n\rMsgCommonMail\022\016\n\006mailid"
    "\030\001 \001(\004\022\016\n\006sendid\030\002 \001(\004\022\016\n\006recvid\030\003 \001(\004\022\014"
    "\n\004name\030\004 \001(\t\022\r\n\005title\030\005 \001(\t\022\017\n\007content\030\006"
    " \001(\t\022\020\n\010sendtime\030\007 \001(\r\022\025\n\rcurrency_type\030"
    "\010 \001(\r\022\024\n\014sendusername\030\t \001(\t\022\025\n\rsendchann"
    "elid\030\n \001(\r\022\022\n\nsendheadid\030\013 \001(\r\022\030\n\004type\030\014"
    " \001(\0162\n.TMailType\022\017\n\007item_id\030\r \001(\004\022\023\n\013tem"
    "plate_id\030\016 \001(\r\022\022\n\nitem_count\030\017 \001(\r\022\024\n\014cu"
    "rrency_num\030\020 \001(\004\"\273\001\n\021MsgSystemTemplate\022\014"
    "\n\004name\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\017\n\007content\030\003"
    " \001(\t\022\020\n\010sendtime\030\004 \001(\r\022\020\n\010pasttime\030\005 \001(\r"
    "\022\025\n\rcurrency_type\030\006 \001(\r\022\023\n\013template_id\030\007"
    " \001(\r\022\022\n\nitem_count\030\010 \001(\r\022\024\n\014currency_num"
    "\030\t \001(\004\"\317\001\n\rMsgSystemMail\022\016\n\006mailid\030\001 \001(\004"
    "\022\014\n\004name\030\002 \001(\t\022\r\n\005title\030\003 \001(\t\022\017\n\007content"
    "\030\004 \001(\t\022\020\n\010sendtime\030\005 \001(\r\022\025\n\rcurrency_typ"
    "e\030\006 \001(\r\022\030\n\004type\030\007 \001(\0162\n.TMailType\022\023\n\013tem"
    "plate_id\030\010 \001(\r\022\022\n\nitem_count\030\t \001(\r\022\024\n\014cu"
    "rrency_num\030\n \001(\004\"8\n\016MsgRequestMail\022\022\n\nco"
    "mmonList\030\001 \003(\004\022\022\n\nsystemList\030\002 \003(\004\"}\n\013Ms"
    "gMailList\022\022\n\ncommonSize\030\001 \001(\r\022\022\n\nsystemS"
    "ize\030\002 \001(\r\022\"\n\ncommonList\030\003 \003(\0132\016.MsgCommo"
    "nMail\022\"\n\nsystemList\030\004 \003(\0132\016.MsgSystemMai"
    "l\"e\n\rMsgGainReward\022\013\n\003idx\030\001 \001(\004\022\025\n\rcurre"
    "ncy_type\030\002 \001(\r\022\024\n\014currency_num\030\003 \001(\004\022\032\n\010"
    "msg_item\030\004 \003(\0132\010.MsgItem\"\034\n\rMsgDeleteMai"
    "l\022\013\n\003idx\030\001 \001(\004\"\032\n\013MsgLookMail\022\013\n\003idx\030\001 \001"
    "(\004\"7\n\rMsgCheckState\022\022\n\ncommonList\030\001 \003(\004\022"
    "\022\n\nsystemList\030\002 \003(\004", 1179);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mail_pro.proto", &protobuf_RegisterTypes);
  MsgCommonMail::default_instance_ = new MsgCommonMail();
  MsgSystemTemplate::default_instance_ = new MsgSystemTemplate();
  MsgSystemMail::default_instance_ = new MsgSystemMail();
  MsgRequestMail::default_instance_ = new MsgRequestMail();
  MsgMailList::default_instance_ = new MsgMailList();
  MsgGainReward::default_instance_ = new MsgGainReward();
  MsgDeleteMail::default_instance_ = new MsgDeleteMail();
  MsgLookMail::default_instance_ = new MsgLookMail();
  MsgCheckState::default_instance_ = new MsgCheckState();
  MsgCommonMail::default_instance_->InitAsDefaultInstance();
  MsgSystemTemplate::default_instance_->InitAsDefaultInstance();
  MsgSystemMail::default_instance_->InitAsDefaultInstance();
  MsgRequestMail::default_instance_->InitAsDefaultInstance();
  MsgMailList::default_instance_->InitAsDefaultInstance();
  MsgGainReward::default_instance_->InitAsDefaultInstance();
  MsgDeleteMail::default_instance_->InitAsDefaultInstance();
  MsgLookMail::default_instance_->InitAsDefaultInstance();
  MsgCheckState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mail_5fpro_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mail_5fpro_2eproto {
  StaticDescriptorInitializer_mail_5fpro_2eproto() {
    protobuf_AddDesc_mail_5fpro_2eproto();
  }
} static_descriptor_initializer_mail_5fpro_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgCommonMail::kMailidFieldNumber;
const int MsgCommonMail::kSendidFieldNumber;
const int MsgCommonMail::kRecvidFieldNumber;
const int MsgCommonMail::kNameFieldNumber;
const int MsgCommonMail::kTitleFieldNumber;
const int MsgCommonMail::kContentFieldNumber;
const int MsgCommonMail::kSendtimeFieldNumber;
const int MsgCommonMail::kCurrencyTypeFieldNumber;
const int MsgCommonMail::kSendusernameFieldNumber;
const int MsgCommonMail::kSendchannelidFieldNumber;
const int MsgCommonMail::kSendheadidFieldNumber;
const int MsgCommonMail::kTypeFieldNumber;
const int MsgCommonMail::kItemIdFieldNumber;
const int MsgCommonMail::kTemplateIdFieldNumber;
const int MsgCommonMail::kItemCountFieldNumber;
const int MsgCommonMail::kCurrencyNumFieldNumber;
#endif  // !_MSC_VER

MsgCommonMail::MsgCommonMail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgCommonMail)
}

void MsgCommonMail::InitAsDefaultInstance() {
}

MsgCommonMail::MsgCommonMail(const MsgCommonMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgCommonMail)
}

void MsgCommonMail::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mailid_ = GOOGLE_ULONGLONG(0);
  sendid_ = GOOGLE_ULONGLONG(0);
  recvid_ = GOOGLE_ULONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendtime_ = 0u;
  currency_type_ = 0u;
  sendusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendchannelid_ = 0u;
  sendheadid_ = 0u;
  type_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
  template_id_ = 0u;
  item_count_ = 0u;
  currency_num_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgCommonMail::~MsgCommonMail() {
  // @@protoc_insertion_point(destructor:MsgCommonMail)
  SharedDtor();
}

void MsgCommonMail::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (sendusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendusername_;
  }
  if (this != default_instance_) {
  }
}

void MsgCommonMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCommonMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgCommonMail_descriptor_;
}

const MsgCommonMail& MsgCommonMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_5fpro_2eproto();
  return *default_instance_;
}

MsgCommonMail* MsgCommonMail::default_instance_ = NULL;

MsgCommonMail* MsgCommonMail::New() const {
  return new MsgCommonMail;
}

void MsgCommonMail::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgCommonMail*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(mailid_, recvid_);
    ZR_(sendtime_, currency_type_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(sendchannelid_, item_count_);
    if (has_sendusername()) {
      if (sendusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sendusername_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgCommonMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgCommonMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 mailid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mailid_)));
          set_has_mailid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sendid;
        break;
      }

      // optional uint64 sendid = 2;
      case 2: {
        if (tag == 16) {
         parse_sendid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sendid_)));
          set_has_sendid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_recvid;
        break;
      }

      // optional uint64 recvid = 3;
      case 3: {
        if (tag == 24) {
         parse_recvid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvid_)));
          set_has_recvid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_title;
        break;
      }

      // optional string title = 5;
      case 5: {
        if (tag == 42) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_content;
        break;
      }

      // optional string content = 6;
      case 6: {
        if (tag == 50) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_sendtime;
        break;
      }

      // optional uint32 sendtime = 7;
      case 7: {
        if (tag == 56) {
         parse_sendtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendtime_)));
          set_has_sendtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_currency_type;
        break;
      }

      // optional uint32 currency_type = 8;
      case 8: {
        if (tag == 64) {
         parse_currency_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_type_)));
          set_has_currency_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sendusername;
        break;
      }

      // optional string sendusername = 9;
      case 9: {
        if (tag == 74) {
         parse_sendusername:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sendusername().data(), this->sendusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sendusername");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_sendchannelid;
        break;
      }

      // optional uint32 sendchannelid = 10;
      case 10: {
        if (tag == 80) {
         parse_sendchannelid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendchannelid_)));
          set_has_sendchannelid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_sendheadid;
        break;
      }

      // optional uint32 sendheadid = 11;
      case 11: {
        if (tag == 88) {
         parse_sendheadid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendheadid_)));
          set_has_sendheadid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_type;
        break;
      }

      // optional .TMailType type = 12;
      case 12: {
        if (tag == 96) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TMailType_IsValid(value)) {
            set_type(static_cast< ::TMailType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_item_id;
        break;
      }

      // optional uint64 item_id = 13;
      case 13: {
        if (tag == 104) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_template_id;
        break;
      }

      // optional uint32 template_id = 14;
      case 14: {
        if (tag == 112) {
         parse_template_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &template_id_)));
          set_has_template_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_item_count;
        break;
      }

      // optional uint32 item_count = 15;
      case 15: {
        if (tag == 120) {
         parse_item_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_count_)));
          set_has_item_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_currency_num;
        break;
      }

      // optional uint64 currency_num = 16;
      case 16: {
        if (tag == 128) {
         parse_currency_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &currency_num_)));
          set_has_currency_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgCommonMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgCommonMail)
  return false;
#undef DO_
}

void MsgCommonMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgCommonMail)
  // optional uint64 mailid = 1;
  if (has_mailid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mailid(), output);
  }

  // optional uint64 sendid = 2;
  if (has_sendid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sendid(), output);
  }

  // optional uint64 recvid = 3;
  if (has_recvid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->recvid(), output);
  }

  // optional string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string content = 6;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->content(), output);
  }

  // optional uint32 sendtime = 7;
  if (has_sendtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->sendtime(), output);
  }

  // optional uint32 currency_type = 8;
  if (has_currency_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->currency_type(), output);
  }

  // optional string sendusername = 9;
  if (has_sendusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendusername().data(), this->sendusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sendusername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sendusername(), output);
  }

  // optional uint32 sendchannelid = 10;
  if (has_sendchannelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->sendchannelid(), output);
  }

  // optional uint32 sendheadid = 11;
  if (has_sendheadid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->sendheadid(), output);
  }

  // optional .TMailType type = 12;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->type(), output);
  }

  // optional uint64 item_id = 13;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->item_id(), output);
  }

  // optional uint32 template_id = 14;
  if (has_template_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->template_id(), output);
  }

  // optional uint32 item_count = 15;
  if (has_item_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->item_count(), output);
  }

  // optional uint64 currency_num = 16;
  if (has_currency_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->currency_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgCommonMail)
}

::google::protobuf::uint8* MsgCommonMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgCommonMail)
  // optional uint64 mailid = 1;
  if (has_mailid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mailid(), target);
  }

  // optional uint64 sendid = 2;
  if (has_sendid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sendid(), target);
  }

  // optional uint64 recvid = 3;
  if (has_recvid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->recvid(), target);
  }

  // optional string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string content = 6;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->content(), target);
  }

  // optional uint32 sendtime = 7;
  if (has_sendtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->sendtime(), target);
  }

  // optional uint32 currency_type = 8;
  if (has_currency_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->currency_type(), target);
  }

  // optional string sendusername = 9;
  if (has_sendusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendusername().data(), this->sendusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sendusername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sendusername(), target);
  }

  // optional uint32 sendchannelid = 10;
  if (has_sendchannelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->sendchannelid(), target);
  }

  // optional uint32 sendheadid = 11;
  if (has_sendheadid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->sendheadid(), target);
  }

  // optional .TMailType type = 12;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->type(), target);
  }

  // optional uint64 item_id = 13;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->item_id(), target);
  }

  // optional uint32 template_id = 14;
  if (has_template_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->template_id(), target);
  }

  // optional uint32 item_count = 15;
  if (has_item_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->item_count(), target);
  }

  // optional uint64 currency_num = 16;
  if (has_currency_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->currency_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgCommonMail)
  return target;
}

int MsgCommonMail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 mailid = 1;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mailid());
    }

    // optional uint64 sendid = 2;
    if (has_sendid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sendid());
    }

    // optional uint64 recvid = 3;
    if (has_recvid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->recvid());
    }

    // optional string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string content = 6;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional uint32 sendtime = 7;
    if (has_sendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendtime());
    }

    // optional uint32 currency_type = 8;
    if (has_currency_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency_type());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string sendusername = 9;
    if (has_sendusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sendusername());
    }

    // optional uint32 sendchannelid = 10;
    if (has_sendchannelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendchannelid());
    }

    // optional uint32 sendheadid = 11;
    if (has_sendheadid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendheadid());
    }

    // optional .TMailType type = 12;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional uint64 item_id = 13;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 template_id = 14;
    if (has_template_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->template_id());
    }

    // optional uint32 item_count = 15;
    if (has_item_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_count());
    }

    // optional uint64 currency_num = 16;
    if (has_currency_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->currency_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCommonMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgCommonMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgCommonMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgCommonMail::MergeFrom(const MsgCommonMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mailid()) {
      set_mailid(from.mailid());
    }
    if (from.has_sendid()) {
      set_sendid(from.sendid());
    }
    if (from.has_recvid()) {
      set_recvid(from.recvid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_sendtime()) {
      set_sendtime(from.sendtime());
    }
    if (from.has_currency_type()) {
      set_currency_type(from.currency_type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sendusername()) {
      set_sendusername(from.sendusername());
    }
    if (from.has_sendchannelid()) {
      set_sendchannelid(from.sendchannelid());
    }
    if (from.has_sendheadid()) {
      set_sendheadid(from.sendheadid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_template_id()) {
      set_template_id(from.template_id());
    }
    if (from.has_item_count()) {
      set_item_count(from.item_count());
    }
    if (from.has_currency_num()) {
      set_currency_num(from.currency_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgCommonMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCommonMail::CopyFrom(const MsgCommonMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCommonMail::IsInitialized() const {

  return true;
}

void MsgCommonMail::Swap(MsgCommonMail* other) {
  if (other != this) {
    std::swap(mailid_, other->mailid_);
    std::swap(sendid_, other->sendid_);
    std::swap(recvid_, other->recvid_);
    std::swap(name_, other->name_);
    std::swap(title_, other->title_);
    std::swap(content_, other->content_);
    std::swap(sendtime_, other->sendtime_);
    std::swap(currency_type_, other->currency_type_);
    std::swap(sendusername_, other->sendusername_);
    std::swap(sendchannelid_, other->sendchannelid_);
    std::swap(sendheadid_, other->sendheadid_);
    std::swap(type_, other->type_);
    std::swap(item_id_, other->item_id_);
    std::swap(template_id_, other->template_id_);
    std::swap(item_count_, other->item_count_);
    std::swap(currency_num_, other->currency_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgCommonMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgCommonMail_descriptor_;
  metadata.reflection = MsgCommonMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSystemTemplate::kNameFieldNumber;
const int MsgSystemTemplate::kTitleFieldNumber;
const int MsgSystemTemplate::kContentFieldNumber;
const int MsgSystemTemplate::kSendtimeFieldNumber;
const int MsgSystemTemplate::kPasttimeFieldNumber;
const int MsgSystemTemplate::kCurrencyTypeFieldNumber;
const int MsgSystemTemplate::kTemplateIdFieldNumber;
const int MsgSystemTemplate::kItemCountFieldNumber;
const int MsgSystemTemplate::kCurrencyNumFieldNumber;
#endif  // !_MSC_VER

MsgSystemTemplate::MsgSystemTemplate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgSystemTemplate)
}

void MsgSystemTemplate::InitAsDefaultInstance() {
}

MsgSystemTemplate::MsgSystemTemplate(const MsgSystemTemplate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgSystemTemplate)
}

void MsgSystemTemplate::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendtime_ = 0u;
  pasttime_ = 0u;
  currency_type_ = 0u;
  template_id_ = 0u;
  item_count_ = 0u;
  currency_num_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSystemTemplate::~MsgSystemTemplate() {
  // @@protoc_insertion_point(destructor:MsgSystemTemplate)
  SharedDtor();
}

void MsgSystemTemplate::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void MsgSystemTemplate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSystemTemplate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSystemTemplate_descriptor_;
}

const MsgSystemTemplate& MsgSystemTemplate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_5fpro_2eproto();
  return *default_instance_;
}

MsgSystemTemplate* MsgSystemTemplate::default_instance_ = NULL;

MsgSystemTemplate* MsgSystemTemplate::New() const {
  return new MsgSystemTemplate;
}

void MsgSystemTemplate::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSystemTemplate*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(sendtime_, template_id_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
    item_count_ = 0u;
  }
  currency_num_ = GOOGLE_ULONGLONG(0);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSystemTemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgSystemTemplate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_title;
        break;
      }

      // optional string title = 2;
      case 2: {
        if (tag == 18) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_content;
        break;
      }

      // optional string content = 3;
      case 3: {
        if (tag == 26) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sendtime;
        break;
      }

      // optional uint32 sendtime = 4;
      case 4: {
        if (tag == 32) {
         parse_sendtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendtime_)));
          set_has_sendtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pasttime;
        break;
      }

      // optional uint32 pasttime = 5;
      case 5: {
        if (tag == 40) {
         parse_pasttime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pasttime_)));
          set_has_pasttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_currency_type;
        break;
      }

      // optional uint32 currency_type = 6;
      case 6: {
        if (tag == 48) {
         parse_currency_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_type_)));
          set_has_currency_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_template_id;
        break;
      }

      // optional uint32 template_id = 7;
      case 7: {
        if (tag == 56) {
         parse_template_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &template_id_)));
          set_has_template_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_item_count;
        break;
      }

      // optional uint32 item_count = 8;
      case 8: {
        if (tag == 64) {
         parse_item_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_count_)));
          set_has_item_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_currency_num;
        break;
      }

      // optional uint64 currency_num = 9;
      case 9: {
        if (tag == 72) {
         parse_currency_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &currency_num_)));
          set_has_currency_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgSystemTemplate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgSystemTemplate)
  return false;
#undef DO_
}

void MsgSystemTemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgSystemTemplate)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->content(), output);
  }

  // optional uint32 sendtime = 4;
  if (has_sendtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sendtime(), output);
  }

  // optional uint32 pasttime = 5;
  if (has_pasttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pasttime(), output);
  }

  // optional uint32 currency_type = 6;
  if (has_currency_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->currency_type(), output);
  }

  // optional uint32 template_id = 7;
  if (has_template_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->template_id(), output);
  }

  // optional uint32 item_count = 8;
  if (has_item_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->item_count(), output);
  }

  // optional uint64 currency_num = 9;
  if (has_currency_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->currency_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgSystemTemplate)
}

::google::protobuf::uint8* MsgSystemTemplate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgSystemTemplate)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }

  // optional uint32 sendtime = 4;
  if (has_sendtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sendtime(), target);
  }

  // optional uint32 pasttime = 5;
  if (has_pasttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pasttime(), target);
  }

  // optional uint32 currency_type = 6;
  if (has_currency_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->currency_type(), target);
  }

  // optional uint32 template_id = 7;
  if (has_template_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->template_id(), target);
  }

  // optional uint32 item_count = 8;
  if (has_item_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->item_count(), target);
  }

  // optional uint64 currency_num = 9;
  if (has_currency_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->currency_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgSystemTemplate)
  return target;
}

int MsgSystemTemplate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string content = 3;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional uint32 sendtime = 4;
    if (has_sendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendtime());
    }

    // optional uint32 pasttime = 5;
    if (has_pasttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pasttime());
    }

    // optional uint32 currency_type = 6;
    if (has_currency_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency_type());
    }

    // optional uint32 template_id = 7;
    if (has_template_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->template_id());
    }

    // optional uint32 item_count = 8;
    if (has_item_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_count());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint64 currency_num = 9;
    if (has_currency_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->currency_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSystemTemplate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSystemTemplate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSystemTemplate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSystemTemplate::MergeFrom(const MsgSystemTemplate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_sendtime()) {
      set_sendtime(from.sendtime());
    }
    if (from.has_pasttime()) {
      set_pasttime(from.pasttime());
    }
    if (from.has_currency_type()) {
      set_currency_type(from.currency_type());
    }
    if (from.has_template_id()) {
      set_template_id(from.template_id());
    }
    if (from.has_item_count()) {
      set_item_count(from.item_count());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_currency_num()) {
      set_currency_num(from.currency_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSystemTemplate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSystemTemplate::CopyFrom(const MsgSystemTemplate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSystemTemplate::IsInitialized() const {

  return true;
}

void MsgSystemTemplate::Swap(MsgSystemTemplate* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(title_, other->title_);
    std::swap(content_, other->content_);
    std::swap(sendtime_, other->sendtime_);
    std::swap(pasttime_, other->pasttime_);
    std::swap(currency_type_, other->currency_type_);
    std::swap(template_id_, other->template_id_);
    std::swap(item_count_, other->item_count_);
    std::swap(currency_num_, other->currency_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSystemTemplate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSystemTemplate_descriptor_;
  metadata.reflection = MsgSystemTemplate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSystemMail::kMailidFieldNumber;
const int MsgSystemMail::kNameFieldNumber;
const int MsgSystemMail::kTitleFieldNumber;
const int MsgSystemMail::kContentFieldNumber;
const int MsgSystemMail::kSendtimeFieldNumber;
const int MsgSystemMail::kCurrencyTypeFieldNumber;
const int MsgSystemMail::kTypeFieldNumber;
const int MsgSystemMail::kTemplateIdFieldNumber;
const int MsgSystemMail::kItemCountFieldNumber;
const int MsgSystemMail::kCurrencyNumFieldNumber;
#endif  // !_MSC_VER

MsgSystemMail::MsgSystemMail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgSystemMail)
}

void MsgSystemMail::InitAsDefaultInstance() {
}

MsgSystemMail::MsgSystemMail(const MsgSystemMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgSystemMail)
}

void MsgSystemMail::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mailid_ = GOOGLE_ULONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendtime_ = 0u;
  currency_type_ = 0u;
  type_ = 0;
  template_id_ = 0u;
  item_count_ = 0u;
  currency_num_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSystemMail::~MsgSystemMail() {
  // @@protoc_insertion_point(destructor:MsgSystemMail)
  SharedDtor();
}

void MsgSystemMail::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void MsgSystemMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSystemMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSystemMail_descriptor_;
}

const MsgSystemMail& MsgSystemMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_5fpro_2eproto();
  return *default_instance_;
}

MsgSystemMail* MsgSystemMail::default_instance_ = NULL;

MsgSystemMail* MsgSystemMail::New() const {
  return new MsgSystemMail;
}

void MsgSystemMail::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSystemMail*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(sendtime_, template_id_);
    mailid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
  }
  ZR_(currency_num_, item_count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSystemMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgSystemMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 mailid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mailid_)));
          set_has_mailid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }

      // optional string title = 3;
      case 3: {
        if (tag == 26) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }

      // optional string content = 4;
      case 4: {
        if (tag == 34) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sendtime;
        break;
      }

      // optional uint32 sendtime = 5;
      case 5: {
        if (tag == 40) {
         parse_sendtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendtime_)));
          set_has_sendtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_currency_type;
        break;
      }

      // optional uint32 currency_type = 6;
      case 6: {
        if (tag == 48) {
         parse_currency_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_type_)));
          set_has_currency_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_type;
        break;
      }

      // optional .TMailType type = 7;
      case 7: {
        if (tag == 56) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TMailType_IsValid(value)) {
            set_type(static_cast< ::TMailType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_template_id;
        break;
      }

      // optional uint32 template_id = 8;
      case 8: {
        if (tag == 64) {
         parse_template_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &template_id_)));
          set_has_template_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_item_count;
        break;
      }

      // optional uint32 item_count = 9;
      case 9: {
        if (tag == 72) {
         parse_item_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_count_)));
          set_has_item_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_currency_num;
        break;
      }

      // optional uint64 currency_num = 10;
      case 10: {
        if (tag == 80) {
         parse_currency_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &currency_num_)));
          set_has_currency_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgSystemMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgSystemMail)
  return false;
#undef DO_
}

void MsgSystemMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgSystemMail)
  // optional uint64 mailid = 1;
  if (has_mailid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mailid(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->content(), output);
  }

  // optional uint32 sendtime = 5;
  if (has_sendtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sendtime(), output);
  }

  // optional uint32 currency_type = 6;
  if (has_currency_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->currency_type(), output);
  }

  // optional .TMailType type = 7;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->type(), output);
  }

  // optional uint32 template_id = 8;
  if (has_template_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->template_id(), output);
  }

  // optional uint32 item_count = 9;
  if (has_item_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->item_count(), output);
  }

  // optional uint64 currency_num = 10;
  if (has_currency_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->currency_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgSystemMail)
}

::google::protobuf::uint8* MsgSystemMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgSystemMail)
  // optional uint64 mailid = 1;
  if (has_mailid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mailid(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }

  // optional uint32 sendtime = 5;
  if (has_sendtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sendtime(), target);
  }

  // optional uint32 currency_type = 6;
  if (has_currency_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->currency_type(), target);
  }

  // optional .TMailType type = 7;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->type(), target);
  }

  // optional uint32 template_id = 8;
  if (has_template_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->template_id(), target);
  }

  // optional uint32 item_count = 9;
  if (has_item_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->item_count(), target);
  }

  // optional uint64 currency_num = 10;
  if (has_currency_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->currency_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgSystemMail)
  return target;
}

int MsgSystemMail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 mailid = 1;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mailid());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string title = 3;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional uint32 sendtime = 5;
    if (has_sendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sendtime());
    }

    // optional uint32 currency_type = 6;
    if (has_currency_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency_type());
    }

    // optional .TMailType type = 7;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional uint32 template_id = 8;
    if (has_template_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->template_id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 item_count = 9;
    if (has_item_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_count());
    }

    // optional uint64 currency_num = 10;
    if (has_currency_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->currency_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSystemMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSystemMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSystemMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSystemMail::MergeFrom(const MsgSystemMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mailid()) {
      set_mailid(from.mailid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_sendtime()) {
      set_sendtime(from.sendtime());
    }
    if (from.has_currency_type()) {
      set_currency_type(from.currency_type());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_template_id()) {
      set_template_id(from.template_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_item_count()) {
      set_item_count(from.item_count());
    }
    if (from.has_currency_num()) {
      set_currency_num(from.currency_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSystemMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSystemMail::CopyFrom(const MsgSystemMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSystemMail::IsInitialized() const {

  return true;
}

void MsgSystemMail::Swap(MsgSystemMail* other) {
  if (other != this) {
    std::swap(mailid_, other->mailid_);
    std::swap(name_, other->name_);
    std::swap(title_, other->title_);
    std::swap(content_, other->content_);
    std::swap(sendtime_, other->sendtime_);
    std::swap(currency_type_, other->currency_type_);
    std::swap(type_, other->type_);
    std::swap(template_id_, other->template_id_);
    std::swap(item_count_, other->item_count_);
    std::swap(currency_num_, other->currency_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSystemMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSystemMail_descriptor_;
  metadata.reflection = MsgSystemMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgRequestMail::kCommonListFieldNumber;
const int MsgRequestMail::kSystemListFieldNumber;
#endif  // !_MSC_VER

MsgRequestMail::MsgRequestMail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgRequestMail)
}

void MsgRequestMail::InitAsDefaultInstance() {
}

MsgRequestMail::MsgRequestMail(const MsgRequestMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgRequestMail)
}

void MsgRequestMail::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgRequestMail::~MsgRequestMail() {
  // @@protoc_insertion_point(destructor:MsgRequestMail)
  SharedDtor();
}

void MsgRequestMail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgRequestMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRequestMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRequestMail_descriptor_;
}

const MsgRequestMail& MsgRequestMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_5fpro_2eproto();
  return *default_instance_;
}

MsgRequestMail* MsgRequestMail::default_instance_ = NULL;

MsgRequestMail* MsgRequestMail::New() const {
  return new MsgRequestMail;
}

void MsgRequestMail::Clear() {
  commonlist_.Clear();
  systemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgRequestMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgRequestMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 commonList = 1;
      case 1: {
        if (tag == 8) {
         parse_commonList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_commonlist())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_commonlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_commonList;
        if (input->ExpectTag(16)) goto parse_systemList;
        break;
      }

      // repeated uint64 systemList = 2;
      case 2: {
        if (tag == 16) {
         parse_systemList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_systemlist())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_systemlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_systemList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgRequestMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgRequestMail)
  return false;
#undef DO_
}

void MsgRequestMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgRequestMail)
  // repeated uint64 commonList = 1;
  for (int i = 0; i < this->commonlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->commonlist(i), output);
  }

  // repeated uint64 systemList = 2;
  for (int i = 0; i < this->systemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->systemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgRequestMail)
}

::google::protobuf::uint8* MsgRequestMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgRequestMail)
  // repeated uint64 commonList = 1;
  for (int i = 0; i < this->commonlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->commonlist(i), target);
  }

  // repeated uint64 systemList = 2;
  for (int i = 0; i < this->systemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->systemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgRequestMail)
  return target;
}

int MsgRequestMail::ByteSize() const {
  int total_size = 0;

  // repeated uint64 commonList = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->commonlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->commonlist(i));
    }
    total_size += 1 * this->commonlist_size() + data_size;
  }

  // repeated uint64 systemList = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->systemlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->systemlist(i));
    }
    total_size += 1 * this->systemlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRequestMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgRequestMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgRequestMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgRequestMail::MergeFrom(const MsgRequestMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  commonlist_.MergeFrom(from.commonlist_);
  systemlist_.MergeFrom(from.systemlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgRequestMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRequestMail::CopyFrom(const MsgRequestMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRequestMail::IsInitialized() const {

  return true;
}

void MsgRequestMail::Swap(MsgRequestMail* other) {
  if (other != this) {
    commonlist_.Swap(&other->commonlist_);
    systemlist_.Swap(&other->systemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgRequestMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRequestMail_descriptor_;
  metadata.reflection = MsgRequestMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailList::kCommonSizeFieldNumber;
const int MsgMailList::kSystemSizeFieldNumber;
const int MsgMailList::kCommonListFieldNumber;
const int MsgMailList::kSystemListFieldNumber;
#endif  // !_MSC_VER

MsgMailList::MsgMailList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgMailList)
}

void MsgMailList::InitAsDefaultInstance() {
}

MsgMailList::MsgMailList(const MsgMailList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgMailList)
}

void MsgMailList::SharedCtor() {
  _cached_size_ = 0;
  commonsize_ = 0u;
  systemsize_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailList::~MsgMailList() {
  // @@protoc_insertion_point(destructor:MsgMailList)
  SharedDtor();
}

void MsgMailList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailList_descriptor_;
}

const MsgMailList& MsgMailList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_5fpro_2eproto();
  return *default_instance_;
}

MsgMailList* MsgMailList::default_instance_ = NULL;

MsgMailList* MsgMailList::New() const {
  return new MsgMailList;
}

void MsgMailList::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMailList*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(commonsize_, systemsize_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  commonlist_.Clear();
  systemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgMailList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 commonSize = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &commonsize_)));
          set_has_commonsize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_systemSize;
        break;
      }

      // optional uint32 systemSize = 2;
      case 2: {
        if (tag == 16) {
         parse_systemSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &systemsize_)));
          set_has_systemsize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_commonList;
        break;
      }

      // repeated .MsgCommonMail commonList = 3;
      case 3: {
        if (tag == 26) {
         parse_commonList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_commonlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_commonList;
        if (input->ExpectTag(34)) goto parse_systemList;
        break;
      }

      // repeated .MsgSystemMail systemList = 4;
      case 4: {
        if (tag == 34) {
         parse_systemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_systemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_systemList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgMailList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgMailList)
  return false;
#undef DO_
}

void MsgMailList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgMailList)
  // optional uint32 commonSize = 1;
  if (has_commonsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->commonsize(), output);
  }

  // optional uint32 systemSize = 2;
  if (has_systemsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->systemsize(), output);
  }

  // repeated .MsgCommonMail commonList = 3;
  for (int i = 0; i < this->commonlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->commonlist(i), output);
  }

  // repeated .MsgSystemMail systemList = 4;
  for (int i = 0; i < this->systemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->systemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgMailList)
}

::google::protobuf::uint8* MsgMailList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgMailList)
  // optional uint32 commonSize = 1;
  if (has_commonsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->commonsize(), target);
  }

  // optional uint32 systemSize = 2;
  if (has_systemsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->systemsize(), target);
  }

  // repeated .MsgCommonMail commonList = 3;
  for (int i = 0; i < this->commonlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->commonlist(i), target);
  }

  // repeated .MsgSystemMail systemList = 4;
  for (int i = 0; i < this->systemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->systemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgMailList)
  return target;
}

int MsgMailList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 commonSize = 1;
    if (has_commonsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->commonsize());
    }

    // optional uint32 systemSize = 2;
    if (has_systemsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->systemsize());
    }

  }
  // repeated .MsgCommonMail commonList = 3;
  total_size += 1 * this->commonlist_size();
  for (int i = 0; i < this->commonlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->commonlist(i));
  }

  // repeated .MsgSystemMail systemList = 4;
  total_size += 1 * this->systemlist_size();
  for (int i = 0; i < this->systemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->systemlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailList::MergeFrom(const MsgMailList& from) {
  GOOGLE_CHECK_NE(&from, this);
  commonlist_.MergeFrom(from.commonlist_);
  systemlist_.MergeFrom(from.systemlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commonsize()) {
      set_commonsize(from.commonsize());
    }
    if (from.has_systemsize()) {
      set_systemsize(from.systemsize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailList::CopyFrom(const MsgMailList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailList::IsInitialized() const {

  return true;
}

void MsgMailList::Swap(MsgMailList* other) {
  if (other != this) {
    std::swap(commonsize_, other->commonsize_);
    std::swap(systemsize_, other->systemsize_);
    commonlist_.Swap(&other->commonlist_);
    systemlist_.Swap(&other->systemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailList_descriptor_;
  metadata.reflection = MsgMailList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgGainReward::kIdxFieldNumber;
const int MsgGainReward::kCurrencyTypeFieldNumber;
const int MsgGainReward::kCurrencyNumFieldNumber;
const int MsgGainReward::kMsgItemFieldNumber;
#endif  // !_MSC_VER

MsgGainReward::MsgGainReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgGainReward)
}

void MsgGainReward::InitAsDefaultInstance() {
}

MsgGainReward::MsgGainReward(const MsgGainReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgGainReward)
}

void MsgGainReward::SharedCtor() {
  _cached_size_ = 0;
  idx_ = GOOGLE_ULONGLONG(0);
  currency_type_ = 0u;
  currency_num_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgGainReward::~MsgGainReward() {
  // @@protoc_insertion_point(destructor:MsgGainReward)
  SharedDtor();
}

void MsgGainReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgGainReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGainReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgGainReward_descriptor_;
}

const MsgGainReward& MsgGainReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_5fpro_2eproto();
  return *default_instance_;
}

MsgGainReward* MsgGainReward::default_instance_ = NULL;

MsgGainReward* MsgGainReward::New() const {
  return new MsgGainReward;
}

void MsgGainReward::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgGainReward*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(idx_, currency_num_);
    currency_type_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  msg_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgGainReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgGainReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idx_)));
          set_has_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_currency_type;
        break;
      }

      // optional uint32 currency_type = 2;
      case 2: {
        if (tag == 16) {
         parse_currency_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_type_)));
          set_has_currency_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_currency_num;
        break;
      }

      // optional uint64 currency_num = 3;
      case 3: {
        if (tag == 24) {
         parse_currency_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &currency_num_)));
          set_has_currency_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_msg_item;
        break;
      }

      // repeated .MsgItem msg_item = 4;
      case 4: {
        if (tag == 34) {
         parse_msg_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msg_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_msg_item;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgGainReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgGainReward)
  return false;
#undef DO_
}

void MsgGainReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgGainReward)
  // optional uint64 idx = 1;
  if (has_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idx(), output);
  }

  // optional uint32 currency_type = 2;
  if (has_currency_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->currency_type(), output);
  }

  // optional uint64 currency_num = 3;
  if (has_currency_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->currency_num(), output);
  }

  // repeated .MsgItem msg_item = 4;
  for (int i = 0; i < this->msg_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->msg_item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgGainReward)
}

::google::protobuf::uint8* MsgGainReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgGainReward)
  // optional uint64 idx = 1;
  if (has_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->idx(), target);
  }

  // optional uint32 currency_type = 2;
  if (has_currency_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->currency_type(), target);
  }

  // optional uint64 currency_num = 3;
  if (has_currency_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->currency_num(), target);
  }

  // repeated .MsgItem msg_item = 4;
  for (int i = 0; i < this->msg_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->msg_item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgGainReward)
  return target;
}

int MsgGainReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 idx = 1;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->idx());
    }

    // optional uint32 currency_type = 2;
    if (has_currency_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency_type());
    }

    // optional uint64 currency_num = 3;
    if (has_currency_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->currency_num());
    }

  }
  // repeated .MsgItem msg_item = 4;
  total_size += 1 * this->msg_item_size();
  for (int i = 0; i < this->msg_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msg_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGainReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgGainReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgGainReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgGainReward::MergeFrom(const MsgGainReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  msg_item_.MergeFrom(from.msg_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idx()) {
      set_idx(from.idx());
    }
    if (from.has_currency_type()) {
      set_currency_type(from.currency_type());
    }
    if (from.has_currency_num()) {
      set_currency_num(from.currency_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgGainReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGainReward::CopyFrom(const MsgGainReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGainReward::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->msg_item())) return false;
  return true;
}

void MsgGainReward::Swap(MsgGainReward* other) {
  if (other != this) {
    std::swap(idx_, other->idx_);
    std::swap(currency_type_, other->currency_type_);
    std::swap(currency_num_, other->currency_num_);
    msg_item_.Swap(&other->msg_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgGainReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgGainReward_descriptor_;
  metadata.reflection = MsgGainReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDeleteMail::kIdxFieldNumber;
#endif  // !_MSC_VER

MsgDeleteMail::MsgDeleteMail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgDeleteMail)
}

void MsgDeleteMail::InitAsDefaultInstance() {
}

MsgDeleteMail::MsgDeleteMail(const MsgDeleteMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgDeleteMail)
}

void MsgDeleteMail::SharedCtor() {
  _cached_size_ = 0;
  idx_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDeleteMail::~MsgDeleteMail() {
  // @@protoc_insertion_point(destructor:MsgDeleteMail)
  SharedDtor();
}

void MsgDeleteMail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDeleteMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDeleteMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDeleteMail_descriptor_;
}

const MsgDeleteMail& MsgDeleteMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_5fpro_2eproto();
  return *default_instance_;
}

MsgDeleteMail* MsgDeleteMail::default_instance_ = NULL;

MsgDeleteMail* MsgDeleteMail::New() const {
  return new MsgDeleteMail;
}

void MsgDeleteMail::Clear() {
  idx_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDeleteMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgDeleteMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idx_)));
          set_has_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgDeleteMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgDeleteMail)
  return false;
#undef DO_
}

void MsgDeleteMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgDeleteMail)
  // optional uint64 idx = 1;
  if (has_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgDeleteMail)
}

::google::protobuf::uint8* MsgDeleteMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgDeleteMail)
  // optional uint64 idx = 1;
  if (has_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->idx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgDeleteMail)
  return target;
}

int MsgDeleteMail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 idx = 1;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->idx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDeleteMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDeleteMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDeleteMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDeleteMail::MergeFrom(const MsgDeleteMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idx()) {
      set_idx(from.idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDeleteMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDeleteMail::CopyFrom(const MsgDeleteMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDeleteMail::IsInitialized() const {

  return true;
}

void MsgDeleteMail::Swap(MsgDeleteMail* other) {
  if (other != this) {
    std::swap(idx_, other->idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDeleteMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDeleteMail_descriptor_;
  metadata.reflection = MsgDeleteMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLookMail::kIdxFieldNumber;
#endif  // !_MSC_VER

MsgLookMail::MsgLookMail()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgLookMail)
}

void MsgLookMail::InitAsDefaultInstance() {
}

MsgLookMail::MsgLookMail(const MsgLookMail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgLookMail)
}

void MsgLookMail::SharedCtor() {
  _cached_size_ = 0;
  idx_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLookMail::~MsgLookMail() {
  // @@protoc_insertion_point(destructor:MsgLookMail)
  SharedDtor();
}

void MsgLookMail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgLookMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLookMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLookMail_descriptor_;
}

const MsgLookMail& MsgLookMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_5fpro_2eproto();
  return *default_instance_;
}

MsgLookMail* MsgLookMail::default_instance_ = NULL;

MsgLookMail* MsgLookMail::New() const {
  return new MsgLookMail;
}

void MsgLookMail::Clear() {
  idx_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLookMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgLookMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idx_)));
          set_has_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgLookMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgLookMail)
  return false;
#undef DO_
}

void MsgLookMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgLookMail)
  // optional uint64 idx = 1;
  if (has_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgLookMail)
}

::google::protobuf::uint8* MsgLookMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgLookMail)
  // optional uint64 idx = 1;
  if (has_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->idx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgLookMail)
  return target;
}

int MsgLookMail::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 idx = 1;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->idx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLookMail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLookMail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLookMail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLookMail::MergeFrom(const MsgLookMail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idx()) {
      set_idx(from.idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLookMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLookMail::CopyFrom(const MsgLookMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLookMail::IsInitialized() const {

  return true;
}

void MsgLookMail::Swap(MsgLookMail* other) {
  if (other != this) {
    std::swap(idx_, other->idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLookMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLookMail_descriptor_;
  metadata.reflection = MsgLookMail_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgCheckState::kCommonListFieldNumber;
const int MsgCheckState::kSystemListFieldNumber;
#endif  // !_MSC_VER

MsgCheckState::MsgCheckState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgCheckState)
}

void MsgCheckState::InitAsDefaultInstance() {
}

MsgCheckState::MsgCheckState(const MsgCheckState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgCheckState)
}

void MsgCheckState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgCheckState::~MsgCheckState() {
  // @@protoc_insertion_point(destructor:MsgCheckState)
  SharedDtor();
}

void MsgCheckState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgCheckState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCheckState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgCheckState_descriptor_;
}

const MsgCheckState& MsgCheckState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_5fpro_2eproto();
  return *default_instance_;
}

MsgCheckState* MsgCheckState::default_instance_ = NULL;

MsgCheckState* MsgCheckState::New() const {
  return new MsgCheckState;
}

void MsgCheckState::Clear() {
  commonlist_.Clear();
  systemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgCheckState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgCheckState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 commonList = 1;
      case 1: {
        if (tag == 8) {
         parse_commonList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_commonlist())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_commonlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_commonList;
        if (input->ExpectTag(16)) goto parse_systemList;
        break;
      }

      // repeated uint64 systemList = 2;
      case 2: {
        if (tag == 16) {
         parse_systemList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_systemlist())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_systemlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_systemList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgCheckState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgCheckState)
  return false;
#undef DO_
}

void MsgCheckState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgCheckState)
  // repeated uint64 commonList = 1;
  for (int i = 0; i < this->commonlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->commonlist(i), output);
  }

  // repeated uint64 systemList = 2;
  for (int i = 0; i < this->systemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->systemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgCheckState)
}

::google::protobuf::uint8* MsgCheckState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgCheckState)
  // repeated uint64 commonList = 1;
  for (int i = 0; i < this->commonlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->commonlist(i), target);
  }

  // repeated uint64 systemList = 2;
  for (int i = 0; i < this->systemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->systemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgCheckState)
  return target;
}

int MsgCheckState::ByteSize() const {
  int total_size = 0;

  // repeated uint64 commonList = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->commonlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->commonlist(i));
    }
    total_size += 1 * this->commonlist_size() + data_size;
  }

  // repeated uint64 systemList = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->systemlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->systemlist(i));
    }
    total_size += 1 * this->systemlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCheckState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgCheckState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgCheckState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgCheckState::MergeFrom(const MsgCheckState& from) {
  GOOGLE_CHECK_NE(&from, this);
  commonlist_.MergeFrom(from.commonlist_);
  systemlist_.MergeFrom(from.systemlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgCheckState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCheckState::CopyFrom(const MsgCheckState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCheckState::IsInitialized() const {

  return true;
}

void MsgCheckState::Swap(MsgCheckState* other) {
  if (other != this) {
    commonlist_.Swap(&other->commonlist_);
    systemlist_.Swap(&other->systemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgCheckState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgCheckState_descriptor_;
  metadata.reflection = MsgCheckState_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
