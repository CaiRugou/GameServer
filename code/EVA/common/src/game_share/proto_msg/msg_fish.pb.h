// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_fish.proto

#ifndef PROTOBUF_msg_5ffish_2eproto__INCLUDED
#define PROTOBUF_msg_5ffish_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "public_pro.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5ffish_2eproto();
void protobuf_AssignDesc_msg_5ffish_2eproto();
void protobuf_ShutdownFile_msg_5ffish_2eproto();

class MsgFishGroup;
class MsgFishHitInfo;
class MsgFishHitResult;
class MsgFishPlayerInfo;
class MsgFishRoomInfo;

// ===================================================================

class MsgFishGroup : public ::google::protobuf::Message {
 public:
  MsgFishGroup();
  virtual ~MsgFishGroup();

  MsgFishGroup(const MsgFishGroup& from);

  inline MsgFishGroup& operator=(const MsgFishGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFishGroup& default_instance();

  void Swap(MsgFishGroup* other);

  // implements Message ----------------------------------------------

  MsgFishGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFishGroup& from);
  void MergeFrom(const MsgFishGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 fish_id = 1;
  inline bool has_fish_id() const;
  inline void clear_fish_id();
  static const int kFishIdFieldNumber = 1;
  inline ::google::protobuf::uint32 fish_id() const;
  inline void set_fish_id(::google::protobuf::uint32 value);

  // repeated string client_id_str = 2;
  inline int client_id_str_size() const;
  inline void clear_client_id_str();
  static const int kClientIdStrFieldNumber = 2;
  inline const ::std::string& client_id_str(int index) const;
  inline ::std::string* mutable_client_id_str(int index);
  inline void set_client_id_str(int index, const ::std::string& value);
  inline void set_client_id_str(int index, const char* value);
  inline void set_client_id_str(int index, const char* value, size_t size);
  inline ::std::string* add_client_id_str();
  inline void add_client_id_str(const ::std::string& value);
  inline void add_client_id_str(const char* value);
  inline void add_client_id_str(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& client_id_str() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_client_id_str();

  // @@protoc_insertion_point(class_scope:MsgFishGroup)
 private:
  inline void set_has_fish_id();
  inline void clear_has_fish_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> client_id_str_;
  ::google::protobuf::uint32 fish_id_;
  friend void  protobuf_AddDesc_msg_5ffish_2eproto();
  friend void protobuf_AssignDesc_msg_5ffish_2eproto();
  friend void protobuf_ShutdownFile_msg_5ffish_2eproto();

  void InitAsDefaultInstance();
  static MsgFishGroup* default_instance_;
};
// -------------------------------------------------------------------

class MsgFishHitInfo : public ::google::protobuf::Message {
 public:
  MsgFishHitInfo();
  virtual ~MsgFishHitInfo();

  MsgFishHitInfo(const MsgFishHitInfo& from);

  inline MsgFishHitInfo& operator=(const MsgFishHitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFishHitInfo& default_instance();

  void Swap(MsgFishHitInfo* other);

  // implements Message ----------------------------------------------

  MsgFishHitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFishHitInfo& from);
  void MergeFrom(const MsgFishHitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgFishGroup hit_group = 1;
  inline int hit_group_size() const;
  inline void clear_hit_group();
  static const int kHitGroupFieldNumber = 1;
  inline const ::MsgFishGroup& hit_group(int index) const;
  inline ::MsgFishGroup* mutable_hit_group(int index);
  inline ::MsgFishGroup* add_hit_group();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgFishGroup >&
      hit_group() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgFishGroup >*
      mutable_hit_group();

  // optional uint32 gun_id = 2;
  inline bool has_gun_id() const;
  inline void clear_gun_id();
  static const int kGunIdFieldNumber = 2;
  inline ::google::protobuf::uint32 gun_id() const;
  inline void set_gun_id(::google::protobuf::uint32 value);

  // optional uint32 bullet_id = 3;
  inline bool has_bullet_id() const;
  inline void clear_bullet_id();
  static const int kBulletIdFieldNumber = 3;
  inline ::google::protobuf::uint32 bullet_id() const;
  inline void set_bullet_id(::google::protobuf::uint32 value);

  // optional uint32 skill_id = 4;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 4;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgFishHitInfo)
 private:
  inline void set_has_gun_id();
  inline void clear_has_gun_id();
  inline void set_has_bullet_id();
  inline void clear_has_bullet_id();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgFishGroup > hit_group_;
  ::google::protobuf::uint32 gun_id_;
  ::google::protobuf::uint32 bullet_id_;
  ::google::protobuf::uint32 skill_id_;
  friend void  protobuf_AddDesc_msg_5ffish_2eproto();
  friend void protobuf_AssignDesc_msg_5ffish_2eproto();
  friend void protobuf_ShutdownFile_msg_5ffish_2eproto();

  void InitAsDefaultInstance();
  static MsgFishHitInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgFishHitResult : public ::google::protobuf::Message {
 public:
  MsgFishHitResult();
  virtual ~MsgFishHitResult();

  MsgFishHitResult(const MsgFishHitResult& from);

  inline MsgFishHitResult& operator=(const MsgFishHitResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFishHitResult& default_instance();

  void Swap(MsgFishHitResult* other);

  // implements Message ----------------------------------------------

  MsgFishHitResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFishHitResult& from);
  void MergeFrom(const MsgFishHitResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string client_id_str = 1;
  inline bool has_client_id_str() const;
  inline void clear_client_id_str();
  static const int kClientIdStrFieldNumber = 1;
  inline const ::std::string& client_id_str() const;
  inline void set_client_id_str(const ::std::string& value);
  inline void set_client_id_str(const char* value);
  inline void set_client_id_str(const char* value, size_t size);
  inline ::std::string* mutable_client_id_str();
  inline ::std::string* release_client_id_str();
  inline void set_allocated_client_id_str(::std::string* client_id_str);

  // optional uint64 base_money = 2;
  inline bool has_base_money() const;
  inline void clear_base_money();
  static const int kBaseMoneyFieldNumber = 2;
  inline ::google::protobuf::uint64 base_money() const;
  inline void set_base_money(::google::protobuf::uint64 value);

  // optional uint64 reward_money = 3;
  inline bool has_reward_money() const;
  inline void clear_reward_money();
  static const int kRewardMoneyFieldNumber = 3;
  inline ::google::protobuf::uint64 reward_money() const;
  inline void set_reward_money(::google::protobuf::uint64 value);

  // optional uint64 reward_rmb = 4;
  inline bool has_reward_rmb() const;
  inline void clear_reward_rmb();
  static const int kRewardRmbFieldNumber = 4;
  inline ::google::protobuf::uint64 reward_rmb() const;
  inline void set_reward_rmb(::google::protobuf::uint64 value);

  // optional uint32 reward_skill = 5;
  inline bool has_reward_skill() const;
  inline void clear_reward_skill();
  static const int kRewardSkillFieldNumber = 5;
  inline ::google::protobuf::uint32 reward_skill() const;
  inline void set_reward_skill(::google::protobuf::uint32 value);

  // optional uint32 reward_coupon = 6;
  inline bool has_reward_coupon() const;
  inline void clear_reward_coupon();
  static const int kRewardCouponFieldNumber = 6;
  inline ::google::protobuf::uint32 reward_coupon() const;
  inline void set_reward_coupon(::google::protobuf::uint32 value);

  // optional uint64 ply_money = 7;
  inline bool has_ply_money() const;
  inline void clear_ply_money();
  static const int kPlyMoneyFieldNumber = 7;
  inline ::google::protobuf::uint64 ply_money() const;
  inline void set_ply_money(::google::protobuf::uint64 value);

  // optional uint64 ply_rmb = 8;
  inline bool has_ply_rmb() const;
  inline void clear_ply_rmb();
  static const int kPlyRmbFieldNumber = 8;
  inline ::google::protobuf::uint64 ply_rmb() const;
  inline void set_ply_rmb(::google::protobuf::uint64 value);

  // optional uint64 ply_coupon = 9;
  inline bool has_ply_coupon() const;
  inline void clear_ply_coupon();
  static const int kPlyCouponFieldNumber = 9;
  inline ::google::protobuf::uint64 ply_coupon() const;
  inline void set_ply_coupon(::google::protobuf::uint64 value);

  // repeated .MsgItem item_list = 10;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 10;
  inline const ::MsgItem& item_list(int index) const;
  inline ::MsgItem* mutable_item_list(int index);
  inline ::MsgItem* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgItem >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgItem >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:MsgFishHitResult)
 private:
  inline void set_has_client_id_str();
  inline void clear_has_client_id_str();
  inline void set_has_base_money();
  inline void clear_has_base_money();
  inline void set_has_reward_money();
  inline void clear_has_reward_money();
  inline void set_has_reward_rmb();
  inline void clear_has_reward_rmb();
  inline void set_has_reward_skill();
  inline void clear_has_reward_skill();
  inline void set_has_reward_coupon();
  inline void clear_has_reward_coupon();
  inline void set_has_ply_money();
  inline void clear_has_ply_money();
  inline void set_has_ply_rmb();
  inline void clear_has_ply_rmb();
  inline void set_has_ply_coupon();
  inline void clear_has_ply_coupon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* client_id_str_;
  ::google::protobuf::uint64 base_money_;
  ::google::protobuf::uint64 reward_money_;
  ::google::protobuf::uint64 reward_rmb_;
  ::google::protobuf::uint32 reward_skill_;
  ::google::protobuf::uint32 reward_coupon_;
  ::google::protobuf::uint64 ply_money_;
  ::google::protobuf::uint64 ply_rmb_;
  ::google::protobuf::uint64 ply_coupon_;
  ::google::protobuf::RepeatedPtrField< ::MsgItem > item_list_;
  friend void  protobuf_AddDesc_msg_5ffish_2eproto();
  friend void protobuf_AssignDesc_msg_5ffish_2eproto();
  friend void protobuf_ShutdownFile_msg_5ffish_2eproto();

  void InitAsDefaultInstance();
  static MsgFishHitResult* default_instance_;
};
// -------------------------------------------------------------------

class MsgFishPlayerInfo : public ::google::protobuf::Message {
 public:
  MsgFishPlayerInfo();
  virtual ~MsgFishPlayerInfo();

  MsgFishPlayerInfo(const MsgFishPlayerInfo& from);

  inline MsgFishPlayerInfo& operator=(const MsgFishPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFishPlayerInfo& default_instance();

  void Swap(MsgFishPlayerInfo* other);

  // implements Message ----------------------------------------------

  MsgFishPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFishPlayerInfo& from);
  void MergeFrom(const MsgFishPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPlayerInfo player_base = 1;
  inline bool has_player_base() const;
  inline void clear_player_base();
  static const int kPlayerBaseFieldNumber = 1;
  inline const ::MsgPlayerInfo& player_base() const;
  inline ::MsgPlayerInfo* mutable_player_base();
  inline ::MsgPlayerInfo* release_player_base();
  inline void set_allocated_player_base(::MsgPlayerInfo* player_base);

  // optional uint64 energy = 2;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 2;
  inline ::google::protobuf::uint64 energy() const;
  inline void set_energy(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MsgFishPlayerInfo)
 private:
  inline void set_has_player_base();
  inline void clear_has_player_base();
  inline void set_has_energy();
  inline void clear_has_energy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgPlayerInfo* player_base_;
  ::google::protobuf::uint64 energy_;
  friend void  protobuf_AddDesc_msg_5ffish_2eproto();
  friend void protobuf_AssignDesc_msg_5ffish_2eproto();
  friend void protobuf_ShutdownFile_msg_5ffish_2eproto();

  void InitAsDefaultInstance();
  static MsgFishPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgFishRoomInfo : public ::google::protobuf::Message {
 public:
  MsgFishRoomInfo();
  virtual ~MsgFishRoomInfo();

  MsgFishRoomInfo(const MsgFishRoomInfo& from);

  inline MsgFishRoomInfo& operator=(const MsgFishRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFishRoomInfo& default_instance();

  void Swap(MsgFishRoomInfo* other);

  // implements Message ----------------------------------------------

  MsgFishRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFishRoomInfo& from);
  void MergeFrom(const MsgFishRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MsgFishPlayerInfo player_list = 1;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 1;
  inline const ::MsgFishPlayerInfo& player_list(int index) const;
  inline ::MsgFishPlayerInfo* mutable_player_list(int index);
  inline ::MsgFishPlayerInfo* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgFishPlayerInfo >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgFishPlayerInfo >*
      mutable_player_list();

  // optional uint64 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint64 room_id() const;
  inline void set_room_id(::google::protobuf::uint64 value);

  // optional .MsgBaseRoomInfo room_info = 3;
  inline bool has_room_info() const;
  inline void clear_room_info();
  static const int kRoomInfoFieldNumber = 3;
  inline const ::MsgBaseRoomInfo& room_info() const;
  inline ::MsgBaseRoomInfo* mutable_room_info();
  inline ::MsgBaseRoomInfo* release_room_info();
  inline void set_allocated_room_info(::MsgBaseRoomInfo* room_info);

  // @@protoc_insertion_point(class_scope:MsgFishRoomInfo)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_room_info();
  inline void clear_has_room_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgFishPlayerInfo > player_list_;
  ::google::protobuf::uint64 room_id_;
  ::MsgBaseRoomInfo* room_info_;
  friend void  protobuf_AddDesc_msg_5ffish_2eproto();
  friend void protobuf_AssignDesc_msg_5ffish_2eproto();
  friend void protobuf_ShutdownFile_msg_5ffish_2eproto();

  void InitAsDefaultInstance();
  static MsgFishRoomInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgFishGroup

// optional uint32 fish_id = 1;
inline bool MsgFishGroup::has_fish_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgFishGroup::set_has_fish_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgFishGroup::clear_has_fish_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgFishGroup::clear_fish_id() {
  fish_id_ = 0u;
  clear_has_fish_id();
}
inline ::google::protobuf::uint32 MsgFishGroup::fish_id() const {
  // @@protoc_insertion_point(field_get:MsgFishGroup.fish_id)
  return fish_id_;
}
inline void MsgFishGroup::set_fish_id(::google::protobuf::uint32 value) {
  set_has_fish_id();
  fish_id_ = value;
  // @@protoc_insertion_point(field_set:MsgFishGroup.fish_id)
}

// repeated string client_id_str = 2;
inline int MsgFishGroup::client_id_str_size() const {
  return client_id_str_.size();
}
inline void MsgFishGroup::clear_client_id_str() {
  client_id_str_.Clear();
}
inline const ::std::string& MsgFishGroup::client_id_str(int index) const {
  // @@protoc_insertion_point(field_get:MsgFishGroup.client_id_str)
  return client_id_str_.Get(index);
}
inline ::std::string* MsgFishGroup::mutable_client_id_str(int index) {
  // @@protoc_insertion_point(field_mutable:MsgFishGroup.client_id_str)
  return client_id_str_.Mutable(index);
}
inline void MsgFishGroup::set_client_id_str(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MsgFishGroup.client_id_str)
  client_id_str_.Mutable(index)->assign(value);
}
inline void MsgFishGroup::set_client_id_str(int index, const char* value) {
  client_id_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgFishGroup.client_id_str)
}
inline void MsgFishGroup::set_client_id_str(int index, const char* value, size_t size) {
  client_id_str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgFishGroup.client_id_str)
}
inline ::std::string* MsgFishGroup::add_client_id_str() {
  return client_id_str_.Add();
}
inline void MsgFishGroup::add_client_id_str(const ::std::string& value) {
  client_id_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MsgFishGroup.client_id_str)
}
inline void MsgFishGroup::add_client_id_str(const char* value) {
  client_id_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MsgFishGroup.client_id_str)
}
inline void MsgFishGroup::add_client_id_str(const char* value, size_t size) {
  client_id_str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MsgFishGroup.client_id_str)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgFishGroup::client_id_str() const {
  // @@protoc_insertion_point(field_list:MsgFishGroup.client_id_str)
  return client_id_str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgFishGroup::mutable_client_id_str() {
  // @@protoc_insertion_point(field_mutable_list:MsgFishGroup.client_id_str)
  return &client_id_str_;
}

// -------------------------------------------------------------------

// MsgFishHitInfo

// repeated .MsgFishGroup hit_group = 1;
inline int MsgFishHitInfo::hit_group_size() const {
  return hit_group_.size();
}
inline void MsgFishHitInfo::clear_hit_group() {
  hit_group_.Clear();
}
inline const ::MsgFishGroup& MsgFishHitInfo::hit_group(int index) const {
  // @@protoc_insertion_point(field_get:MsgFishHitInfo.hit_group)
  return hit_group_.Get(index);
}
inline ::MsgFishGroup* MsgFishHitInfo::mutable_hit_group(int index) {
  // @@protoc_insertion_point(field_mutable:MsgFishHitInfo.hit_group)
  return hit_group_.Mutable(index);
}
inline ::MsgFishGroup* MsgFishHitInfo::add_hit_group() {
  // @@protoc_insertion_point(field_add:MsgFishHitInfo.hit_group)
  return hit_group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgFishGroup >&
MsgFishHitInfo::hit_group() const {
  // @@protoc_insertion_point(field_list:MsgFishHitInfo.hit_group)
  return hit_group_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgFishGroup >*
MsgFishHitInfo::mutable_hit_group() {
  // @@protoc_insertion_point(field_mutable_list:MsgFishHitInfo.hit_group)
  return &hit_group_;
}

// optional uint32 gun_id = 2;
inline bool MsgFishHitInfo::has_gun_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgFishHitInfo::set_has_gun_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgFishHitInfo::clear_has_gun_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgFishHitInfo::clear_gun_id() {
  gun_id_ = 0u;
  clear_has_gun_id();
}
inline ::google::protobuf::uint32 MsgFishHitInfo::gun_id() const {
  // @@protoc_insertion_point(field_get:MsgFishHitInfo.gun_id)
  return gun_id_;
}
inline void MsgFishHitInfo::set_gun_id(::google::protobuf::uint32 value) {
  set_has_gun_id();
  gun_id_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitInfo.gun_id)
}

// optional uint32 bullet_id = 3;
inline bool MsgFishHitInfo::has_bullet_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgFishHitInfo::set_has_bullet_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgFishHitInfo::clear_has_bullet_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgFishHitInfo::clear_bullet_id() {
  bullet_id_ = 0u;
  clear_has_bullet_id();
}
inline ::google::protobuf::uint32 MsgFishHitInfo::bullet_id() const {
  // @@protoc_insertion_point(field_get:MsgFishHitInfo.bullet_id)
  return bullet_id_;
}
inline void MsgFishHitInfo::set_bullet_id(::google::protobuf::uint32 value) {
  set_has_bullet_id();
  bullet_id_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitInfo.bullet_id)
}

// optional uint32 skill_id = 4;
inline bool MsgFishHitInfo::has_skill_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgFishHitInfo::set_has_skill_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgFishHitInfo::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgFishHitInfo::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 MsgFishHitInfo::skill_id() const {
  // @@protoc_insertion_point(field_get:MsgFishHitInfo.skill_id)
  return skill_id_;
}
inline void MsgFishHitInfo::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitInfo.skill_id)
}

// -------------------------------------------------------------------

// MsgFishHitResult

// optional string client_id_str = 1;
inline bool MsgFishHitResult::has_client_id_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgFishHitResult::set_has_client_id_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgFishHitResult::clear_has_client_id_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgFishHitResult::clear_client_id_str() {
  if (client_id_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_id_str_->clear();
  }
  clear_has_client_id_str();
}
inline const ::std::string& MsgFishHitResult::client_id_str() const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.client_id_str)
  return *client_id_str_;
}
inline void MsgFishHitResult::set_client_id_str(const ::std::string& value) {
  set_has_client_id_str();
  if (client_id_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_id_str_ = new ::std::string;
  }
  client_id_str_->assign(value);
  // @@protoc_insertion_point(field_set:MsgFishHitResult.client_id_str)
}
inline void MsgFishHitResult::set_client_id_str(const char* value) {
  set_has_client_id_str();
  if (client_id_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_id_str_ = new ::std::string;
  }
  client_id_str_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgFishHitResult.client_id_str)
}
inline void MsgFishHitResult::set_client_id_str(const char* value, size_t size) {
  set_has_client_id_str();
  if (client_id_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_id_str_ = new ::std::string;
  }
  client_id_str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgFishHitResult.client_id_str)
}
inline ::std::string* MsgFishHitResult::mutable_client_id_str() {
  set_has_client_id_str();
  if (client_id_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_id_str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgFishHitResult.client_id_str)
  return client_id_str_;
}
inline ::std::string* MsgFishHitResult::release_client_id_str() {
  clear_has_client_id_str();
  if (client_id_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = client_id_str_;
    client_id_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgFishHitResult::set_allocated_client_id_str(::std::string* client_id_str) {
  if (client_id_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete client_id_str_;
  }
  if (client_id_str) {
    set_has_client_id_str();
    client_id_str_ = client_id_str;
  } else {
    clear_has_client_id_str();
    client_id_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgFishHitResult.client_id_str)
}

// optional uint64 base_money = 2;
inline bool MsgFishHitResult::has_base_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgFishHitResult::set_has_base_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgFishHitResult::clear_has_base_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgFishHitResult::clear_base_money() {
  base_money_ = GOOGLE_ULONGLONG(0);
  clear_has_base_money();
}
inline ::google::protobuf::uint64 MsgFishHitResult::base_money() const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.base_money)
  return base_money_;
}
inline void MsgFishHitResult::set_base_money(::google::protobuf::uint64 value) {
  set_has_base_money();
  base_money_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitResult.base_money)
}

// optional uint64 reward_money = 3;
inline bool MsgFishHitResult::has_reward_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgFishHitResult::set_has_reward_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgFishHitResult::clear_has_reward_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgFishHitResult::clear_reward_money() {
  reward_money_ = GOOGLE_ULONGLONG(0);
  clear_has_reward_money();
}
inline ::google::protobuf::uint64 MsgFishHitResult::reward_money() const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.reward_money)
  return reward_money_;
}
inline void MsgFishHitResult::set_reward_money(::google::protobuf::uint64 value) {
  set_has_reward_money();
  reward_money_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitResult.reward_money)
}

// optional uint64 reward_rmb = 4;
inline bool MsgFishHitResult::has_reward_rmb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgFishHitResult::set_has_reward_rmb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgFishHitResult::clear_has_reward_rmb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgFishHitResult::clear_reward_rmb() {
  reward_rmb_ = GOOGLE_ULONGLONG(0);
  clear_has_reward_rmb();
}
inline ::google::protobuf::uint64 MsgFishHitResult::reward_rmb() const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.reward_rmb)
  return reward_rmb_;
}
inline void MsgFishHitResult::set_reward_rmb(::google::protobuf::uint64 value) {
  set_has_reward_rmb();
  reward_rmb_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitResult.reward_rmb)
}

// optional uint32 reward_skill = 5;
inline bool MsgFishHitResult::has_reward_skill() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgFishHitResult::set_has_reward_skill() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgFishHitResult::clear_has_reward_skill() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgFishHitResult::clear_reward_skill() {
  reward_skill_ = 0u;
  clear_has_reward_skill();
}
inline ::google::protobuf::uint32 MsgFishHitResult::reward_skill() const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.reward_skill)
  return reward_skill_;
}
inline void MsgFishHitResult::set_reward_skill(::google::protobuf::uint32 value) {
  set_has_reward_skill();
  reward_skill_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitResult.reward_skill)
}

// optional uint32 reward_coupon = 6;
inline bool MsgFishHitResult::has_reward_coupon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgFishHitResult::set_has_reward_coupon() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgFishHitResult::clear_has_reward_coupon() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgFishHitResult::clear_reward_coupon() {
  reward_coupon_ = 0u;
  clear_has_reward_coupon();
}
inline ::google::protobuf::uint32 MsgFishHitResult::reward_coupon() const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.reward_coupon)
  return reward_coupon_;
}
inline void MsgFishHitResult::set_reward_coupon(::google::protobuf::uint32 value) {
  set_has_reward_coupon();
  reward_coupon_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitResult.reward_coupon)
}

// optional uint64 ply_money = 7;
inline bool MsgFishHitResult::has_ply_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgFishHitResult::set_has_ply_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgFishHitResult::clear_has_ply_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgFishHitResult::clear_ply_money() {
  ply_money_ = GOOGLE_ULONGLONG(0);
  clear_has_ply_money();
}
inline ::google::protobuf::uint64 MsgFishHitResult::ply_money() const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.ply_money)
  return ply_money_;
}
inline void MsgFishHitResult::set_ply_money(::google::protobuf::uint64 value) {
  set_has_ply_money();
  ply_money_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitResult.ply_money)
}

// optional uint64 ply_rmb = 8;
inline bool MsgFishHitResult::has_ply_rmb() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgFishHitResult::set_has_ply_rmb() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgFishHitResult::clear_has_ply_rmb() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgFishHitResult::clear_ply_rmb() {
  ply_rmb_ = GOOGLE_ULONGLONG(0);
  clear_has_ply_rmb();
}
inline ::google::protobuf::uint64 MsgFishHitResult::ply_rmb() const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.ply_rmb)
  return ply_rmb_;
}
inline void MsgFishHitResult::set_ply_rmb(::google::protobuf::uint64 value) {
  set_has_ply_rmb();
  ply_rmb_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitResult.ply_rmb)
}

// optional uint64 ply_coupon = 9;
inline bool MsgFishHitResult::has_ply_coupon() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgFishHitResult::set_has_ply_coupon() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgFishHitResult::clear_has_ply_coupon() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgFishHitResult::clear_ply_coupon() {
  ply_coupon_ = GOOGLE_ULONGLONG(0);
  clear_has_ply_coupon();
}
inline ::google::protobuf::uint64 MsgFishHitResult::ply_coupon() const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.ply_coupon)
  return ply_coupon_;
}
inline void MsgFishHitResult::set_ply_coupon(::google::protobuf::uint64 value) {
  set_has_ply_coupon();
  ply_coupon_ = value;
  // @@protoc_insertion_point(field_set:MsgFishHitResult.ply_coupon)
}

// repeated .MsgItem item_list = 10;
inline int MsgFishHitResult::item_list_size() const {
  return item_list_.size();
}
inline void MsgFishHitResult::clear_item_list() {
  item_list_.Clear();
}
inline const ::MsgItem& MsgFishHitResult::item_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgFishHitResult.item_list)
  return item_list_.Get(index);
}
inline ::MsgItem* MsgFishHitResult::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgFishHitResult.item_list)
  return item_list_.Mutable(index);
}
inline ::MsgItem* MsgFishHitResult::add_item_list() {
  // @@protoc_insertion_point(field_add:MsgFishHitResult.item_list)
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgItem >&
MsgFishHitResult::item_list() const {
  // @@protoc_insertion_point(field_list:MsgFishHitResult.item_list)
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgItem >*
MsgFishHitResult::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgFishHitResult.item_list)
  return &item_list_;
}

// -------------------------------------------------------------------

// MsgFishPlayerInfo

// optional .MsgPlayerInfo player_base = 1;
inline bool MsgFishPlayerInfo::has_player_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgFishPlayerInfo::set_has_player_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgFishPlayerInfo::clear_has_player_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgFishPlayerInfo::clear_player_base() {
  if (player_base_ != NULL) player_base_->::MsgPlayerInfo::Clear();
  clear_has_player_base();
}
inline const ::MsgPlayerInfo& MsgFishPlayerInfo::player_base() const {
  // @@protoc_insertion_point(field_get:MsgFishPlayerInfo.player_base)
  return player_base_ != NULL ? *player_base_ : *default_instance_->player_base_;
}
inline ::MsgPlayerInfo* MsgFishPlayerInfo::mutable_player_base() {
  set_has_player_base();
  if (player_base_ == NULL) player_base_ = new ::MsgPlayerInfo;
  // @@protoc_insertion_point(field_mutable:MsgFishPlayerInfo.player_base)
  return player_base_;
}
inline ::MsgPlayerInfo* MsgFishPlayerInfo::release_player_base() {
  clear_has_player_base();
  ::MsgPlayerInfo* temp = player_base_;
  player_base_ = NULL;
  return temp;
}
inline void MsgFishPlayerInfo::set_allocated_player_base(::MsgPlayerInfo* player_base) {
  delete player_base_;
  player_base_ = player_base;
  if (player_base) {
    set_has_player_base();
  } else {
    clear_has_player_base();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgFishPlayerInfo.player_base)
}

// optional uint64 energy = 2;
inline bool MsgFishPlayerInfo::has_energy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgFishPlayerInfo::set_has_energy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgFishPlayerInfo::clear_has_energy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgFishPlayerInfo::clear_energy() {
  energy_ = GOOGLE_ULONGLONG(0);
  clear_has_energy();
}
inline ::google::protobuf::uint64 MsgFishPlayerInfo::energy() const {
  // @@protoc_insertion_point(field_get:MsgFishPlayerInfo.energy)
  return energy_;
}
inline void MsgFishPlayerInfo::set_energy(::google::protobuf::uint64 value) {
  set_has_energy();
  energy_ = value;
  // @@protoc_insertion_point(field_set:MsgFishPlayerInfo.energy)
}

// -------------------------------------------------------------------

// MsgFishRoomInfo

// repeated .MsgFishPlayerInfo player_list = 1;
inline int MsgFishRoomInfo::player_list_size() const {
  return player_list_.size();
}
inline void MsgFishRoomInfo::clear_player_list() {
  player_list_.Clear();
}
inline const ::MsgFishPlayerInfo& MsgFishRoomInfo::player_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgFishRoomInfo.player_list)
  return player_list_.Get(index);
}
inline ::MsgFishPlayerInfo* MsgFishRoomInfo::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgFishRoomInfo.player_list)
  return player_list_.Mutable(index);
}
inline ::MsgFishPlayerInfo* MsgFishRoomInfo::add_player_list() {
  // @@protoc_insertion_point(field_add:MsgFishRoomInfo.player_list)
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgFishPlayerInfo >&
MsgFishRoomInfo::player_list() const {
  // @@protoc_insertion_point(field_list:MsgFishRoomInfo.player_list)
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgFishPlayerInfo >*
MsgFishRoomInfo::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgFishRoomInfo.player_list)
  return &player_list_;
}

// optional uint64 room_id = 2;
inline bool MsgFishRoomInfo::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgFishRoomInfo::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgFishRoomInfo::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgFishRoomInfo::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
  clear_has_room_id();
}
inline ::google::protobuf::uint64 MsgFishRoomInfo::room_id() const {
  // @@protoc_insertion_point(field_get:MsgFishRoomInfo.room_id)
  return room_id_;
}
inline void MsgFishRoomInfo::set_room_id(::google::protobuf::uint64 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:MsgFishRoomInfo.room_id)
}

// optional .MsgBaseRoomInfo room_info = 3;
inline bool MsgFishRoomInfo::has_room_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgFishRoomInfo::set_has_room_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgFishRoomInfo::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgFishRoomInfo::clear_room_info() {
  if (room_info_ != NULL) room_info_->::MsgBaseRoomInfo::Clear();
  clear_has_room_info();
}
inline const ::MsgBaseRoomInfo& MsgFishRoomInfo::room_info() const {
  // @@protoc_insertion_point(field_get:MsgFishRoomInfo.room_info)
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::MsgBaseRoomInfo* MsgFishRoomInfo::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) room_info_ = new ::MsgBaseRoomInfo;
  // @@protoc_insertion_point(field_mutable:MsgFishRoomInfo.room_info)
  return room_info_;
}
inline ::MsgBaseRoomInfo* MsgFishRoomInfo::release_room_info() {
  clear_has_room_info();
  ::MsgBaseRoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void MsgFishRoomInfo::set_allocated_room_info(::MsgBaseRoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgFishRoomInfo.room_info)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5ffish_2eproto__INCLUDED
