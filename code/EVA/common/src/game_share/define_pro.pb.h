// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define_pro.proto

#ifndef PROTOBUF_define_5fpro_2eproto__INCLUDED
#define PROTOBUF_define_5fpro_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_define_5fpro_2eproto();
void protobuf_AssignDesc_define_5fpro_2eproto();
void protobuf_ShutdownFile_define_5fpro_2eproto();


enum TEvent {
  EventInvalid = 0,
  EventEnterGame = 1,
  EventPlayerUp = 2,
  EventJoinRoom = 3,
  EventLogin = 4,
  EventBlackJackWin = 5,
  EventBlackJackPush = 6,
  EventBlackJackLose = 7,
  EventBlackJackBust = 8,
  EventBlackJackSplit = 9,
  EventBlackJackDouble = 10,
  EventBlackJackInsurance = 11,
  EventChalBJTopRank = 12,
  EventBlackJackAddMoney = 13,
  EventRanking = 14,
  EventTotalPay = 15,
  EventInviteFight = 16,
  EventAddFriend = 17,
  EventAddDonate = 18,
  EventAddBind = 19,
  EventAddRMB = 20
};
bool TEvent_IsValid(int value);
const TEvent TEvent_MIN = EventInvalid;
const TEvent TEvent_MAX = EventAddRMB;
const int TEvent_ARRAYSIZE = TEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* TEvent_descriptor();
inline const ::std::string& TEvent_Name(TEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    TEvent_descriptor(), value);
}
inline bool TEvent_Parse(
    const ::std::string& name, TEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TEvent>(
    TEvent_descriptor(), name, value);
}
enum TConditionType {
  CondTInvalid = 0,
  CondTBlackJack_JoinRoom = 1,
  CondTBlackJack_Game = 2,
  CondTBlackJack_Win = 3,
  CondTBlackJack_Push = 4,
  CondTBlackJack_Lose = 5,
  CondTBlackJack_Bust = 6,
  CondTBlackJack_Split = 7,
  CondTBlackJack_Double = 8,
  CondTBlackJack_Insurance = 9,
  CondTBlackJack_ChalBJTopRank = 10,
  CondTBlackJack_BlackJackAddMoney = 11,
  CondTRanking = 12,
  CondTTexasPoker_Game = 13,
  CondTTexasPoker_Win = 14,
  CondTTexasPoker_GameOut = 15,
  CondTTexasPoker_AddPour = 16,
  CondTTexasPoker_AddPourWin = 17,
  CondTTexasPoker_AllFoldCard = 18,
  CondTSlot_Game = 19,
  CondTSlot_HorizontalLine = 20,
  CondTSlot_WinCoin = 21,
  CondTTexasPoker_ChalGame = 22,
  CondTTexasPoker_ChalClose = 23,
  CondTTexasPoker_ChalLose = 24,
  CondTTexasPoker_FoldCard = 25,
  CondTCasino_AddFriend = 26,
  CondTCasino_BindFacebook = 27,
  CondTCasino_ChangeName = 28,
  CondTCasino_ChangePicture = 29,
  CondTCasino_GaveGift = 30,
  CondTCasino_ReceivedGift = 31,
  CondTCasino_TotalMoney = 32,
  CondTBlackJack_Less10Win = 33,
  CondTSlot_TotalMoney = 34,
  CondTSlot_ChalGame = 35,
  CondTBlackJack_ChalGame = 36,
  CondTMahjong_Score = 37,
  CondTMahjong_Game = 38,
  CondTMahjong_Win = 39,
  CondTMahjong_Winning = 40,
  CondTMahjong_WinMoney = 41,
  CondTMahjong_MaxFlower = 42,
  CondTMahjong_Shar = 43,
  CondTMahjong_ChalGame = 44,
  CondTMahjong_EatCard = 45,
  CondTMahjong_PengCard = 46,
  CondTMahjong_GangCard = 47,
  CondTMahjong_HuCard = 48,
  CondTCasino_Like = 49,
  CondTFish_Catch = 50,
  CondTFish_Appointed_Catch = 51,
  CondTHorse_Bingo = 52,
  CondTCasino_SendSplitGift = 53,
  CondTNiuNiu_Win = 54,
  CondTNiuNiu_WinMoney = 55
};
bool TConditionType_IsValid(int value);
const TConditionType TConditionType_MIN = CondTInvalid;
const TConditionType TConditionType_MAX = CondTNiuNiu_WinMoney;
const int TConditionType_ARRAYSIZE = TConditionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TConditionType_descriptor();
inline const ::std::string& TConditionType_Name(TConditionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TConditionType_descriptor(), value);
}
inline bool TConditionType_Parse(
    const ::std::string& name, TConditionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TConditionType>(
    TConditionType_descriptor(), name, value);
}
enum BlackJackEndingState {
  BlackJackEnding_Invalid = 0,
  BlackJackEnding_Win = 1,
  BlackJackEnding_Push = 2,
  BlackJackEnding_Lose = 3,
  BlackJackEnding_Bust = 4
};
bool BlackJackEndingState_IsValid(int value);
const BlackJackEndingState BlackJackEndingState_MIN = BlackJackEnding_Invalid;
const BlackJackEndingState BlackJackEndingState_MAX = BlackJackEnding_Bust;
const int BlackJackEndingState_ARRAYSIZE = BlackJackEndingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* BlackJackEndingState_descriptor();
inline const ::std::string& BlackJackEndingState_Name(BlackJackEndingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    BlackJackEndingState_descriptor(), value);
}
inline bool BlackJackEndingState_Parse(
    const ::std::string& name, BlackJackEndingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BlackJackEndingState>(
    BlackJackEndingState_descriptor(), name, value);
}
enum TSyncDataType {
  SYNC_LEADER_HERO_ID = 0,
  SYNC_ROLE_NAME = 1,
  SYNC_ROLE_LEVEL = 2,
  SYNC_FRIEND_FIGHT_COUNT = 3,
  SYNC_MONEY = 4,
  SYNC_ADD_MONEY = 5,
  SYNC_LEVEL = 6,
  SYNC_ARENA_COUNT = 7,
  SYNC_FRIEND_COUNT = 8,
  SYNC_ADD_RMB = 9,
  SYNC_ADD_FRIEND = 10,
  SYNC_ADD_BLACK = 11,
  SYNC_DEL_FRIEND = 12,
  SYNC_DEL_BLACK = 13,
  SYNC_PVP_SCORE = 14,
  SYNC_ROLE_STATE = 15,
  SYNC_ARENA_RANKING = 16,
  SYNC_BUILD_LEVEL = 17
};
bool TSyncDataType_IsValid(int value);
const TSyncDataType TSyncDataType_MIN = SYNC_LEADER_HERO_ID;
const TSyncDataType TSyncDataType_MAX = SYNC_BUILD_LEVEL;
const int TSyncDataType_ARRAYSIZE = TSyncDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TSyncDataType_descriptor();
inline const ::std::string& TSyncDataType_Name(TSyncDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TSyncDataType_descriptor(), value);
}
inline bool TSyncDataType_Parse(
    const ::std::string& name, TSyncDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TSyncDataType>(
    TSyncDataType_descriptor(), name, value);
}
enum TErrorType {
  INVALID_TYPE = 0,
  ACCOUNT_LOGGED = 1,
  SERVER_FULL = 2,
  SERVER_NOT_OPEN = 3,
  TEXT_SUCESS = 4,
  TEXT_FAIL = 5,
  PWD_ERROR = 6,
  PLAYER_ONLINE_TO_FES = 7,
  PLAYER_EXISTS = 8,
  PLAYER_RELOAD = 9,
  PLAYER_REMOVE = 10,
  GET_REWARD_TIME = 11,
  ACCOUNT_ERROR = 12,
  NOT_FOUND_ACCOUNT = 13,
  NOT_FOUND_PLAYER = 14,
  SUCESS = 15,
  NO_AUTH_TYPE = 16,
  CONFIG_NOT_FOUND = 17,
  NOT_ENOUGH_MONEY = 18,
  NOT_ENOUGH_RMB = 19,
  MAIL_NOT_FIND = 20,
  CMAIL_NOTNEW_MAIL = 21,
  NOT_ENOUGH_COIN = 22,
  NOT_FOUND_REC_CHAMPIONSHIP = 23,
  SYSTEM_DATED_MAIL = 24,
  COMMON_DATED_MAIL = 25,
  COMMON_EXIST_REWARD = 26,
  FRIEND_APPLY_FAILE = 27,
  FRIEND_APPLY_SUCCEED = 28,
  TARGET_NO_EXIST = 29,
  FRIEND_RELATION = 30,
  FRIEND_ADD_FAILE = 31,
  FRIEND_REWARD_FAILE = 32,
  FRIEND_REWARD_SUCCEED = 33,
  COMMON_MAIL_MAX_COUNT = 34,
  ROOM_TYPE_IS_FULL = 35,
  JOIN_ROOM_FAILE = 36,
  TIPS_COUNT_OUT_OF_BOUNDS = 37,
  WATCH_THE_ADS_FAIL = 38,
  REWARD_FRIEND_FAILE = 39,
  ROOM_TYPE_FAILE = 40,
  NEED_RELOGIN = 41,
  GAIN_MAIL_COMMON_FAILE = 42,
  GAIN_MAIL_SYSTEM_FAILE = 43,
  REFRESH_MONEY = 44,
  ROOM_SEAT_FULL = 45,
  ALREADY_LIKE = 46,
  BONUS_GAME_ERROR = 47,
  NOT_FOUND_ROOM = 48,
  FRIEND_NO_ONLINE = 49,
  INVITE_FRIEND_SUCCEED = 51,
  TP_APPLY_NO_MONEY = 52,
  TP_APPLY_REGISTERED = 53,
  TP_ENTER_CHALL_FAILE = 54,
  TP_APPLY_GAME_PAST = 55,
  TARGET_PLAYER_REC_GIFT_MAX = 56,
  SEND_MONEY_SUCESS = 57,
  SEND_MONEY_LIMIT = 58,
  BUY_BACK_LIMIT = 59,
  BLACK_LIST_RELATION = 60,
  BLACK_LIST_NOT_IN = 61,
  RENAME_TIME_LIMIT_FAILE = 62,
  SELF_FRIEND_LIST_FULL = 63,
  TARGET_FRIEND_LIST_FULL = 64,
  SAFE_BOX_PWD_ERROR = 65,
  SAFE_BOX_PWD_IS_SET = 66,
  SAFE_BOX_IS_OPEN = 67,
  SAFE_BOX_NEED_OPEN = 68,
  NOT_ENOUGH_ITEM = 69,
  LIMITUSE_FAILED = 70,
  MOBILE_BIND_SUCESS = 71,
  MOBILE_BIND_ERROR = 72,
  NO_FRIEND_RELATION = 73,
  ADD_ITEM_SUCCEED = 74,
  ADD_ITEM_FAIL = 75,
  SEND_MAIL_NOT_FIND_ITEM = 76,
  SEND_MAIL_ITEM_COUNT_FAIL = 77,
  USE_ITEM_SUCESS = 78,
  SCORE_CLEAR_POSITIVE = 79,
  BUY_ITEM_MONEY_NOT_ENOUGH = 80,
  BUY_ITEM_RMB_NOT_ENOUGH = 81,
  BUY_ITEM_VIP_LEVEL_NOT_ENOUGH = 82,
  FREEZE_PLAYER = 83,
  NOT_FOUND_ITEM = 84,
  NOT_TIP_ITEM_OUT_ROOM = 85,
  SYNC_ITEM_CRC_EQUAL = 86,
  FRIEND_APPLY_REQUEST = 87,
  ICON_ALREADY_ACTIVATE = 88,
  ICON_ALREADY_UNLOCK = 89,
  ICON_NOT_ACTIVATE_NOT_UNCLOCK = 90,
  CURR_UNCLOCK_ICON_ID = 91,
  QUICK_UNCLOCK_ICON_ID_FAILE = 92,
  MOBILE_BIND_TIMEOUT = 93,
  SEND_ITEM_SUCCESS = 94,
  USER_READY_NOT_MONEY = 95,
  SAFE_BOX_PWD_SET_ERROR = 96,
  EXIST_FRIEND_APPLY = 97,
  CREATE_PRIVATE_ROOM_FAILE = 98,
  HAVE_PRIVATE_ROOM = 99,
  NEED_ENTER_SELF_ROOM = 100,
  PRIVATE_ROOM_NOTEXIST = 101,
  ENTER_PRIVATE_ROOM_FAILE = 102,
  JOIN_PRIVATE_ROOM_FAILE = 103,
  PRIVATE_ROOM_CONSUME_FALIE = 104,
  HORSE_ID_ERROR = 105,
  PRIVATE_ROOM_ITEM_FAILE = 106,
  RELIEVE_ROOM_NOT_STARTGAME = 107,
  WEAPON_LEVEL_ERROR = 108,
  BULLET_ALREADY_UNLOCK = 109,
  SEND_ENVELOPE_MONEY_LIMIT = 110,
  NO_MORE_ENVELOPE = 111,
  ALREADY_GOT_THIS_ENVELOPE = 112,
  NOT_ENOUGH_COUPON = 113,
  NIUNIU_JOINROOM_FAIL = 114,
  NIUNIU_STARTGAME_FAIL = 115,
  RUNFAST_OUTCARD_TYPE_ERROR = 116,
  RUNFAST_OUTCARD_NOTHEISAN = 117,
  RUNFAST_OUTCARD_GUANBUZHU = 118,
  OUTCARD_INVALID = 119,
  GIFT_CARD_INVALID = 120,
  RECV_GIFT_CARD_INVALID = 121,
  GUANDAN_CANNOT_PASS_CARD = 122,
  MAHJONG_MODA_LIMIT_OUT_CARD = 123,
  MAHJONG_VERSION_FAILE = 124,
  RUNFAST_OUTCARD_FAILE = 125,
  BIND_PHONE_ERROR = 126,
  RFQ_JNPL_MAX = 127,
  RFQ_NO_FIND = 128,
  RFQ_NO_ACTIME = 129,
  RFQ_AC_MAX = 130,
  RFQ_JN_MAX = 131,
  RFQ_AC_ITEM = 132,
  RFQ_JN_ITEM = 133,
  RFQ_AC_CANCEL = 134,
  RFQ_JN_CANCEL = 135,
  RFQ_NO_JNTIME = 136,
  RFQ_JN_RE = 137,
  RFQ_JN_ER = 138,
  RFQ_ERR_STATE = 139,
  RFQ_ST_ER = 140,
  RFQ_RF_UMT = 141,
  RF_UN_TR = 142,
  RF_ST_ROOM = 143,
  RF_ST_NOIDLE = 144,
  RFQ_TIME_ACIN = 145,
  RFQ_TIME_JNIN = 146,
  RFQ_ACTION_ER = 147,
  RFQ_TIME_ER = 148,
  DDZ_OUTCARD_TYPE_ERROR = 149,
  DDZ_OUTCARD_GUANBUZHU = 150,
  DDZ_OUTCARD_FAILE = 151,
  BUY_ITEM_JIFEN_NOT_ENOUGH = 152,
  PF_CHANGE_SUCCEED = 153,
  PF_CHANGE_FAILED = 154,
  BUY_LIMIT_COUNT = 155,
  RFQ_NO_OPEN = 156,
  BIND_IDCARD_ERROR = 157,
  BIND_IDCARD_TIMEOUT = 158,
  BIND_IDCARD_SUCCEED = 159,
  RF_JNNO_BIND = 160,
  RF_QY_REG = 161,
  RF_QYBC_REG = 162,
  ALREADY_BIND = 163,
  TARGET_BIND_LIST_FULL = 164,
  DST_ID_ERROR = 165,
  DST_STATE_ERROR = 166,
  DST_PLAY_COUNT_ERROR = 167,
  SELF_BIRTH_TIME_OLD = 168,
  SELF_PLAY_COUNT_ERROR = 169,
  SELF_BIND_STATE_ERROR = 170,
  APP_NAME_DIFFERENT = 171,
  BIND_PROXY_FAILE = 173,
  BIND_PROXY_ECHO = 174,
  BIND_PROXY_ING = 175,
  REQUEST_BIND_PROXY = 176,
  BIND_BANK_ERROR = 177,
  BIND_BANK_TIMEOUT = 178,
  BIND_BANK_SUCCEED = 179,
  TIP_ITEM_NOT = 180,
  FRIEND_TISSUE_NULL = 181,
  FRIEND_TISSUE_NOT_JOIN = 182,
  FRIEND_TISSUE_ID_ERR = 183,
  FRIEND_TISSUE_NOT_OWNER = 184,
  FRIEND_TISSUE_JOIN_OVER_COUNT = 185,
  FRIEND_TISSUE_REMOVE_ID_SAME = 186,
  FRIEND_TISSUE_ALLREADY_IN = 187,
  FRIEND_TISSUE_AUTHORISE_FAIL = 188,
  VIP_TISSUE_CREATE_COST_ERR = 189,
  CREATE_TISSUE_SUB_ITEM_FAIL = 190,
  VIP_FRIEND_TISSUE_OVER_COUNT = 191,
  NOR_FRIEND_TISSUE_OVER_COUNT = 192,
  RFQ_AC_TIMELIMIT = 193,
  RFQ_QY_ERTYPE = 194,
  REQUEST_QY_SCORE = 195,
  REQUEST_QY_MONEY = 196,
  REQUEST_QY_DAER = 197,
  REQUEST_HTQY_SCORE = 198,
  REQUEST_HTQY_MONEY = 199,
  PROXY_ID_DIFFERENT = 200,
  NOT_PROXY_ID = 201,
  SICHUAN_HUANSANZHANG_FAIL = 202,
  SHOP_BUY_ERROR = 203,
  RELIEVEROOM_FAILE_BYSTATE = 204,
  RECORD_NOT_EXIST = 205,
  GANDENGYAN_JOINROOM_FAIL = 206,
  GANDENGYAN_STARTGAME_FAIL = 207,
  UNBIND_PROXY_FAILE = 208,
  UNBIND_PROXY_NONE = 209,
  UNBIND_PROXY_ING = 210,
  UNBIND_PROXY_SUCCEED = 211,
  CHESS_REGRETCHESS_REFUSE = 212,
  CHESS_ASKPEACE_REFUSE = 213,
  CHESS_MOVECHESS_FAILED = 214,
  QINGER_JOINROOM_FAIL = 215,
  QINGER_STARTGAME_FAIL = 216,
  FRIEND_TISSUE_GAME_OVER_COUNT = 217,
  RFIEND_TISSUE_MONEY_VOER = 218,
  RFIEND_TISSUE_LACK_MONEY = 219,
  REQUEST_VC_ERROR = 220,
  REQUEST_VC_ING = 221,
  REQUEST_VC_SUCCEED = 222,
  CHESS_NEED_INCHECK = 223,
  CHESS_WILL_BECHECK = 224,
  MATCH_QUALIFYING_CODE_FAILE = 500,
  MATCH_GETCODE_FAILE = 501,
  CREATE_MATCH_ROOM_FAILE = 502
};
bool TErrorType_IsValid(int value);
const TErrorType TErrorType_MIN = INVALID_TYPE;
const TErrorType TErrorType_MAX = CREATE_MATCH_ROOM_FAILE;
const int TErrorType_ARRAYSIZE = TErrorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TErrorType_descriptor();
inline const ::std::string& TErrorType_Name(TErrorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TErrorType_descriptor(), value);
}
inline bool TErrorType_Parse(
    const ::std::string& name, TErrorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TErrorType>(
    TErrorType_descriptor(), name, value);
}
enum TPlayerFlagBit {
  PLAYER_FLAG_BIND_FACEBOOK = 0,
  PLAYER_FLAG_FIRST_RECHARGE = 1,
  PLAYER_FLAG_CREATE_INIT = 2,
  PLAYER_FLAG_SAFE_BOX_PWD_SET = 3,
  PLAYER_FLAG_BIND_MOBILE_NUMBER = 4,
  PLAYER_FLAG_BIND_IDCARD = 5,
  PLAYER_FLAG_BIND_BANKCARD = 6,
  PLAYER_FLAG_BIND_PROXY = 7,
  PLAYER_FLAG_TISSUE_AUTHORIZE = 8,
  PLAYER_FLAG_BIND_PROXY_BEFORE = 9,
  PLAYER_FLAG_BULLET_A = 10,
  PLAYER_FLAG_BULLET_B = 11,
  PLAYER_FLAG_BULLET_C = 12,
  PLAYER_FLAG_BULLET_D = 13,
  PLAYER_FLAG_BULLET_E = 14,
  PLAYER_FLAG_BULLET_F = 15,
  PLAYER_FLAG_BULLET_G = 16,
  PLAYER_FLAG_BIND_CHANNEL = 17,
  PLAYER_FLAG_BIND_GD_IDCARD = 18,
  PLAYER_FLAG_BIND_PDK_IDCARD = 19,
  PLAYER_FALG_BIND_GD_BANKCARD = 20,
  PLAYER_FALG_BIND_PDK_BANKCARD = 21,
  PLAYER_FLAG_INVALID = 64
};
bool TPlayerFlagBit_IsValid(int value);
const TPlayerFlagBit TPlayerFlagBit_MIN = PLAYER_FLAG_BIND_FACEBOOK;
const TPlayerFlagBit TPlayerFlagBit_MAX = PLAYER_FLAG_INVALID;
const int TPlayerFlagBit_ARRAYSIZE = TPlayerFlagBit_MAX + 1;

const ::google::protobuf::EnumDescriptor* TPlayerFlagBit_descriptor();
inline const ::std::string& TPlayerFlagBit_Name(TPlayerFlagBit value) {
  return ::google::protobuf::internal::NameOfEnum(
    TPlayerFlagBit_descriptor(), value);
}
inline bool TPlayerFlagBit_Parse(
    const ::std::string& name, TPlayerFlagBit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPlayerFlagBit>(
    TPlayerFlagBit_descriptor(), name, value);
}
enum TKPIType {
  KPI_MAHJONG_MAX_FLOWER = 1
};
bool TKPIType_IsValid(int value);
const TKPIType TKPIType_MIN = KPI_MAHJONG_MAX_FLOWER;
const TKPIType TKPIType_MAX = KPI_MAHJONG_MAX_FLOWER;
const int TKPIType_ARRAYSIZE = TKPIType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TKPIType_descriptor();
inline const ::std::string& TKPIType_Name(TKPIType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TKPIType_descriptor(), value);
}
inline bool TKPIType_Parse(
    const ::std::string& name, TKPIType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TKPIType>(
    TKPIType_descriptor(), name, value);
}
enum TGameType {
  GAMETYPE_NULL = 0,
  GAMETYPE_GD = 100,
  GAMETYPE_PDK = 101
};
bool TGameType_IsValid(int value);
const TGameType TGameType_MIN = GAMETYPE_NULL;
const TGameType TGameType_MAX = GAMETYPE_PDK;
const int TGameType_ARRAYSIZE = TGameType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameType_descriptor();
inline const ::std::string& TGameType_Name(TGameType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameType_descriptor(), value);
}
inline bool TGameType_Parse(
    const ::std::string& name, TGameType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameType>(
    TGameType_descriptor(), name, value);
}
enum TChannel {
  CHANNEL_GUEST = 0,
  CHANNEL_MY = 1,
  CHANNEL_MOBILE = 2,
  CHANNEL_APUS = 3,
  CHANNEL_WX = 4,
  CHANNEL_FACEBOOK = 10
};
bool TChannel_IsValid(int value);
const TChannel TChannel_MIN = CHANNEL_GUEST;
const TChannel TChannel_MAX = CHANNEL_FACEBOOK;
const int TChannel_ARRAYSIZE = TChannel_MAX + 1;

const ::google::protobuf::EnumDescriptor* TChannel_descriptor();
inline const ::std::string& TChannel_Name(TChannel value) {
  return ::google::protobuf::internal::NameOfEnum(
    TChannel_descriptor(), value);
}
inline bool TChannel_Parse(
    const ::std::string& name, TChannel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TChannel>(
    TChannel_descriptor(), name, value);
}
enum TMailType {
  TYPE_INVALID = 0,
  TYPE_SYSTEM = 1,
  TYPE_COMMON = 2,
  TYPE_NOTICE = 3,
  TYPE_SYSTEM_AUTOPEN = 4
};
bool TMailType_IsValid(int value);
const TMailType TMailType_MIN = TYPE_INVALID;
const TMailType TMailType_MAX = TYPE_SYSTEM_AUTOPEN;
const int TMailType_ARRAYSIZE = TMailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TMailType_descriptor();
inline const ::std::string& TMailType_Name(TMailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TMailType_descriptor(), value);
}
inline bool TMailType_Parse(
    const ::std::string& name, TMailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TMailType>(
    TMailType_descriptor(), name, value);
}
enum TTissueState {
  TYPE_KOUFANGKA = 1,
  TYPE_JINFANGTIAOJIAN = 2
};
bool TTissueState_IsValid(int value);
const TTissueState TTissueState_MIN = TYPE_KOUFANGKA;
const TTissueState TTissueState_MAX = TYPE_JINFANGTIAOJIAN;
const int TTissueState_ARRAYSIZE = TTissueState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TTissueState_descriptor();
inline const ::std::string& TTissueState_Name(TTissueState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TTissueState_descriptor(), value);
}
inline bool TTissueState_Parse(
    const ::std::string& name, TTissueState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TTissueState>(
    TTissueState_descriptor(), name, value);
}
enum TViewState {
  VIEW_NONE = 1,
  VIEW_HAVE = 2
};
bool TViewState_IsValid(int value);
const TViewState TViewState_MIN = VIEW_NONE;
const TViewState TViewState_MAX = VIEW_HAVE;
const int TViewState_ARRAYSIZE = TViewState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TViewState_descriptor();
inline const ::std::string& TViewState_Name(TViewState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TViewState_descriptor(), value);
}
inline bool TViewState_Parse(
    const ::std::string& name, TViewState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TViewState>(
    TViewState_descriptor(), name, value);
}
enum TRobotLuaEvent {
  ROBOT_EVENT_INVALID = 0,
  ROBOT_EVENT_REGSTEREVENT = 1,
  ROBOT_EVENT_BLACKJACK = 2,
  ROBOT_EVENT_TEXASPOKER = 3,
  ROBOT_EVENT_SLOT = 4,
  ROBOT_EVENT_MAHJONG = 5,
  ROBOT_EVENT_NIUNIU = 6,
  ROBOT_EVENT_HORSERACE = 7,
  ROBOT_EVENT_FISH = 8
};
bool TRobotLuaEvent_IsValid(int value);
const TRobotLuaEvent TRobotLuaEvent_MIN = ROBOT_EVENT_INVALID;
const TRobotLuaEvent TRobotLuaEvent_MAX = ROBOT_EVENT_FISH;
const int TRobotLuaEvent_ARRAYSIZE = TRobotLuaEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* TRobotLuaEvent_descriptor();
inline const ::std::string& TRobotLuaEvent_Name(TRobotLuaEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    TRobotLuaEvent_descriptor(), value);
}
inline bool TRobotLuaEvent_Parse(
    const ::std::string& name, TRobotLuaEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TRobotLuaEvent>(
    TRobotLuaEvent_descriptor(), name, value);
}
enum TAchievementState {
  ACHIEVEMENT_STATE_INVALID = 0,
  ACHIEVEMENT_STATE_ACCEPT = 1,
  ACHIEVEMENT_STATE_DONE = 2,
  ACHIEVEMENT_STATE_REWARD = 3
};
bool TAchievementState_IsValid(int value);
const TAchievementState TAchievementState_MIN = ACHIEVEMENT_STATE_INVALID;
const TAchievementState TAchievementState_MAX = ACHIEVEMENT_STATE_REWARD;
const int TAchievementState_ARRAYSIZE = TAchievementState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TAchievementState_descriptor();
inline const ::std::string& TAchievementState_Name(TAchievementState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TAchievementState_descriptor(), value);
}
inline bool TAchievementState_Parse(
    const ::std::string& name, TAchievementState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TAchievementState>(
    TAchievementState_descriptor(), name, value);
}
enum TAchievementConditionType {
  ConditionDefaultType = -1,
  ConditionType0 = 0,
  ConditionType1 = 1,
  ConditionType2 = 2,
  ConditionType3 = 3,
  ConditionType4 = 4
};
bool TAchievementConditionType_IsValid(int value);
const TAchievementConditionType TAchievementConditionType_MIN = ConditionDefaultType;
const TAchievementConditionType TAchievementConditionType_MAX = ConditionType4;
const int TAchievementConditionType_ARRAYSIZE = TAchievementConditionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TAchievementConditionType_descriptor();
inline const ::std::string& TAchievementConditionType_Name(TAchievementConditionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TAchievementConditionType_descriptor(), value);
}
inline bool TAchievementConditionType_Parse(
    const ::std::string& name, TAchievementConditionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TAchievementConditionType>(
    TAchievementConditionType_descriptor(), name, value);
}
enum EnumBonusGameEndType {
  EnumCircleEnd = 0,
  EnumFailEnd = 1,
  EnumCircleOrFailEnd = 2
};
bool EnumBonusGameEndType_IsValid(int value);
const EnumBonusGameEndType EnumBonusGameEndType_MIN = EnumCircleEnd;
const EnumBonusGameEndType EnumBonusGameEndType_MAX = EnumCircleOrFailEnd;
const int EnumBonusGameEndType_ARRAYSIZE = EnumBonusGameEndType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumBonusGameEndType_descriptor();
inline const ::std::string& EnumBonusGameEndType_Name(EnumBonusGameEndType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumBonusGameEndType_descriptor(), value);
}
inline bool EnumBonusGameEndType_Parse(
    const ::std::string& name, EnumBonusGameEndType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumBonusGameEndType>(
    EnumBonusGameEndType_descriptor(), name, value);
}
enum EnumSlotsWinType {
  EnumNoneWin = 0,
  EnumNormalWin = 1,
  EnumBigWin = 2,
  EnumMegaWin = 3,
  EnumEpicWin = 4
};
bool EnumSlotsWinType_IsValid(int value);
const EnumSlotsWinType EnumSlotsWinType_MIN = EnumNoneWin;
const EnumSlotsWinType EnumSlotsWinType_MAX = EnumEpicWin;
const int EnumSlotsWinType_ARRAYSIZE = EnumSlotsWinType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumSlotsWinType_descriptor();
inline const ::std::string& EnumSlotsWinType_Name(EnumSlotsWinType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumSlotsWinType_descriptor(), value);
}
inline bool EnumSlotsWinType_Parse(
    const ::std::string& name, EnumSlotsWinType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumSlotsWinType>(
    EnumSlotsWinType_descriptor(), name, value);
}
enum EnumRoomState {
  EnumUnRegistered = 0,
  EnumRegistered = 1
};
bool EnumRoomState_IsValid(int value);
const EnumRoomState EnumRoomState_MIN = EnumUnRegistered;
const EnumRoomState EnumRoomState_MAX = EnumRegistered;
const int EnumRoomState_ARRAYSIZE = EnumRoomState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumRoomState_descriptor();
inline const ::std::string& EnumRoomState_Name(EnumRoomState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumRoomState_descriptor(), value);
}
inline bool EnumRoomState_Parse(
    const ::std::string& name, EnumRoomState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumRoomState>(
    EnumRoomState_descriptor(), name, value);
}
enum TMoneyFlow {
  MF_INVALID = -1,
  MF_ACH = 0,
  MF_BJ_WIN = 1,
  MF_BJ_RECV_TIP = 2,
  MF_SL_WIN = 3,
  MF_SL_BONUS_WIN = 4,
  MF_TP_WIN = 5,
  MF_TP_MTT_WIN = 6,
  MF_TP_SNG_WIN = 7,
  MF_BILL = 8,
  MF_PLY_INIT = 9,
  MF_BILL_ROULETTE = 10,
  MF_LVUP = 11,
  MF_PIG = 12,
  MF_BONUS = 13,
  MF_SMAIL = 14,
  MF_CMAIL = 15,
  MF_BIND_FB = 16,
  MF_ROULETTE = 17,
  MF_CDKEY = 18,
  MF_ROOM_TIP = 19,
  MF_SHOP = 20,
  MF_ADS = 21,
  MF_MSG_ADD_MONEY = 22,
  MF_MTT_CANCEL = 23,
  MF_SCORE_WALL = 24,
  MF_MISSION_REWARD = 25,
  MF_SELL_ITEM = 26,
  MF_USE_ITEM = 27,
  MF_SIGN_IN_REWARD = 28,
  MF_STORE_ADD_MONEY = 29,
  MF_SL_COLLECT = 30,
  MF_MJ_ADD_MING_GANG = 31,
  MF_MJ_ADD_AN_GANG = 32,
  MF_MJ_WIN = 33,
  MF_MJ_ADD_OUT_CARD = 34,
  MF_MJ_ADD_WITH_CARD = 35,
  MF_MJ_ADD_SERIES_CARD = 36,
  MF_MJ_ADD_FLOWER_GANG = 37,
  MF_HR_WIN = 38,
  MF_GD_ADD_SHILIAN = 39,
  MF_F_DROP = 40,
  MF_F_FISH_DROP = 41,
  MF_F_UNLOCK_BULLET = 42,
  MF_ENVELOPE_GET = 43,
  MF_SPLIT_GIFT_GET = 44,
  MF_VIP_DAILY_REWARD = 45,
  MF_BJ_SEND_TIP = 256,
  MF_BJ_LOST = 257,
  MF_BJ_JOIN_CHAL_COST = 258,
  MF_BJ_CHAL_BUY_BACK = 259,
  MF_SL_SPIN_COST = 260,
  MF_TP_LOST = 261,
  MF_TP_MTT_APPLY = 262,
  MF_TP_SNG_LOST = 263,
  MF_GIFT_TO_PLY = 264,
  MF_ROOM_SEND_TIP = 265,
  MF_MSG_SUB_MONEY = 266,
  MF_BJ_JOIN_SNG_COST = 267,
  MF_STORE_BUY_ITEM = 268,
  MF_MJ_SUB_MING_GANG = 269,
  MF_MJ_SUB_AN_GANG = 270,
  MF_MJ_LOST = 271,
  MF_MJ_PACK = 272,
  MF_MJ_SUB_OUT_CARD = 273,
  MF_MJ_SUB_WITH_CARD = 274,
  MF_MJ_SUB_SERIES_CARD = 275,
  MF_MJ_SUB_FLOWER_GANG = 276,
  MF_HR_BET_COST = 277,
  MF_F_FIRE = 278,
  MF_F_UP_GUN = 279,
  MF_SEND_ENVELOPE = 280,
  MF_MJ_SUB_ROOM = 281,
  MF_SPLIT_GIFT_COST = 282,
  MF_NN_WIN = 283,
  MF_NN_LOST = 284,
  MF_NN_BET_COST = 285,
  MF_F_BUY_SKILL = 286,
  MF_F_BUY_BULLET = 287,
  MF_F_SHOW_CHAT = 288,
  MF_RF_AC_QA = 289,
  MF_RF_JN_QA = 290,
  MF_RF_BCAC_QA = 291,
  MF_RF_BCJN_QA = 292
};
bool TMoneyFlow_IsValid(int value);
const TMoneyFlow TMoneyFlow_MIN = MF_INVALID;
const TMoneyFlow TMoneyFlow_MAX = MF_RF_BCJN_QA;
const int TMoneyFlow_ARRAYSIZE = TMoneyFlow_MAX + 1;

const ::google::protobuf::EnumDescriptor* TMoneyFlow_descriptor();
inline const ::std::string& TMoneyFlow_Name(TMoneyFlow value) {
  return ::google::protobuf::internal::NameOfEnum(
    TMoneyFlow_descriptor(), value);
}
inline bool TMoneyFlow_Parse(
    const ::std::string& name, TMoneyFlow* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TMoneyFlow>(
    TMoneyFlow_descriptor(), name, value);
}
enum TRMBFlow {
  RF_SHOP = 0,
  RF_MISSION_REWARD = 1,
  RF_SIGN_IN_REWARD = 2,
  RF_STORE_ADD_RMB = 3,
  RF_SMAIL = 4,
  RF_ACH = 5,
  RF_INIT = 6,
  RF_GD_SHILIAN = 7,
  RF_F_DROP = 8,
  RF_STORE_BUY_ITEM = 256,
  RF_UNCLOCK_ICON = 257,
  RF_F_UP_WEAPON = 258,
  RF_F_UNLOCK_BULLET = 259,
  RF_RF_AC_QA = 291,
  RF_RF_JN_QA = 292,
  RF_RF_BCAC_QA = 293,
  RF_RF_BCJN_QA = 294
};
bool TRMBFlow_IsValid(int value);
const TRMBFlow TRMBFlow_MIN = RF_SHOP;
const TRMBFlow TRMBFlow_MAX = RF_RF_BCJN_QA;
const int TRMBFlow_ARRAYSIZE = TRMBFlow_MAX + 1;

const ::google::protobuf::EnumDescriptor* TRMBFlow_descriptor();
inline const ::std::string& TRMBFlow_Name(TRMBFlow value) {
  return ::google::protobuf::internal::NameOfEnum(
    TRMBFlow_descriptor(), value);
}
inline bool TRMBFlow_Parse(
    const ::std::string& name, TRMBFlow* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TRMBFlow>(
    TRMBFlow_descriptor(), name, value);
}
enum TSex {
  MALE = 0,
  FEMALE = 1
};
bool TSex_IsValid(int value);
const TSex TSex_MIN = MALE;
const TSex TSex_MAX = FEMALE;
const int TSex_ARRAYSIZE = TSex_MAX + 1;

const ::google::protobuf::EnumDescriptor* TSex_descriptor();
inline const ::std::string& TSex_Name(TSex value) {
  return ::google::protobuf::internal::NameOfEnum(
    TSex_descriptor(), value);
}
inline bool TSex_Parse(
    const ::std::string& name, TSex* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TSex>(
    TSex_descriptor(), name, value);
}
enum TMissionState {
  MISSION_STATE_INVALID = 0,
  MISSION_STATE_ACCEPT = 1,
  MISSION_STATE_DONE = 2,
  MISSION_STATE_REWARD = 3,
  MISSION_STATE_CLOSE = 4
};
bool TMissionState_IsValid(int value);
const TMissionState TMissionState_MIN = MISSION_STATE_INVALID;
const TMissionState TMissionState_MAX = MISSION_STATE_CLOSE;
const int TMissionState_ARRAYSIZE = TMissionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TMissionState_descriptor();
inline const ::std::string& TMissionState_Name(TMissionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TMissionState_descriptor(), value);
}
inline bool TMissionState_Parse(
    const ::std::string& name, TMissionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TMissionState>(
    TMissionState_descriptor(), name, value);
}
enum TMahJongShowDownEvent {
  EVENT_XIAOHU = 1,
  EVENT_MEIHUI = 2,
  EVENT_HUIGUIWEI = 3,
  EVENT_GANGKAIHUA = 4,
  EVENT_TIANHU = 5,
  EVENT_DIHU = 6,
  EVENT_SIGEHUI = 7,
  EVENT_QIDUI = 8,
  EVENT_QINGQIDUI = 9,
  EVENT_HAOHUAQIDUI = 10,
  EVENT_CHAOHUAQIDUI = 11,
  EVENT_CHAOCHAOHAOHUAQIDUI = 12,
  EVENT_ZHUANGJIA = 13,
  EVENT_MINGGANG = 14,
  EVENT_ANGANG = 15,
  EVENT_SIXIFENG = 16,
  EVENT_SANZHIJIAN = 17,
  EVENT_HUIMINGGANG = 18,
  EVENT_HUIANGANG = 19,
  EVENT_MENG = 20,
  EVENT_GENZHUANG = 21,
  EVENT_SHISANYAO = 22,
  EVENT_LONG = 23,
  EVENT_QINGYISE = 24,
  EVENT_HUNYISE = 25,
  EVENT_PENGPENGHU = 26,
  EVENT_JIANGYISE = 27,
  EVENT_HAIDILAOYUE = 28,
  EVENT_HUGANGFANG = 29,
  EVENT_WUHUAGUO = 30,
  EVENT_TING = 31,
  EVENT_PFFLOWER = 32,
  EVENT_KOU_PAI = 33,
  EVENT_THREE_ZUAN = 34,
  EVENT_FOUR_ZUAN = 35,
  EVENT_DIAOWUWAN = 36,
  EVENT_ZHUOWUKUI = 37,
  EVENT_ZHI_GANG = 38,
  EVENT_DIANPAO = 39,
  EVENT_ZIMO = 40,
  EVENT_QIANGGANGHU = 41,
  EVENT_BASESCORE = 42,
  EVENT_JIAPINGHU = 43,
  EVENT_SHISANBUKAO = 44,
  EVENT_PAOPEIPINGHU = 45,
  EVENT_PAOPEIQIDUI = 46,
  EVENT_KANHUI = 47,
  EVENT_MINGLOU = 48,
  EVENT_XIAOGANGKAIHUA = 49,
  EVENT_HUANGZHUANG = 50,
  EVENT_HAOHUAQQIDUI = 51,
  EVENT_CHAOHUAQQIDUI = 52,
  EVENT_CHAOCHAOHAOHUAQQIDUI = 53,
  EVENT_PIAOCAI = 54,
  EVENT_BAOTOU = 55,
  EVENT_LAOZHUANG = 56,
  EVENT_DASANYUAN = 57,
  EVENT_DIAOYU = 58,
  EVENT_SUIJIYISE = 59,
  EVENT_LANPAI = 60,
  EVENT_QIXINGLANPAI = 61,
  EVENT_SANCAISHEN = 62,
  EVENT_QIFENGDAO = 63,
  EVENT_QIFENGBAIDA = 64,
  EVENT_SHISANBAIDA = 65,
  EVENT_QUANFENGZI = 66,
  EVENT_DANDIAO = 67,
  EVENT_WUCAI = 68,
  EVENT_QUANFENGZIPENGPENGHU = 69,
  EVENT_QUANFENGZIQIDUI = 70,
  EVENT_DIANPAOFEN = 71,
  EVENT_QIANGGANGHUFEN = 72,
  EVENT_ZIMOFEN = 73,
  EVENT_DUIDUIHU = 74,
  EVENT_MEIBAIDA = 75,
  EVENT_SANBAIDA = 76,
  EVENT_DADIAOCHE = 77,
  EVENT_SHUANGPIAO = 78,
  EVENT_SANPIAO = 79,
  EVENT_LANBAIDA = 80,
  EVENT_FENGZIBAIDA = 81,
  EVENT_SIHUA = 82,
  EVENT_CHUNHUA = 83,
  EVENT_PENGFENGHUA = 84,
  EVENT_GANGHUA = 85,
  EVENT_HUNPENG = 86,
  EVENT_QINGPENG = 87,
  EVENT_HUNQIDUI = 88,
  EVENT_HUAPAI = 89,
  EVENT_GUODAN = 90,
  EVENT_MENQING = 91,
  EVENT_SANJIABIMEN = 92,
  EVENT_SHOWBAYI = 93,
  EVENT_SIGUIYI = 94,
  EVENT_XUANFENGGANG = 95,
  EVENT_JIEGANG = 96,
  EVENT_ZIYISE = 97,
  EVENT_TESHUYISE = 98,
  EVENT_19LAOTOUBAIDA = 99,
  EVENT_QIANGANGXIAOHU = 100,
  EVENT_BUQIUREN = 101,
  EVENT_CONTRACT = 102,
  EVENT_ZHAMA = 103,
  EVENT_HUNBAZHANG = 104,
  EVENT_QUEYIMEN = 105,
  EVENT_HUIDIAO = 106,
  EVENT_QINGHU = 107,
  EVENT_HUIDIAOHUI = 108,
  EVENT_PIAOHU = 109,
  EVENT_THREEBIAN = 110,
  EVENT_FOURBIAN = 111,
  EVENT_SUHU = 112,
  EVENT_HUNDIAOHUN = 113,
  EVENT_DAIZHUANG = 114,
  EVENT_JIA1FEN = 115,
  EVENT_JIA2FEN = 116,
  EVENT_WUZI = 117,
  EVENT_KANZHANG = 118,
  EVENT_BIANZHANG = 119,
  EVENT_SBALUOHAN = 120,
  EVENT_HONGZGBAO = 121,
  EVENT_QUEYI = 122,
  EVENT_LUANYAO = 123,
  EVENT_BAO3QIANGGANGHU = 124,
  EVENT_ERWUBAJIANG = 125,
  EVENT_GUJIANG = 126,
  EVENT_DUANYAOJIU = 127,
  EVENT_YIBIANGAO = 128,
  EVENT_GULIANLIU = 129,
  EVENT_DAXIAOWU = 130,
  EVENT_GOUSHAN = 131,
  EVENT_ZHONGFABAI = 132,
  EVENT_THREEZA = 133,
  EVENT_FOURZA = 134,
  EVENT_KAWUKUI = 135,
  EVENT_ANXIAO = 136,
  EVENT_SANGEYI = 137,
  EVENT_SANGEJIU = 138,
  EVENT_SUQIDUI = 139,
  EVENT_HUIDIAOQIXIAODUI = 140,
  EVENT_MANGUAN = 141,
  EVENT_HUIBENLONG = 142,
  EVENT_DIAOWUKUI = 143,
  EVENT_LAZHUANG = 144,
  EVENT_LIUGANG = 145,
  EVENT_SULONG = 146,
  EVENT_HUNLONG = 147,
  EVENT_HEIFENG = 148,
  EVENT_HONGFENG = 149,
  EVENT_YIJIU = 150,
  EVENT_ZMH_PH = 151,
  EVENT_ZMH_MQ = 152,
  EVENT_QGH_PH = 153,
  EVENT_QGH_MQ = 154,
  EVENT_DPH_PH = 155,
  EVENT_DPH_MQ = 156,
  EVENT_QYS_LONG = 157,
  EVENT_LIANGXI = 158,
  EVENT_BUXI = 159,
  EVENT_PENG = 160,
  EVENT_DAJIANG = 161,
  EVENT_FENGYISE = 162,
  EVENT_QIDUIHUIDIAO = 163,
  EVENT_QIDUIHUIDIAOHUI = 164,
  EVENT_DASIXI = 165,
  EVENT_XIAOSIXI = 166,
  EVENT_XIAOSANYUAN = 167,
  EVENT_GANGGANGHU = 168,
  EVENT_BUHUAHU = 169,
  EVENT_LIANGTAIHUA = 170,
  EVENT_LIANGTAIHUAQUEYI = 171,
  EVENT_HUAGANG = 172,
  EVENT_HUISCORE = 173,
  EVENT_HUWEI = 174,
  EVENT_ANKAN = 175,
  EVENT_HUNERDIAO = 176,
  EVENT_PINGHU = 177,
  EVENT_HUNERYOU = 178,
  EVENT_YITIAOZHENLONG = 179,
  EVENT_YITIAOJIALONG = 180,
  EVENT_HUANGJINGANG = 181,
  EVENT_ZMH_PH_PINGHU = 182,
  EVENT_ZMH_MQ_PINGHU = 183,
  EVENT_QGH_PH_PINGHU = 184,
  EVENT_QGH_MQ_PINGHU = 185,
  EVENT_DPH_PH_PINGHU = 186,
  EVENT_DPH_MQ_PINGHU = 187,
  EVENT_PINGHU_MINGGANG = 188,
  EVENT_PINGHU_ANGANG = 189,
  EVENT_DIANPAO_QIDUI = 190,
  EVENT_ZIMO_QIDUI = 191,
  EVENT_PINGHU_GENZHUANG = 192,
  EVENT_FAGANG = 193,
  EVENT_ZIMOFENGKE = 194,
  EVENT_ZIMOFENGDIAO = 195,
  EVENT_ZIMOKE = 196,
  EVENT_ZIMOJIA = 197,
  EVENT_ZIMODIAO = 198,
  EVENT_DIANPAOKE = 199,
  EVENT_DIANPAODIAO = 200,
  EVENT_DIANPAOJIA = 201,
  EVENT_FENGKEZI = 202,
  EVENT_NORMALKEZI = 203,
  EVENT_ZIJIAHUA = 204,
  EVENT_SIGEHUA = 205,
  EVENT_BAGEHUA = 206,
  EVENT_BIANKADIAOSANQI = 207,
  EVENT_ZIJIAPENG = 208,
  EVENT_ZIJIAKEZI = 209,
  EVENT_HONGZHONGPENG = 210,
  EVENT_HONGZHONGKEZI = 211,
  EVENT_FACAIPENG = 212,
  EVENT_FACAIKEZI = 213,
  EVENT_HUJUEZHANG = 214,
  EVENT_YIBANGAO = 215,
  EVENT_LIANLIU = 216,
  EVENT_QUANLAOTOU = 217,
  EVENT_LUANLAOTOU = 218,
  EVENT_SANBAIDAZUOKE = 219,
  EVENT_CHUBAIDA = 220,
  EVENT_CHAOQIANGGANGHU = 221,
  EVENT_DUISHANGGANG = 222,
  EVENT_DUITIANTING = 223,
  EVENT_DUIDANDIAO = 224,
  EVENT_SHANGGANG = 225,
  EVENT_TIANTING = 226,
  EVENT_GANGSHANGDIANPAO = 227,
  EVENT_BAIDADUIZUOTOU = 228,
  EVENT_SHUANGGANKAN = 229,
  EVENT_GANGKAIHUIDIAOHUI = 230,
  EVENT_HUIDIAOLONG = 231,
  EVENT_HUIDIAOBENHUILONG = 232,
  EVENT_ZHANGMAO = 233,
  EVENT_ZIJIAGANG = 234,
  EVENT_HONGZHONGGANG = 235,
  EVENT_FACAIGANG = 236,
  EVENT_ZIJIADUI = 237,
  EVENT_FACAIDUI = 238,
  EVENT_HONGZHONGDUI = 239,
  EVENT_YIJIUCARD = 240,
  EVENT_HUADUIZIJIA = 241,
  EVENT_HUADUIZIJIAN = 242,
  EVENT_QYS_QIDUI = 243,
  EVENT_ZHONGMA = 244,
  EVENT_PENGHOUGANG = 245,
  EVENT_QYS_HUIDIAO = 246,
  EVENT_ZIMOWUHUN = 247,
  EVENT_HENGYIHENGJIU = 248,
  ENENT_CAIFENG = 249,
  EVENT_DDZDIFEN = 250,
  EVENT_ZHADAN = 251,
  EVENT_CHUNTIAN = 252,
  EVENT_MINGPAI = 253,
  EVENT_DIPAI = 254,
  EVENT_QIANGDIZHU = 255,
  EVENT_JIABEI = 256,
  EVENT_JIAOFEN = 257,
  EVENT_XIAOWANG = 258,
  EVENT_DAWANG = 259,
  EVENT_DUIZI = 260,
  EVENT_TONGHUA = 261,
  EVENT_SHUNZI = 262,
  EVENT_SANZHANG = 263,
  EVENT_TONGHUASHUN = 264,
  EVENT_DAIYIJIU = 265,
  EVENT_LONGQIDUI = 266,
  EVENT_GEN = 267,
  EVENT_JINGOUHU = 268,
  EVENT_ZHONGZHANG = 269,
  EVENT_GANGSHANGPAO = 270,
  EVENT_DIANPAOHU = 271,
  EVENT_BEIZIMO = 272,
  EVENT_ZIMOHU = 273,
  EVENT_GUAFENG = 274,
  EVENT_BEIGUAFENG = 275,
  EVENT_XIAYU = 276,
  EVENT_BEIXIAYU = 277,
  EVENT_MIANXIAGANG = 278,
  EVENT_BEIMIANXIAGANG = 279,
  EVENT_HUJIAOZHUANYI = 280,
  EVENT_BEIHUJIAOZHUANYI = 281,
  EVENT_CHAHUAZHU = 282,
  EVENT_CHAJIAO = 283,
  EVENT_BEICHAHUAZHU = 284,
  EVENT_BEICHAJIAO = 285
};
bool TMahJongShowDownEvent_IsValid(int value);
const TMahJongShowDownEvent TMahJongShowDownEvent_MIN = EVENT_XIAOHU;
const TMahJongShowDownEvent TMahJongShowDownEvent_MAX = EVENT_BEICHAJIAO;
const int TMahJongShowDownEvent_ARRAYSIZE = TMahJongShowDownEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* TMahJongShowDownEvent_descriptor();
inline const ::std::string& TMahJongShowDownEvent_Name(TMahJongShowDownEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    TMahJongShowDownEvent_descriptor(), value);
}
inline bool TMahJongShowDownEvent_Parse(
    const ::std::string& name, TMahJongShowDownEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TMahJongShowDownEvent>(
    TMahJongShowDownEvent_descriptor(), name, value);
}
enum EnumItemUseType {
  EnumCommon = 0,
  EnumMoney = 1,
  EnumItemBox = 2
};
bool EnumItemUseType_IsValid(int value);
const EnumItemUseType EnumItemUseType_MIN = EnumCommon;
const EnumItemUseType EnumItemUseType_MAX = EnumItemBox;
const int EnumItemUseType_ARRAYSIZE = EnumItemUseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumItemUseType_descriptor();
inline const ::std::string& EnumItemUseType_Name(EnumItemUseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumItemUseType_descriptor(), value);
}
inline bool EnumItemUseType_Parse(
    const ::std::string& name, EnumItemUseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumItemUseType>(
    EnumItemUseType_descriptor(), name, value);
}
enum TCostType {
  COSTTYPE_INVALID = 0,
  COSTTYPE_MONEY = 1,
  COSTTYPE_RMB = 2,
  COSTTYPE_JIFEN = 3
};
bool TCostType_IsValid(int value);
const TCostType TCostType_MIN = COSTTYPE_INVALID;
const TCostType TCostType_MAX = COSTTYPE_JIFEN;
const int TCostType_ARRAYSIZE = TCostType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TCostType_descriptor();
inline const ::std::string& TCostType_Name(TCostType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TCostType_descriptor(), value);
}
inline bool TCostType_Parse(
    const ::std::string& name, TCostType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TCostType>(
    TCostType_descriptor(), name, value);
}
enum TShopLabelType {
  SHOP_LABEL_NULL = 0,
  SHOP_LABEL_Promotion = 1,
  SHOP_LABEL_Hot = 2
};
bool TShopLabelType_IsValid(int value);
const TShopLabelType TShopLabelType_MIN = SHOP_LABEL_NULL;
const TShopLabelType TShopLabelType_MAX = SHOP_LABEL_Hot;
const int TShopLabelType_ARRAYSIZE = TShopLabelType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TShopLabelType_descriptor();
inline const ::std::string& TShopLabelType_Name(TShopLabelType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TShopLabelType_descriptor(), value);
}
inline bool TShopLabelType_Parse(
    const ::std::string& name, TShopLabelType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TShopLabelType>(
    TShopLabelType_descriptor(), name, value);
}
enum TSystemType {
  SYSTEM_ANDROID = 0,
  SYSTEM_IOS = 1,
  SYSTEM_TV = 2,
  SYSTEM_XBOX = 3,
  SYSTEM_PC = 4
};
bool TSystemType_IsValid(int value);
const TSystemType TSystemType_MIN = SYSTEM_ANDROID;
const TSystemType TSystemType_MAX = SYSTEM_PC;
const int TSystemType_ARRAYSIZE = TSystemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TSystemType_descriptor();
inline const ::std::string& TSystemType_Name(TSystemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TSystemType_descriptor(), value);
}
inline bool TSystemType_Parse(
    const ::std::string& name, TSystemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TSystemType>(
    TSystemType_descriptor(), name, value);
}
enum TDotType {
  DOT_INVALID = 0,
  DOT_LEAVE_ROOM_TIME = 1,
  DOT_CHAL_RANKING_REWARD = 2,
  DOT_GAME_CONSUME_ITEM = 50,
  DOT_COUPON_SPLIT_GIFT_REWARD = 100,
  DOT_COUPON_SPLIT_GIFT_SNATCH = 101,
  DOT_COUPON_FISH_DROP = 102,
  DOT_COUPON_MISSION = 103,
  DOT_COUPON_BUY_VIP = 104,
  DOT_COUPON_CHALLENGE = 105,
  DOT_COUPON_ONE_BET_GROUP = 106,
  DOT_ADD_SHIRENFANG_JIFEN = 107,
  DOT_SUB_ITEM_JIFEN = 108,
  DOT_ADD_MAHJONG_JIFEN = 109,
  DOT_ADD_RUNFAST_JIFEN = 110,
  DOT_ADD_MAIL_JIFEN = 111,
  DOT_SHOP_CONSUME_COUPON = 200,
  DOT_COUPON_UNLOCK_BULLET = 201,
  DOT_COUPON_ROULETTE = 202,
  DOT_QUALIFYING_AC = 203,
  DOT_QUALIFYING_JN = 204,
  DOT_QUALIFYING_BCAC = 205,
  DOT_QUALIFYING_BCJN = 206,
  DOT_CREATE_TISSUE = 300,
  DOT_JOIN_TISSUE = 301,
  DOT_CHANGE_TISSUE_NAME = 302,
  DOT_QUIT_TISSUE = 303,
  DOT_DISMISS_TISSUE = 304,
  DOT_RESET_TISSUE_LIMIT = 305,
  DOT_RECHARGE_TISSUE_MONEY = 306,
  DOT_TISSUE_CREATE_ROOM = 307,
  DOT_TISSUE_FORCE_QUIT_ROOM = 308,
  DOT_TISSUE_ROOM_START_GAME = 309,
  DOT_QUALIFYING_DATA = 400,
  DOT_QUALIFYING_DATA_JOIN = 401,
  DOT_QUALIFYING_DATA_PLAYER = 402,
  DOT_LOGIN = 410,
  DOT_FIGHT_RECORD = 600
};
bool TDotType_IsValid(int value);
const TDotType TDotType_MIN = DOT_INVALID;
const TDotType TDotType_MAX = DOT_FIGHT_RECORD;
const int TDotType_ARRAYSIZE = TDotType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TDotType_descriptor();
inline const ::std::string& TDotType_Name(TDotType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TDotType_descriptor(), value);
}
inline bool TDotType_Parse(
    const ::std::string& name, TDotType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TDotType>(
    TDotType_descriptor(), name, value);
}
enum TGameConsumePay {
  TGC_GOLD = 0,
  TGC_SILVER = 1
};
bool TGameConsumePay_IsValid(int value);
const TGameConsumePay TGameConsumePay_MIN = TGC_GOLD;
const TGameConsumePay TGameConsumePay_MAX = TGC_SILVER;
const int TGameConsumePay_ARRAYSIZE = TGameConsumePay_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameConsumePay_descriptor();
inline const ::std::string& TGameConsumePay_Name(TGameConsumePay value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameConsumePay_descriptor(), value);
}
inline bool TGameConsumePay_Parse(
    const ::std::string& name, TGameConsumePay* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameConsumePay>(
    TGameConsumePay_descriptor(), name, value);
}
enum TGameRoomKind {
  TGD_NORMAL = 0,
  TGD_JINYUANZI = 1,
  TGD_CHANGKAITOU = 2,
  TGD_CANGZHOU = 3,
  TGD_BAODING = 4,
  TGD_SHANDONG = 5,
  TGD_SUZHOU = 6,
  TGD_GUAN = 7,
  TGD_HEJIAN = 8,
  TGD_RENQIU = 9,
  TGD_GUANDAN_PRIVATE = 10,
  TGD_HANGZHOU = 11,
  TGD_NANFENG = 12,
  TGD_YANTAI = 13,
  TGD_JINAN = 14
};
bool TGameRoomKind_IsValid(int value);
const TGameRoomKind TGameRoomKind_MIN = TGD_NORMAL;
const TGameRoomKind TGameRoomKind_MAX = TGD_JINAN;
const int TGameRoomKind_ARRAYSIZE = TGameRoomKind_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameRoomKind_descriptor();
inline const ::std::string& TGameRoomKind_Name(TGameRoomKind value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameRoomKind_descriptor(), value);
}
inline bool TGameRoomKind_Parse(
    const ::std::string& name, TGameRoomKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameRoomKind>(
    TGameRoomKind_descriptor(), name, value);
}
enum TGameSpecialKind {
  TSK_NULL = 0,
  TSK_ZAER = 1,
  TSK_BIXIAHU = 2,
  TSK_MENG2 = 4,
  TSK_MENG4 = 8,
  TSK_HUI = 16,
  TSK_JIANG258 = 32,
  TSK_GUANDAN_GIFT = 2048,
  TSK_DIANPAO = 4096,
  TSK_FLOWERCARD = 8192,
  TSK_TUIDAOHU = 16384,
  TSK_FOLLOWBANKER = 32768,
  TSK_SANLAOZHUANG = 65536,
  TSK_KOUPAI = 131072,
  TSK_XIAOBAO = 262144,
  TSK_DABAO = 524288,
  TSK_SANJIACHU = 1048576,
  TSK_QINGYISE = 2097152,
  TSK_VIRTUALCARD = 4194304,
  TSK_Cathen = 8388608,
  TSK_LAOTOUBAIDA = 16777216,
  TSK_DAJIANG = 33554432,
  TSK_ZIMO = 67108864,
  TSK_CONTRACT = 134217728
};
bool TGameSpecialKind_IsValid(int value);
const TGameSpecialKind TGameSpecialKind_MIN = TSK_NULL;
const TGameSpecialKind TGameSpecialKind_MAX = TSK_CONTRACT;
const int TGameSpecialKind_ARRAYSIZE = TGameSpecialKind_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKind_descriptor();
inline const ::std::string& TGameSpecialKind_Name(TGameSpecialKind value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKind_descriptor(), value);
}
inline bool TGameSpecialKind_Parse(
    const ::std::string& name, TGameSpecialKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKind>(
    TGameSpecialKind_descriptor(), name, value);
}
enum TGameRunFastSpecialKind {
  TSK_RF_NULL = 0,
  TSK_RF_ZHADANFENG = 1,
  TSK_RF_BUFENGDING = 2,
  TSK_RF_SHIFENGDING = 3,
  TSK_RF_ERSHIFENGDING = 4,
  TSK_CARD15 = 5,
  TSK_MUSTOUTHS = 6,
  TSK_LAIZI = 7,
  TSK_JIEGUAN = 8,
  TSK_DISPLAYCARD = 9
};
bool TGameRunFastSpecialKind_IsValid(int value);
const TGameRunFastSpecialKind TGameRunFastSpecialKind_MIN = TSK_RF_NULL;
const TGameRunFastSpecialKind TGameRunFastSpecialKind_MAX = TSK_DISPLAYCARD;
const int TGameRunFastSpecialKind_ARRAYSIZE = TGameRunFastSpecialKind_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameRunFastSpecialKind_descriptor();
inline const ::std::string& TGameRunFastSpecialKind_Name(TGameRunFastSpecialKind value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameRunFastSpecialKind_descriptor(), value);
}
inline bool TGameRunFastSpecialKind_Parse(
    const ::std::string& name, TGameRunFastSpecialKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameRunFastSpecialKind>(
    TGameRunFastSpecialKind_descriptor(), name, value);
}
enum TPaymentMechanism {
  ROOM_OWNER_OPTION = 0,
  AA_SYSTEM_OPTION = 1,
  BIG_OWNER_OPTION = 2,
  VIP_TISSUE_OPTION = 3
};
bool TPaymentMechanism_IsValid(int value);
const TPaymentMechanism TPaymentMechanism_MIN = ROOM_OWNER_OPTION;
const TPaymentMechanism TPaymentMechanism_MAX = VIP_TISSUE_OPTION;
const int TPaymentMechanism_ARRAYSIZE = TPaymentMechanism_MAX + 1;

const ::google::protobuf::EnumDescriptor* TPaymentMechanism_descriptor();
inline const ::std::string& TPaymentMechanism_Name(TPaymentMechanism value) {
  return ::google::protobuf::internal::NameOfEnum(
    TPaymentMechanism_descriptor(), value);
}
inline bool TPaymentMechanism_Parse(
    const ::std::string& name, TPaymentMechanism* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPaymentMechanism>(
    TPaymentMechanism_descriptor(), name, value);
}
enum TGameSpecialKindShenYang {
  TSK_SY_NULL = 0,
  TSK_SY_KAIMENCHI = 1,
  TSK_SY_FIRSTWAVEXFG = 2,
  TSK_SY_CANNOTXFG = 3,
  TSK_SY_ZIMOZFB = 4,
  TSK_SY_GUODAN = 5,
  TSK_SY_HUDANZHANG = 6,
  TSK_SY_DAGUO = 7,
  TSK_SY_FENGDING6 = 8,
  TSK_SY_FENGDING7 = 9,
  TSK_SY_BUFENGDING = 10
};
bool TGameSpecialKindShenYang_IsValid(int value);
const TGameSpecialKindShenYang TGameSpecialKindShenYang_MIN = TSK_SY_NULL;
const TGameSpecialKindShenYang TGameSpecialKindShenYang_MAX = TSK_SY_BUFENGDING;
const int TGameSpecialKindShenYang_ARRAYSIZE = TGameSpecialKindShenYang_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindShenYang_descriptor();
inline const ::std::string& TGameSpecialKindShenYang_Name(TGameSpecialKindShenYang value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindShenYang_descriptor(), value);
}
inline bool TGameSpecialKindShenYang_Parse(
    const ::std::string& name, TGameSpecialKindShenYang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindShenYang>(
    TGameSpecialKindShenYang_descriptor(), name, value);
}
enum TGameSpecialKindPingHu {
  TSK_PINGHU_NULL = 0,
  TSK_PINGHU_QINGYISE = 1,
  TSK_PINGHU_LAOTOUBAIDA = 2,
  TSK_PINGHU_DIANPAO = 3,
  TSK_PINGHU_CONTRACT = 4,
  TSK_PINGHU_CAP = 5
};
bool TGameSpecialKindPingHu_IsValid(int value);
const TGameSpecialKindPingHu TGameSpecialKindPingHu_MIN = TSK_PINGHU_NULL;
const TGameSpecialKindPingHu TGameSpecialKindPingHu_MAX = TSK_PINGHU_CAP;
const int TGameSpecialKindPingHu_ARRAYSIZE = TGameSpecialKindPingHu_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindPingHu_descriptor();
inline const ::std::string& TGameSpecialKindPingHu_Name(TGameSpecialKindPingHu value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindPingHu_descriptor(), value);
}
inline bool TGameSpecialKindPingHu_Parse(
    const ::std::string& name, TGameSpecialKindPingHu* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindPingHu>(
    TGameSpecialKindPingHu_descriptor(), name, value);
}
enum TGameSpecialKindJiaXing {
  TSK_JX_NULL = 0,
  TSK_JX_FZBD = 1,
  TSK_JX_LTBD = 2
};
bool TGameSpecialKindJiaXing_IsValid(int value);
const TGameSpecialKindJiaXing TGameSpecialKindJiaXing_MIN = TSK_JX_NULL;
const TGameSpecialKindJiaXing TGameSpecialKindJiaXing_MAX = TSK_JX_LTBD;
const int TGameSpecialKindJiaXing_ARRAYSIZE = TGameSpecialKindJiaXing_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindJiaXing_descriptor();
inline const ::std::string& TGameSpecialKindJiaXing_Name(TGameSpecialKindJiaXing value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindJiaXing_descriptor(), value);
}
inline bool TGameSpecialKindJiaXing_Parse(
    const ::std::string& name, TGameSpecialKindJiaXing* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindJiaXing>(
    TGameSpecialKindJiaXing_descriptor(), name, value);
}
enum TGameSpecialKindJiaShan {
  TSK_JS_NULL = 0,
  TSK_JS_FZBD = 1,
  TSK_JS_LTBD = 2,
  TSK_JS_WXZQH = 3,
  TSK_JS_1FANQH = 4,
  TSK_JS_2FANQH = 5
};
bool TGameSpecialKindJiaShan_IsValid(int value);
const TGameSpecialKindJiaShan TGameSpecialKindJiaShan_MIN = TSK_JS_NULL;
const TGameSpecialKindJiaShan TGameSpecialKindJiaShan_MAX = TSK_JS_2FANQH;
const int TGameSpecialKindJiaShan_ARRAYSIZE = TGameSpecialKindJiaShan_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindJiaShan_descriptor();
inline const ::std::string& TGameSpecialKindJiaShan_Name(TGameSpecialKindJiaShan value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindJiaShan_descriptor(), value);
}
inline bool TGameSpecialKindJiaShan_Parse(
    const ::std::string& name, TGameSpecialKindJiaShan* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindJiaShan>(
    TGameSpecialKindJiaShan_descriptor(), name, value);
}
enum TGameSpecialKindBaZhou {
  TSK_BZ_NULL = 0,
  TSK_BZ_LAZHUANG = 1,
  TSK_BZ_ZUOZHUANG = 2,
  TSK_BZ_BUDAIZUI = 3
};
bool TGameSpecialKindBaZhou_IsValid(int value);
const TGameSpecialKindBaZhou TGameSpecialKindBaZhou_MIN = TSK_BZ_NULL;
const TGameSpecialKindBaZhou TGameSpecialKindBaZhou_MAX = TSK_BZ_BUDAIZUI;
const int TGameSpecialKindBaZhou_ARRAYSIZE = TGameSpecialKindBaZhou_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindBaZhou_descriptor();
inline const ::std::string& TGameSpecialKindBaZhou_Name(TGameSpecialKindBaZhou value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindBaZhou_descriptor(), value);
}
inline bool TGameSpecialKindBaZhou_Parse(
    const ::std::string& name, TGameSpecialKindBaZhou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindBaZhou>(
    TGameSpecialKindBaZhou_descriptor(), name, value);
}
enum TGameSpecialKindWenAn {
  TSK_WA_NULL = 0,
  TSK_WA_DAIZHUANG = 1,
  TSK_WA_LAZHUANG = 2
};
bool TGameSpecialKindWenAn_IsValid(int value);
const TGameSpecialKindWenAn TGameSpecialKindWenAn_MIN = TSK_WA_NULL;
const TGameSpecialKindWenAn TGameSpecialKindWenAn_MAX = TSK_WA_LAZHUANG;
const int TGameSpecialKindWenAn_ARRAYSIZE = TGameSpecialKindWenAn_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindWenAn_descriptor();
inline const ::std::string& TGameSpecialKindWenAn_Name(TGameSpecialKindWenAn value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindWenAn_descriptor(), value);
}
inline bool TGameSpecialKindWenAn_Parse(
    const ::std::string& name, TGameSpecialKindWenAn* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindWenAn>(
    TGameSpecialKindWenAn_descriptor(), name, value);
}
enum TGameSpecialKindLangFangTwo {
  TSK_LFT_NULL = 0,
  TSK_LFT_DAIZHUANG = 1,
  TSK_LFT_LAZHUANG = 2,
  TSK_LFT_BUDAIZUI = 3
};
bool TGameSpecialKindLangFangTwo_IsValid(int value);
const TGameSpecialKindLangFangTwo TGameSpecialKindLangFangTwo_MIN = TSK_LFT_NULL;
const TGameSpecialKindLangFangTwo TGameSpecialKindLangFangTwo_MAX = TSK_LFT_BUDAIZUI;
const int TGameSpecialKindLangFangTwo_ARRAYSIZE = TGameSpecialKindLangFangTwo_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindLangFangTwo_descriptor();
inline const ::std::string& TGameSpecialKindLangFangTwo_Name(TGameSpecialKindLangFangTwo value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindLangFangTwo_descriptor(), value);
}
inline bool TGameSpecialKindLangFangTwo_Parse(
    const ::std::string& name, TGameSpecialKindLangFangTwo* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindLangFangTwo>(
    TGameSpecialKindLangFangTwo_descriptor(), name, value);
}
enum TGameSpecialKindShengFang {
  TSK_SF_NULL = 0,
  TSK_SF_LAZHUANG = 1,
  TSK_SF_DAIZHUANG = 2,
  TSK_SF_SiHui = 3,
  TSK_SF_QiHUI = 4
};
bool TGameSpecialKindShengFang_IsValid(int value);
const TGameSpecialKindShengFang TGameSpecialKindShengFang_MIN = TSK_SF_NULL;
const TGameSpecialKindShengFang TGameSpecialKindShengFang_MAX = TSK_SF_QiHUI;
const int TGameSpecialKindShengFang_ARRAYSIZE = TGameSpecialKindShengFang_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindShengFang_descriptor();
inline const ::std::string& TGameSpecialKindShengFang_Name(TGameSpecialKindShengFang value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindShengFang_descriptor(), value);
}
inline bool TGameSpecialKindShengFang_Parse(
    const ::std::string& name, TGameSpecialKindShengFang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindShengFang>(
    TGameSpecialKindShengFang_descriptor(), name, value);
}
enum TGameSpecialKindHanDan {
  TSK_HD_NULL = 0,
  TSK_HD_BAOTING = 1,
  TSK_HD_BUDAIFENG = 2,
  TSK_HD_DAHU = 3
};
bool TGameSpecialKindHanDan_IsValid(int value);
const TGameSpecialKindHanDan TGameSpecialKindHanDan_MIN = TSK_HD_NULL;
const TGameSpecialKindHanDan TGameSpecialKindHanDan_MAX = TSK_HD_DAHU;
const int TGameSpecialKindHanDan_ARRAYSIZE = TGameSpecialKindHanDan_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindHanDan_descriptor();
inline const ::std::string& TGameSpecialKindHanDan_Name(TGameSpecialKindHanDan value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindHanDan_descriptor(), value);
}
inline bool TGameSpecialKindHanDan_Parse(
    const ::std::string& name, TGameSpecialKindHanDan* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindHanDan>(
    TGameSpecialKindHanDan_descriptor(), name, value);
}
enum TGameSpecialKindRuShan {
  TSK_RS_NULL = 0,
  TSK_RS_GENZHUANG = 1,
  TSK_RS_ZIMO = 2,
  TSK_RS_CHIPAI = 3
};
bool TGameSpecialKindRuShan_IsValid(int value);
const TGameSpecialKindRuShan TGameSpecialKindRuShan_MIN = TSK_RS_NULL;
const TGameSpecialKindRuShan TGameSpecialKindRuShan_MAX = TSK_RS_CHIPAI;
const int TGameSpecialKindRuShan_ARRAYSIZE = TGameSpecialKindRuShan_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindRuShan_descriptor();
inline const ::std::string& TGameSpecialKindRuShan_Name(TGameSpecialKindRuShan value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindRuShan_descriptor(), value);
}
inline bool TGameSpecialKindRuShan_Parse(
    const ::std::string& name, TGameSpecialKindRuShan* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindRuShan>(
    TGameSpecialKindRuShan_descriptor(), name, value);
}
enum TGameSpecialKindRongCheng {
  TSK_RC_NULL = 0,
  TSK_RC_GENZHUANG = 1,
  TSK_RC_ZIMO = 2,
  TSK_RC_CHIPAI = 3
};
bool TGameSpecialKindRongCheng_IsValid(int value);
const TGameSpecialKindRongCheng TGameSpecialKindRongCheng_MIN = TSK_RC_NULL;
const TGameSpecialKindRongCheng TGameSpecialKindRongCheng_MAX = TSK_RC_CHIPAI;
const int TGameSpecialKindRongCheng_ARRAYSIZE = TGameSpecialKindRongCheng_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindRongCheng_descriptor();
inline const ::std::string& TGameSpecialKindRongCheng_Name(TGameSpecialKindRongCheng value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindRongCheng_descriptor(), value);
}
inline bool TGameSpecialKindRongCheng_Parse(
    const ::std::string& name, TGameSpecialKindRongCheng* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindRongCheng>(
    TGameSpecialKindRongCheng_descriptor(), name, value);
}
enum TGameSpecialKindTaiAn {
  TSK_TA_NULL = 0,
  TSK_TA_GENZHUANG = 1,
  TSK_TA_ERWUBA = 2,
  TSK_TA_CHIPAI = 3,
  TSK_TA_DIANPAO = 4
};
bool TGameSpecialKindTaiAn_IsValid(int value);
const TGameSpecialKindTaiAn TGameSpecialKindTaiAn_MIN = TSK_TA_NULL;
const TGameSpecialKindTaiAn TGameSpecialKindTaiAn_MAX = TSK_TA_DIANPAO;
const int TGameSpecialKindTaiAn_ARRAYSIZE = TGameSpecialKindTaiAn_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindTaiAn_descriptor();
inline const ::std::string& TGameSpecialKindTaiAn_Name(TGameSpecialKindTaiAn value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindTaiAn_descriptor(), value);
}
inline bool TGameSpecialKindTaiAn_Parse(
    const ::std::string& name, TGameSpecialKindTaiAn* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindTaiAn>(
    TGameSpecialKindTaiAn_descriptor(), name, value);
}
enum TGameSpecialKindNanFeng {
  TSK_NF_NULL = 0,
  TSK_NF_DIANPAO = 1
};
bool TGameSpecialKindNanFeng_IsValid(int value);
const TGameSpecialKindNanFeng TGameSpecialKindNanFeng_MIN = TSK_NF_NULL;
const TGameSpecialKindNanFeng TGameSpecialKindNanFeng_MAX = TSK_NF_DIANPAO;
const int TGameSpecialKindNanFeng_ARRAYSIZE = TGameSpecialKindNanFeng_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindNanFeng_descriptor();
inline const ::std::string& TGameSpecialKindNanFeng_Name(TGameSpecialKindNanFeng value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindNanFeng_descriptor(), value);
}
inline bool TGameSpecialKindNanFeng_Parse(
    const ::std::string& name, TGameSpecialKindNanFeng* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindNanFeng>(
    TGameSpecialKindNanFeng_descriptor(), name, value);
}
enum TGameSpecialKindHangZhou {
  TSK_HZ_NULL = 0,
  TSK_HZ_DIANPAO = 1,
  TSK_HZ_ONEZHUANG = 2,
  TSK_HZ_THREEZHUANG = 3,
  TSK_HZ_FENGDING32 = 4,
  TSK_HZ_FENGDING64 = 5,
  TSK_HZ_BUFENGDING = 6
};
bool TGameSpecialKindHangZhou_IsValid(int value);
const TGameSpecialKindHangZhou TGameSpecialKindHangZhou_MIN = TSK_HZ_NULL;
const TGameSpecialKindHangZhou TGameSpecialKindHangZhou_MAX = TSK_HZ_BUFENGDING;
const int TGameSpecialKindHangZhou_ARRAYSIZE = TGameSpecialKindHangZhou_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindHangZhou_descriptor();
inline const ::std::string& TGameSpecialKindHangZhou_Name(TGameSpecialKindHangZhou value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindHangZhou_descriptor(), value);
}
inline bool TGameSpecialKindHangZhou_Parse(
    const ::std::string& name, TGameSpecialKindHangZhou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindHangZhou>(
    TGameSpecialKindHangZhou_descriptor(), name, value);
}
enum TCardsType {
  CardsNone = 0,
  CardsSpade = 1,
  CardsHearts = 2,
  CardsPlumBlossom = 3,
  CardsDiamond = 4
};
bool TCardsType_IsValid(int value);
const TCardsType TCardsType_MIN = CardsNone;
const TCardsType TCardsType_MAX = CardsDiamond;
const int TCardsType_ARRAYSIZE = TCardsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TCardsType_descriptor();
inline const ::std::string& TCardsType_Name(TCardsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TCardsType_descriptor(), value);
}
inline bool TCardsType_Parse(
    const ::std::string& name, TCardsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TCardsType>(
    TCardsType_descriptor(), name, value);
}
enum TGameSpecialKindQuZhou {
  TSK_QZ_NULL = 0,
  TSK_QZ_JUMA = 1
};
bool TGameSpecialKindQuZhou_IsValid(int value);
const TGameSpecialKindQuZhou TGameSpecialKindQuZhou_MIN = TSK_QZ_NULL;
const TGameSpecialKindQuZhou TGameSpecialKindQuZhou_MAX = TSK_QZ_JUMA;
const int TGameSpecialKindQuZhou_ARRAYSIZE = TGameSpecialKindQuZhou_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindQuZhou_descriptor();
inline const ::std::string& TGameSpecialKindQuZhou_Name(TGameSpecialKindQuZhou value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindQuZhou_descriptor(), value);
}
inline bool TGameSpecialKindQuZhou_Parse(
    const ::std::string& name, TGameSpecialKindQuZhou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindQuZhou>(
    TGameSpecialKindQuZhou_descriptor(), name, value);
}
enum TGameSpecialKindYunCheng {
  TSK_YC_NULL = 0,
  TSK_YC_QINGLONG = 1
};
bool TGameSpecialKindYunCheng_IsValid(int value);
const TGameSpecialKindYunCheng TGameSpecialKindYunCheng_MIN = TSK_YC_NULL;
const TGameSpecialKindYunCheng TGameSpecialKindYunCheng_MAX = TSK_YC_QINGLONG;
const int TGameSpecialKindYunCheng_ARRAYSIZE = TGameSpecialKindYunCheng_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindYunCheng_descriptor();
inline const ::std::string& TGameSpecialKindYunCheng_Name(TGameSpecialKindYunCheng value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindYunCheng_descriptor(), value);
}
inline bool TGameSpecialKindYunCheng_Parse(
    const ::std::string& name, TGameSpecialKindYunCheng* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindYunCheng>(
    TGameSpecialKindYunCheng_descriptor(), name, value);
}
enum TGameSpecialKindShanDong {
  TSK_SD_NULL = 0,
  TSK_SD_JIANG258 = 1,
  TSK_SD_DIANPAO = 2,
  TSK_SD_FLOWERCARD = 3,
  TSK_SD_EATCARD = 4
};
bool TGameSpecialKindShanDong_IsValid(int value);
const TGameSpecialKindShanDong TGameSpecialKindShanDong_MIN = TSK_SD_NULL;
const TGameSpecialKindShanDong TGameSpecialKindShanDong_MAX = TSK_SD_EATCARD;
const int TGameSpecialKindShanDong_ARRAYSIZE = TGameSpecialKindShanDong_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindShanDong_descriptor();
inline const ::std::string& TGameSpecialKindShanDong_Name(TGameSpecialKindShanDong value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindShanDong_descriptor(), value);
}
inline bool TGameSpecialKindShanDong_Parse(
    const ::std::string& name, TGameSpecialKindShanDong* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindShanDong>(
    TGameSpecialKindShanDong_descriptor(), name, value);
}
enum TGameSpecialKindYanTai {
  TSK_YT_NULL = 0,
  TSK_YT_JIANG258 = 1,
  TSK_YT_FOLLOWBANKER = 2,
  TSK_YT_VIRTUALCARD = 3,
  TSK_YT_DIANPAO_GANG = 4,
  TSK_YT_EATCARD = 5,
  TSK_YT_XIAOFAN = 6,
  TSK_YT_DAFAN = 7,
  TSK_YT_HUNPAI = 8,
  TSK_YT_FANGFENG = 9,
  TSK_YT_DIANPAO = 10,
  TSK_YT_ZMJIFEN = 11
};
bool TGameSpecialKindYanTai_IsValid(int value);
const TGameSpecialKindYanTai TGameSpecialKindYanTai_MIN = TSK_YT_NULL;
const TGameSpecialKindYanTai TGameSpecialKindYanTai_MAX = TSK_YT_ZMJIFEN;
const int TGameSpecialKindYanTai_ARRAYSIZE = TGameSpecialKindYanTai_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindYanTai_descriptor();
inline const ::std::string& TGameSpecialKindYanTai_Name(TGameSpecialKindYanTai value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindYanTai_descriptor(), value);
}
inline bool TGameSpecialKindYanTai_Parse(
    const ::std::string& name, TGameSpecialKindYanTai* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindYanTai>(
    TGameSpecialKindYanTai_descriptor(), name, value);
}
enum TGameSpecialKindWuXi {
  TSK_WX_NULL = 0,
  TSK_WX_SHENGJI = 1,
  TSK_WX_FENGDING = 2,
  TSK_WX_DIFENG = 3
};
bool TGameSpecialKindWuXi_IsValid(int value);
const TGameSpecialKindWuXi TGameSpecialKindWuXi_MIN = TSK_WX_NULL;
const TGameSpecialKindWuXi TGameSpecialKindWuXi_MAX = TSK_WX_DIFENG;
const int TGameSpecialKindWuXi_ARRAYSIZE = TGameSpecialKindWuXi_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindWuXi_descriptor();
inline const ::std::string& TGameSpecialKindWuXi_Name(TGameSpecialKindWuXi value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindWuXi_descriptor(), value);
}
inline bool TGameSpecialKindWuXi_Parse(
    const ::std::string& name, TGameSpecialKindWuXi* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindWuXi>(
    TGameSpecialKindWuXi_descriptor(), name, value);
}
enum TMahJonGCmdRecord {
  ACTION_NULL = 0,
  ACTION_START_GAME = 1,
  ACTION_OPERATE_RESULT = 2,
  ACTION_SEND_CARD = 3,
  ACTION_OUT_CARD = 4,
  ACTION_SHOWDOWN_DIANPAO = 5,
  ACTION_SHOWDOWN_ZIMO = 6,
  ACTION_SHOWDOWN_QIANGGANGHU = 7,
  ACTION_SHOWDOWN_LIUJU = 8,
  ACTION_SHOWDOWN = 9,
  ACTION_CONTRACT = 10,
  ACTION_SEND_FLOWER_CARD = 11,
  ACTION_START_FLOWER_CARD = 12,
  ACTION_OPERATE_CHOICE = 13,
  ACTION_MINGLOU = 14,
  ACTION_SEND_HAND_CARD = 15,
  ACTION_CATHECTIC = 16,
  ACTION_HUNYOU = 17,
  ACTION_TRUST_STATE = 18
};
bool TMahJonGCmdRecord_IsValid(int value);
const TMahJonGCmdRecord TMahJonGCmdRecord_MIN = ACTION_NULL;
const TMahJonGCmdRecord TMahJonGCmdRecord_MAX = ACTION_TRUST_STATE;
const int TMahJonGCmdRecord_ARRAYSIZE = TMahJonGCmdRecord_MAX + 1;

const ::google::protobuf::EnumDescriptor* TMahJonGCmdRecord_descriptor();
inline const ::std::string& TMahJonGCmdRecord_Name(TMahJonGCmdRecord value) {
  return ::google::protobuf::internal::NameOfEnum(
    TMahJonGCmdRecord_descriptor(), value);
}
inline bool TMahJonGCmdRecord_Parse(
    const ::std::string& name, TMahJonGCmdRecord* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TMahJonGCmdRecord>(
    TMahJonGCmdRecord_descriptor(), name, value);
}
enum TGameSpecialKindQinHuangDao {
  TSK_QHD_P0 = 1,
  TSK_QHD_P1 = 2,
  TSK_QHD_P2 = 4,
  TSK_QHD_BIEFENG = 8,
  TSK_QHD_QIHUI = 16,
  TSK_QHD_TOUCH = 32
};
bool TGameSpecialKindQinHuangDao_IsValid(int value);
const TGameSpecialKindQinHuangDao TGameSpecialKindQinHuangDao_MIN = TSK_QHD_P0;
const TGameSpecialKindQinHuangDao TGameSpecialKindQinHuangDao_MAX = TSK_QHD_TOUCH;
const int TGameSpecialKindQinHuangDao_ARRAYSIZE = TGameSpecialKindQinHuangDao_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindQinHuangDao_descriptor();
inline const ::std::string& TGameSpecialKindQinHuangDao_Name(TGameSpecialKindQinHuangDao value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindQinHuangDao_descriptor(), value);
}
inline bool TGameSpecialKindQinHuangDao_Parse(
    const ::std::string& name, TGameSpecialKindQinHuangDao* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindQinHuangDao>(
    TGameSpecialKindQinHuangDao_descriptor(), name, value);
}
enum TGameSpecialKindGuangDongTuiDaoHu {
  TSK_GDTDH_NUll = 0,
  TSK_GDTDH_QIDUI = 1,
  TSK_GDTDH_QIDUIJIAFAN = 2,
  TSK_GDTDH_GENZHUANG = 3,
  TSK_GDTDH_WUFENG = 4,
  TSK_GDTDH_QGH = 5,
  TSK_GDTDH_JJG = 6,
  TSK_GDTDH_WUHUI = 7,
  TSK_GDTDH_HONGHUI = 8,
  TSK_GDTDH_NORMALHUI = 9,
  TSK_GDTDH_LIANGHUI = 10,
  TSK_GDTDH_WUMA = 11,
  TSK_GDTDH_LIANGMA = 12,
  TSK_GDTDH_SIMA = 13,
  TSK_GDTDH_LIUMA = 14,
  TSK_GDTDH_BAMA = 15,
  TSK_GDTDH_BAOZHAMA = 16,
  TSK_GDTDH_MAGDFENG = 17,
  TSK_GDTDH_FENGDING50 = 18,
  TSK_GDTDH_GBQB = 19
};
bool TGameSpecialKindGuangDongTuiDaoHu_IsValid(int value);
const TGameSpecialKindGuangDongTuiDaoHu TGameSpecialKindGuangDongTuiDaoHu_MIN = TSK_GDTDH_NUll;
const TGameSpecialKindGuangDongTuiDaoHu TGameSpecialKindGuangDongTuiDaoHu_MAX = TSK_GDTDH_GBQB;
const int TGameSpecialKindGuangDongTuiDaoHu_ARRAYSIZE = TGameSpecialKindGuangDongTuiDaoHu_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindGuangDongTuiDaoHu_descriptor();
inline const ::std::string& TGameSpecialKindGuangDongTuiDaoHu_Name(TGameSpecialKindGuangDongTuiDaoHu value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindGuangDongTuiDaoHu_descriptor(), value);
}
inline bool TGameSpecialKindGuangDongTuiDaoHu_Parse(
    const ::std::string& name, TGameSpecialKindGuangDongTuiDaoHu* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindGuangDongTuiDaoHu>(
    TGameSpecialKindGuangDongTuiDaoHu_descriptor(), name, value);
}
enum TGameSpecialKindBaoDing {
  TSK_BD_NUll = 0,
  TSK_BD_TUIDAOHU = 1,
  TSK_BD_DABAO = 2,
  TSK_BD_XIAOBAO = 3,
  TSK_BD_SANJIACHU = 4,
  TSK_BD_KOUPAI = 5,
  TSK_BD_DAJIANG = 6,
  TSK_BD_ZIMO = 7,
  TSK_BD_SCORE40 = 8,
  TSK_BD_SCORE80 = 9,
  TSK_BD_SCORE120 = 10,
  TSK_BD_WUXIANZHI = 11
};
bool TGameSpecialKindBaoDing_IsValid(int value);
const TGameSpecialKindBaoDing TGameSpecialKindBaoDing_MIN = TSK_BD_NUll;
const TGameSpecialKindBaoDing TGameSpecialKindBaoDing_MAX = TSK_BD_WUXIANZHI;
const int TGameSpecialKindBaoDing_ARRAYSIZE = TGameSpecialKindBaoDing_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindBaoDing_descriptor();
inline const ::std::string& TGameSpecialKindBaoDing_Name(TGameSpecialKindBaoDing value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindBaoDing_descriptor(), value);
}
inline bool TGameSpecialKindBaoDing_Parse(
    const ::std::string& name, TGameSpecialKindBaoDing* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindBaoDing>(
    TGameSpecialKindBaoDing_descriptor(), name, value);
}
enum TGameSpecialKindDouDiZhu {
  TSK_DDZ_NULL = 0,
  TSK_DDZ_QDZ = 1,
  TSK_DDZ_JF = 2,
  TSK_DDZ_BFD = 3,
  TSK_DDZ_16 = 4,
  TSK_DDZ_32 = 5,
  TSK_DDZ_64 = 6,
  TSK_DDZ_DIPAI = 7,
  TSK_DDZ_JIABEI = 8,
  TSK_DDZ_MINGPAI = 9
};
bool TGameSpecialKindDouDiZhu_IsValid(int value);
const TGameSpecialKindDouDiZhu TGameSpecialKindDouDiZhu_MIN = TSK_DDZ_NULL;
const TGameSpecialKindDouDiZhu TGameSpecialKindDouDiZhu_MAX = TSK_DDZ_MINGPAI;
const int TGameSpecialKindDouDiZhu_ARRAYSIZE = TGameSpecialKindDouDiZhu_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindDouDiZhu_descriptor();
inline const ::std::string& TGameSpecialKindDouDiZhu_Name(TGameSpecialKindDouDiZhu value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindDouDiZhu_descriptor(), value);
}
inline bool TGameSpecialKindDouDiZhu_Parse(
    const ::std::string& name, TGameSpecialKindDouDiZhu* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindDouDiZhu>(
    TGameSpecialKindDouDiZhu_descriptor(), name, value);
}
enum TGameSpecialKindPSZ {
  TSK_PSZ_NULL = 0,
  TSK_PSZ_20_HUIHE = 1,
  TSK_PSZ_30_HUIHE = 2,
  TSK_PSZ_40_HUIHE = 3,
  TSK_PSZ_START_SEECARD = 4,
  TSK_PSZ_THREEHUIHE_SEECARD = 5,
  TSK_PSZ_FIVEHUIHE_SEECARD = 6,
  TSK_PSZ_START_COMPARECARD = 7,
  TSK_PSZ_THREEHUIHE_COMPARECARD = 8,
  TSK_PSZ_FIVEHUIHE_COMPARECARD = 9,
  TSK_PSZ_235_BUCHIBAOZI = 10,
  TSK_PSZ_235_CHIALLBAOZI = 11,
  TSK_PSZ_235_CHIFINALLYBAOZI = 12,
  TSK_PSZ_JIAZHU_SMALL = 13,
  TSK_PSZ_JIAZHU_BIG = 14,
  TSK_PSZ_NOTJOIN = 15,
  TSK_PSZ_CANJOIN = 16,
  TSK_PSZ_COMPAREBY_COLOR = 17,
  TSK_PSZ_COMPAREBY_START = 18
};
bool TGameSpecialKindPSZ_IsValid(int value);
const TGameSpecialKindPSZ TGameSpecialKindPSZ_MIN = TSK_PSZ_NULL;
const TGameSpecialKindPSZ TGameSpecialKindPSZ_MAX = TSK_PSZ_COMPAREBY_START;
const int TGameSpecialKindPSZ_ARRAYSIZE = TGameSpecialKindPSZ_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindPSZ_descriptor();
inline const ::std::string& TGameSpecialKindPSZ_Name(TGameSpecialKindPSZ value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindPSZ_descriptor(), value);
}
inline bool TGameSpecialKindPSZ_Parse(
    const ::std::string& name, TGameSpecialKindPSZ* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindPSZ>(
    TGameSpecialKindPSZ_descriptor(), name, value);
}
enum TGameSpecialKindTangShan {
  TSK_TS_NULL = 0,
  TSK_TS_YITIAOLONG = 1,
  TSK_TS_QINGYISE = 2,
  TSK_TS_SHISANYAO = 4,
  TSK_TS_FENGDING = 8,
  TSK_TS_ZIMO = 16,
  TSK_TS_DP_ZHUANG = 32,
  TSK_TS_DP_SANJIA = 64,
  TSK_TS_LIANGXI = 128,
  TSK_TS_ZOUXI = 256,
  TSK_TS_WUXI = 512,
  TSK_TS_DIANPAO = 1024,
  TSK_TS_CHIPAI = 2048,
  TSK_TS_PUTONG = 4096,
  TSK_TS_FANGZUOBI = 8192,
  TSK_TS_QINQING = 16384
};
bool TGameSpecialKindTangShan_IsValid(int value);
const TGameSpecialKindTangShan TGameSpecialKindTangShan_MIN = TSK_TS_NULL;
const TGameSpecialKindTangShan TGameSpecialKindTangShan_MAX = TSK_TS_QINQING;
const int TGameSpecialKindTangShan_ARRAYSIZE = TGameSpecialKindTangShan_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindTangShan_descriptor();
inline const ::std::string& TGameSpecialKindTangShan_Name(TGameSpecialKindTangShan value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindTangShan_descriptor(), value);
}
inline bool TGameSpecialKindTangShan_Parse(
    const ::std::string& name, TGameSpecialKindTangShan* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindTangShan>(
    TGameSpecialKindTangShan_descriptor(), name, value);
}
enum TGameSpecialKindDingXing {
  TSK_DX_NULL = 0,
  TSK_DX_EATCARD = 1,
  TSK_DX_QINGYISE = 2,
  TSK_DX_ZHUOWUKUI = 3,
  TSK_DX_HUI = 4,
  TSK_DX_DIANPAOBIG = 5,
  TSK_DX_DIANPAOTHREE = 6,
  TSK_DX_KOUPAI = 7
};
bool TGameSpecialKindDingXing_IsValid(int value);
const TGameSpecialKindDingXing TGameSpecialKindDingXing_MIN = TSK_DX_NULL;
const TGameSpecialKindDingXing TGameSpecialKindDingXing_MAX = TSK_DX_KOUPAI;
const int TGameSpecialKindDingXing_ARRAYSIZE = TGameSpecialKindDingXing_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindDingXing_descriptor();
inline const ::std::string& TGameSpecialKindDingXing_Name(TGameSpecialKindDingXing value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindDingXing_descriptor(), value);
}
inline bool TGameSpecialKindDingXing_Parse(
    const ::std::string& name, TGameSpecialKindDingXing* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindDingXing>(
    TGameSpecialKindDingXing_descriptor(), name, value);
}
enum TGameSpecialKindLangFang {
  TSK_LF_NULL = 0,
  TSK_LF_HAOHUAQING = 1,
  TSK_LF_CHAOHAOHUAQING = 2,
  TSK_LF_WUXIANZHI = 3,
  TSK_LF_LIANGMENG = 4,
  TSK_LF_SIMENG = 5,
  TSK_LF_LINGMENG = 6,
  TSK_LF_ZHUOWUKUI = 7
};
bool TGameSpecialKindLangFang_IsValid(int value);
const TGameSpecialKindLangFang TGameSpecialKindLangFang_MIN = TSK_LF_NULL;
const TGameSpecialKindLangFang TGameSpecialKindLangFang_MAX = TSK_LF_ZHUOWUKUI;
const int TGameSpecialKindLangFang_ARRAYSIZE = TGameSpecialKindLangFang_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindLangFang_descriptor();
inline const ::std::string& TGameSpecialKindLangFang_Name(TGameSpecialKindLangFang value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindLangFang_descriptor(), value);
}
inline bool TGameSpecialKindLangFang_Parse(
    const ::std::string& name, TGameSpecialKindLangFang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindLangFang>(
    TGameSpecialKindLangFang_descriptor(), name, value);
}
enum TGameSpecialKindAnXin {
  TSK_AX_NULL = 0,
  TSK_AX_YILINGBA = 1,
  TSK_AX_ERMENG = 2,
  TSK_AX_SIMENG = 3
};
bool TGameSpecialKindAnXin_IsValid(int value);
const TGameSpecialKindAnXin TGameSpecialKindAnXin_MIN = TSK_AX_NULL;
const TGameSpecialKindAnXin TGameSpecialKindAnXin_MAX = TSK_AX_SIMENG;
const int TGameSpecialKindAnXin_ARRAYSIZE = TGameSpecialKindAnXin_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindAnXin_descriptor();
inline const ::std::string& TGameSpecialKindAnXin_Name(TGameSpecialKindAnXin value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindAnXin_descriptor(), value);
}
inline bool TGameSpecialKindAnXin_Parse(
    const ::std::string& name, TGameSpecialKindAnXin* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindAnXin>(
    TGameSpecialKindAnXin_descriptor(), name, value);
}
enum TGameSpecialKindQiaoDong {
  TSK_QD_NULL = 0,
  TSK_QD_PINGHU = 1,
  TSK_QD_DAHU = 2
};
bool TGameSpecialKindQiaoDong_IsValid(int value);
const TGameSpecialKindQiaoDong TGameSpecialKindQiaoDong_MIN = TSK_QD_NULL;
const TGameSpecialKindQiaoDong TGameSpecialKindQiaoDong_MAX = TSK_QD_DAHU;
const int TGameSpecialKindQiaoDong_ARRAYSIZE = TGameSpecialKindQiaoDong_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindQiaoDong_descriptor();
inline const ::std::string& TGameSpecialKindQiaoDong_Name(TGameSpecialKindQiaoDong value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindQiaoDong_descriptor(), value);
}
inline bool TGameSpecialKindQiaoDong_Parse(
    const ::std::string& name, TGameSpecialKindQiaoDong* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindQiaoDong>(
    TGameSpecialKindQiaoDong_descriptor(), name, value);
}
enum TGameSpecialTangShanAnXiao {
  ANXIAO_NULL = 0,
  ANXIAO_NOPOWER = 1,
  ANXIAO_NOSIGN = 2,
  ANXIAO_POWER = 3,
  ANXIAO_SIGN = 4
};
bool TGameSpecialTangShanAnXiao_IsValid(int value);
const TGameSpecialTangShanAnXiao TGameSpecialTangShanAnXiao_MIN = ANXIAO_NULL;
const TGameSpecialTangShanAnXiao TGameSpecialTangShanAnXiao_MAX = ANXIAO_SIGN;
const int TGameSpecialTangShanAnXiao_ARRAYSIZE = TGameSpecialTangShanAnXiao_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialTangShanAnXiao_descriptor();
inline const ::std::string& TGameSpecialTangShanAnXiao_Name(TGameSpecialTangShanAnXiao value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialTangShanAnXiao_descriptor(), value);
}
inline bool TGameSpecialTangShanAnXiao_Parse(
    const ::std::string& name, TGameSpecialTangShanAnXiao* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialTangShanAnXiao>(
    TGameSpecialTangShanAnXiao_descriptor(), name, value);
}
enum TGameSpecialManCheng {
  TSK_MC_NUll = 0,
  TSK_MC_TUIDAOHU = 1,
  TSK_MC_DABAO = 2,
  TSK_MC_XIAOBAO = 3,
  TSK_MC_SANJIACHU = 4,
  TSK_MC_KOUPAI = 5,
  TSK_MC_DAJIANG = 6,
  TSK_MC_DAIFENG = 7,
  TSK_MC_GANGKAIHUA = 8,
  TSK_MC_HAIDILAO = 9,
  TSK_MC_DAIDIAN = 10,
  TSK_MC_DAIZHUANG = 11
};
bool TGameSpecialManCheng_IsValid(int value);
const TGameSpecialManCheng TGameSpecialManCheng_MIN = TSK_MC_NUll;
const TGameSpecialManCheng TGameSpecialManCheng_MAX = TSK_MC_DAIZHUANG;
const int TGameSpecialManCheng_ARRAYSIZE = TGameSpecialManCheng_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialManCheng_descriptor();
inline const ::std::string& TGameSpecialManCheng_Name(TGameSpecialManCheng value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialManCheng_descriptor(), value);
}
inline bool TGameSpecialManCheng_Parse(
    const ::std::string& name, TGameSpecialManCheng* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialManCheng>(
    TGameSpecialManCheng_descriptor(), name, value);
}
enum TGameSpecialGaoYang {
  TSK_GY_NUll = 0,
  TSK_GY_YILINGBA = 1,
  TSK_GY_KOUPAI = 2,
  TSK_GY_DAIZHUANG = 3,
  TSK_GY_TUIDAOHU = 4,
  TSK_GY_DABAO = 5,
  TSK_GY_XIAOBAO = 6,
  TSK_GY_SANJIACHU = 7,
  TSK_GY_ZIMO = 8,
  TSK_GY_DAJIANG = 9
};
bool TGameSpecialGaoYang_IsValid(int value);
const TGameSpecialGaoYang TGameSpecialGaoYang_MIN = TSK_GY_NUll;
const TGameSpecialGaoYang TGameSpecialGaoYang_MAX = TSK_GY_DAJIANG;
const int TGameSpecialGaoYang_ARRAYSIZE = TGameSpecialGaoYang_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialGaoYang_descriptor();
inline const ::std::string& TGameSpecialGaoYang_Name(TGameSpecialGaoYang value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialGaoYang_descriptor(), value);
}
inline bool TGameSpecialGaoYang_Parse(
    const ::std::string& name, TGameSpecialGaoYang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialGaoYang>(
    TGameSpecialGaoYang_descriptor(), name, value);
}
enum TGameSpecialJingZhou {
  TSK_JZ_NUll = 0,
  TSK_JZ_DABAO = 1,
  TSK_JZ_SANJIACHU = 2,
  TSK_JZ_ZIMOHU = 3,
  TSK_JZ_ZFB = 4,
  TSK_JZ_HFL = 5,
  TSK_JZ_BKD = 6,
  TSK_JZ_QMBZ = 7,
  TSK_JZ_GJ = 8
};
bool TGameSpecialJingZhou_IsValid(int value);
const TGameSpecialJingZhou TGameSpecialJingZhou_MIN = TSK_JZ_NUll;
const TGameSpecialJingZhou TGameSpecialJingZhou_MAX = TSK_JZ_GJ;
const int TGameSpecialJingZhou_ARRAYSIZE = TGameSpecialJingZhou_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialJingZhou_descriptor();
inline const ::std::string& TGameSpecialJingZhou_Name(TGameSpecialJingZhou value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialJingZhou_descriptor(), value);
}
inline bool TGameSpecialJingZhou_Parse(
    const ::std::string& name, TGameSpecialJingZhou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialJingZhou>(
    TGameSpecialJingZhou_descriptor(), name, value);
}
enum TGameSpecialDaCheng {
  TSK_DC_NUll = 0,
  TSK_DC_BUDAIMENG = 1,
  TSK_DC_LIANGMENG = 2,
  TSK_DC_SIMENG = 3,
  TSK_DC_BUDAIFENG = 4,
  TSK_DC_LAZHUANG = 5,
  TSK_DC_SiHui = 6,
  TSK_DC_QiHui = 7
};
bool TGameSpecialDaCheng_IsValid(int value);
const TGameSpecialDaCheng TGameSpecialDaCheng_MIN = TSK_DC_NUll;
const TGameSpecialDaCheng TGameSpecialDaCheng_MAX = TSK_DC_QiHui;
const int TGameSpecialDaCheng_ARRAYSIZE = TGameSpecialDaCheng_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialDaCheng_descriptor();
inline const ::std::string& TGameSpecialDaCheng_Name(TGameSpecialDaCheng value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialDaCheng_descriptor(), value);
}
inline bool TGameSpecialDaCheng_Parse(
    const ::std::string& name, TGameSpecialDaCheng* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialDaCheng>(
    TGameSpecialDaCheng_descriptor(), name, value);
}
enum TGameSpecialKindDongTai {
  TSK_DT_50 = 1,
  TSK_DT_100 = 2,
  TSK_DT_LIANZHUANG = 3
};
bool TGameSpecialKindDongTai_IsValid(int value);
const TGameSpecialKindDongTai TGameSpecialKindDongTai_MIN = TSK_DT_50;
const TGameSpecialKindDongTai TGameSpecialKindDongTai_MAX = TSK_DT_LIANZHUANG;
const int TGameSpecialKindDongTai_ARRAYSIZE = TGameSpecialKindDongTai_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindDongTai_descriptor();
inline const ::std::string& TGameSpecialKindDongTai_Name(TGameSpecialKindDongTai value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindDongTai_descriptor(), value);
}
inline bool TGameSpecialKindDongTai_Parse(
    const ::std::string& name, TGameSpecialKindDongTai* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindDongTai>(
    TGameSpecialKindDongTai_descriptor(), name, value);
}
enum TGameSpecialKingPingXiang {
  TSK_PX_DAIFENG = 1,
  TSK_PX_DAIHUN = 2,
  TSK_PX_ZIMO = 3,
  TSK_PX_DIANPAO = 4,
  TSK_PX_SANHUN = 5,
  TSK_PX_SIHUN = 6
};
bool TGameSpecialKingPingXiang_IsValid(int value);
const TGameSpecialKingPingXiang TGameSpecialKingPingXiang_MIN = TSK_PX_DAIFENG;
const TGameSpecialKingPingXiang TGameSpecialKingPingXiang_MAX = TSK_PX_SIHUN;
const int TGameSpecialKingPingXiang_ARRAYSIZE = TGameSpecialKingPingXiang_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKingPingXiang_descriptor();
inline const ::std::string& TGameSpecialKingPingXiang_Name(TGameSpecialKingPingXiang value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKingPingXiang_descriptor(), value);
}
inline bool TGameSpecialKingPingXiang_Parse(
    const ::std::string& name, TGameSpecialKingPingXiang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKingPingXiang>(
    TGameSpecialKingPingXiang_descriptor(), name, value);
}
enum TGameSpecialChess {
  TSK_CS_NULL = 0,
  TSK_CS_STEP15 = 1,
  TSK_CS_STEP30 = 2,
  TSK_CS_STEPUN = 3,
  TSK_CS_INNINGS30 = 4,
  TSK_CS_INNINGSUN = 5
};
bool TGameSpecialChess_IsValid(int value);
const TGameSpecialChess TGameSpecialChess_MIN = TSK_CS_NULL;
const TGameSpecialChess TGameSpecialChess_MAX = TSK_CS_INNINGSUN;
const int TGameSpecialChess_ARRAYSIZE = TGameSpecialChess_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialChess_descriptor();
inline const ::std::string& TGameSpecialChess_Name(TGameSpecialChess value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialChess_descriptor(), value);
}
inline bool TGameSpecialChess_Parse(
    const ::std::string& name, TGameSpecialChess* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialChess>(
    TGameSpecialChess_descriptor(), name, value);
}
enum TGameGuanDanSpecial {
  TGDSK_NULL = 0,
  TGDSK_GIFT = 1,
  TGDSK_JDWF = 2,
  TGDSK_TTZWF = 3,
  TGDSK_GDZW = 4,
  TGDSK_FB = 5,
  TGDSK_2FB = 6,
  TGDSK_3FB = 7,
  TGDSK_DL3J = 8,
  TGDSK_DL4J = 9,
  TGDSK_QA = 10
};
bool TGameGuanDanSpecial_IsValid(int value);
const TGameGuanDanSpecial TGameGuanDanSpecial_MIN = TGDSK_NULL;
const TGameGuanDanSpecial TGameGuanDanSpecial_MAX = TGDSK_QA;
const int TGameGuanDanSpecial_ARRAYSIZE = TGameGuanDanSpecial_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameGuanDanSpecial_descriptor();
inline const ::std::string& TGameGuanDanSpecial_Name(TGameGuanDanSpecial value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameGuanDanSpecial_descriptor(), value);
}
inline bool TGameGuanDanSpecial_Parse(
    const ::std::string& name, TGameGuanDanSpecial* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameGuanDanSpecial>(
    TGameGuanDanSpecial_descriptor(), name, value);
}
enum TPlayerState {
  TPLSTATE_NULL = 0,
  TPLSTATE_IDLE = 1,
  TPLSTATE_PRGAMEING = 2,
  TPLSTATE_QAMATCH = 3,
  TPLSTATE_UNMATCHQAGAMEING = 4,
  TPLSTATE_QAGAMEING = 5,
  TPLSTATE_WAITMATCH = 6
};
bool TPlayerState_IsValid(int value);
const TPlayerState TPlayerState_MIN = TPLSTATE_NULL;
const TPlayerState TPlayerState_MAX = TPLSTATE_WAITMATCH;
const int TPlayerState_ARRAYSIZE = TPlayerState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TPlayerState_descriptor();
inline const ::std::string& TPlayerState_Name(TPlayerState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TPlayerState_descriptor(), value);
}
inline bool TPlayerState_Parse(
    const ::std::string& name, TPlayerState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPlayerState>(
    TPlayerState_descriptor(), name, value);
}
enum TGameSpecialKindQingHe {
  TSK_QH_YIJIU = 1,
  TSK_QH_HEIFENG = 2,
  TSK_QH_ZHONGFABAI = 3,
  TSK_QH_HENGYIHENGJIU = 4,
  TSK_QH_LUANFENG = 5,
  TSK_QH_DAIFENGTUIDAOHU = 6,
  TSK_QH_BUDAIFENG = 7
};
bool TGameSpecialKindQingHe_IsValid(int value);
const TGameSpecialKindQingHe TGameSpecialKindQingHe_MIN = TSK_QH_YIJIU;
const TGameSpecialKindQingHe TGameSpecialKindQingHe_MAX = TSK_QH_BUDAIFENG;
const int TGameSpecialKindQingHe_ARRAYSIZE = TGameSpecialKindQingHe_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindQingHe_descriptor();
inline const ::std::string& TGameSpecialKindQingHe_Name(TGameSpecialKindQingHe value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindQingHe_descriptor(), value);
}
inline bool TGameSpecialKindQingHe_Parse(
    const ::std::string& name, TGameSpecialKindQingHe* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindQingHe>(
    TGameSpecialKindQingHe_descriptor(), name, value);
}
enum TGameSpecialKindWuQiang {
  TSK_WQ_NULL = 1,
  TSK_WQ_ZIMO = 2,
  TSK_WQ_DIANPAO = 3
};
bool TGameSpecialKindWuQiang_IsValid(int value);
const TGameSpecialKindWuQiang TGameSpecialKindWuQiang_MIN = TSK_WQ_NULL;
const TGameSpecialKindWuQiang TGameSpecialKindWuQiang_MAX = TSK_WQ_DIANPAO;
const int TGameSpecialKindWuQiang_ARRAYSIZE = TGameSpecialKindWuQiang_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindWuQiang_descriptor();
inline const ::std::string& TGameSpecialKindWuQiang_Name(TGameSpecialKindWuQiang value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindWuQiang_descriptor(), value);
}
inline bool TGameSpecialKindWuQiang_Parse(
    const ::std::string& name, TGameSpecialKindWuQiang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindWuQiang>(
    TGameSpecialKindWuQiang_descriptor(), name, value);
}
enum TGameSpecialKindSiChuanZiYou {
  TSK_SCZY_LUNLIUZHUANG = 1,
  TSK_SCZY_HUPAIXIAJIA = 2,
  TSK_SCZY_WUMA = 3,
  TSK_SCZY_LIANGMA = 4,
  TSK_SCZY_SIMA = 5,
  TSK_SCZY_LIUMA = 6,
  TSK_SCZY_SANREN = 7,
  TSK_SCZY_ERREN = 8,
  TSK_SCZY_VIDEO = 9
};
bool TGameSpecialKindSiChuanZiYou_IsValid(int value);
const TGameSpecialKindSiChuanZiYou TGameSpecialKindSiChuanZiYou_MIN = TSK_SCZY_LUNLIUZHUANG;
const TGameSpecialKindSiChuanZiYou TGameSpecialKindSiChuanZiYou_MAX = TSK_SCZY_VIDEO;
const int TGameSpecialKindSiChuanZiYou_ARRAYSIZE = TGameSpecialKindSiChuanZiYou_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindSiChuanZiYou_descriptor();
inline const ::std::string& TGameSpecialKindSiChuanZiYou_Name(TGameSpecialKindSiChuanZiYou value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindSiChuanZiYou_descriptor(), value);
}
inline bool TGameSpecialKindSiChuanZiYou_Parse(
    const ::std::string& name, TGameSpecialKindSiChuanZiYou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindSiChuanZiYou>(
    TGameSpecialKindSiChuanZiYou_descriptor(), name, value);
}
enum TGameSpecialKindDouShiSi {
  TSK_DSS_NULL = 1,
  TSK_DSS_SANWANG = 2,
  TSK_DSS_WUWANG = 3,
  TSK_DSS_QIWANG = 4,
  TSK_DSS_JINERSHI = 5,
  TSK_DSS_TUOGOUFAN = 6,
  TSK_DSS_XIAOSIDUI = 7,
  TSK_DSS_BAOJIAO = 8,
  TSK_DSS_JIETI = 9,
  TSK_DSS_PENGSHANGHUA = 10,
  TSK_DSS_GANGSHANGHUA = 11,
  TSK_DSS_HONGHEIHUWUSHI = 12,
  TSK_DSS_ERSHIDIANBAOJIAO = 13
};
bool TGameSpecialKindDouShiSi_IsValid(int value);
const TGameSpecialKindDouShiSi TGameSpecialKindDouShiSi_MIN = TSK_DSS_NULL;
const TGameSpecialKindDouShiSi TGameSpecialKindDouShiSi_MAX = TSK_DSS_ERSHIDIANBAOJIAO;
const int TGameSpecialKindDouShiSi_ARRAYSIZE = TGameSpecialKindDouShiSi_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindDouShiSi_descriptor();
inline const ::std::string& TGameSpecialKindDouShiSi_Name(TGameSpecialKindDouShiSi value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindDouShiSi_descriptor(), value);
}
inline bool TGameSpecialKindDouShiSi_Parse(
    const ::std::string& name, TGameSpecialKindDouShiSi* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindDouShiSi>(
    TGameSpecialKindDouShiSi_descriptor(), name, value);
}
enum TGameSpecialKindPengHu {
  TSK_PH_NULL = 1,
  TSK_PH_ZHANGFANBEI = 2,
  TSK_PH_HU = 3
};
bool TGameSpecialKindPengHu_IsValid(int value);
const TGameSpecialKindPengHu TGameSpecialKindPengHu_MIN = TSK_PH_NULL;
const TGameSpecialKindPengHu TGameSpecialKindPengHu_MAX = TSK_PH_HU;
const int TGameSpecialKindPengHu_ARRAYSIZE = TGameSpecialKindPengHu_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindPengHu_descriptor();
inline const ::std::string& TGameSpecialKindPengHu_Name(TGameSpecialKindPengHu value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindPengHu_descriptor(), value);
}
inline bool TGameSpecialKindPengHu_Parse(
    const ::std::string& name, TGameSpecialKindPengHu* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindPengHu>(
    TGameSpecialKindPengHu_descriptor(), name, value);
}
enum TGameSpecialKindYiXian {
  TSK_YX_NULL = 0,
  TSK_YX_DABAO = 1,
  TSK_YX_GEFUGE = 2,
  TSK_YX_TQGP = 3
};
bool TGameSpecialKindYiXian_IsValid(int value);
const TGameSpecialKindYiXian TGameSpecialKindYiXian_MIN = TSK_YX_NULL;
const TGameSpecialKindYiXian TGameSpecialKindYiXian_MAX = TSK_YX_TQGP;
const int TGameSpecialKindYiXian_ARRAYSIZE = TGameSpecialKindYiXian_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindYiXian_descriptor();
inline const ::std::string& TGameSpecialKindYiXian_Name(TGameSpecialKindYiXian value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindYiXian_descriptor(), value);
}
inline bool TGameSpecialKindYiXian_Parse(
    const ::std::string& name, TGameSpecialKindYiXian* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindYiXian>(
    TGameSpecialKindYiXian_descriptor(), name, value);
}
enum TGameSpecialKindDeZhou {
  TSK_DZ_ZiMo = 0,
  TSK_DZ_KaHu = 1
};
bool TGameSpecialKindDeZhou_IsValid(int value);
const TGameSpecialKindDeZhou TGameSpecialKindDeZhou_MIN = TSK_DZ_ZiMo;
const TGameSpecialKindDeZhou TGameSpecialKindDeZhou_MAX = TSK_DZ_KaHu;
const int TGameSpecialKindDeZhou_ARRAYSIZE = TGameSpecialKindDeZhou_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindDeZhou_descriptor();
inline const ::std::string& TGameSpecialKindDeZhou_Name(TGameSpecialKindDeZhou value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindDeZhou_descriptor(), value);
}
inline bool TGameSpecialKindDeZhou_Parse(
    const ::std::string& name, TGameSpecialKindDeZhou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindDeZhou>(
    TGameSpecialKindDeZhou_descriptor(), name, value);
}
enum TGameSpecialKindDongYing {
  TSK_DY_NULL = 0,
  TSK_DY_JIANG258 = 1,
  TSK_DY_DIANPAO = 2,
  TSK_DY_EATCARD = 3
};
bool TGameSpecialKindDongYing_IsValid(int value);
const TGameSpecialKindDongYing TGameSpecialKindDongYing_MIN = TSK_DY_NULL;
const TGameSpecialKindDongYing TGameSpecialKindDongYing_MAX = TSK_DY_EATCARD;
const int TGameSpecialKindDongYing_ARRAYSIZE = TGameSpecialKindDongYing_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindDongYing_descriptor();
inline const ::std::string& TGameSpecialKindDongYing_Name(TGameSpecialKindDongYing value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindDongYing_descriptor(), value);
}
inline bool TGameSpecialKindDongYing_Parse(
    const ::std::string& name, TGameSpecialKindDongYing* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindDongYing>(
    TGameSpecialKindDongYing_descriptor(), name, value);
}
enum TGameSpecialTaocheng {
  TSK_TC_NULL = 0,
  TSK_TC_DIANPAO = 1,
  TSK_TC_DABAO = 2,
  TSK_TC_XIAOBAO = 3,
  TSK_TC_SANJIACHU = 4
};
bool TGameSpecialTaocheng_IsValid(int value);
const TGameSpecialTaocheng TGameSpecialTaocheng_MIN = TSK_TC_NULL;
const TGameSpecialTaocheng TGameSpecialTaocheng_MAX = TSK_TC_SANJIACHU;
const int TGameSpecialTaocheng_ARRAYSIZE = TGameSpecialTaocheng_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialTaocheng_descriptor();
inline const ::std::string& TGameSpecialTaocheng_Name(TGameSpecialTaocheng value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialTaocheng_descriptor(), value);
}
inline bool TGameSpecialTaocheng_Parse(
    const ::std::string& name, TGameSpecialTaocheng* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialTaocheng>(
    TGameSpecialTaocheng_descriptor(), name, value);
}
enum TGameSpecialKindNiuNiu {
  TSK_NN_NULL = 0,
  TSK_NN_NNHUANZHUANG = 1,
  TSK_NN_LUNZHUANG = 2,
  TSK_NN_WINZHUANG = 3,
  TSK_NN_RANDOMZHUANG = 4,
  TSK_NN_OWNERZHUANG = 5,
  TSK_NN_JINNIU = 6,
  TSK_NN_YINNIU = 7,
  TSK_NN_WUXIAONIU = 8,
  TSK_NN_ZHADANIU = 9,
  TSK_NN_YITIAOLONG = 10,
  TSK_NN_WUKING = 11,
  TSK_NN_KINGALL = 12,
  TSK_NN_KING_ONLYTEN = 13,
  TSK_NN_HANDCARD_ONE = 14,
  TSK_NN_HANDCARD_TWO = 15,
  TSK_NN_NOTJOIN = 16,
  TSK_NN_CANJOIN = 17
};
bool TGameSpecialKindNiuNiu_IsValid(int value);
const TGameSpecialKindNiuNiu TGameSpecialKindNiuNiu_MIN = TSK_NN_NULL;
const TGameSpecialKindNiuNiu TGameSpecialKindNiuNiu_MAX = TSK_NN_CANJOIN;
const int TGameSpecialKindNiuNiu_ARRAYSIZE = TGameSpecialKindNiuNiu_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindNiuNiu_descriptor();
inline const ::std::string& TGameSpecialKindNiuNiu_Name(TGameSpecialKindNiuNiu value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindNiuNiu_descriptor(), value);
}
inline bool TGameSpecialKindNiuNiu_Parse(
    const ::std::string& name, TGameSpecialKindNiuNiu* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindNiuNiu>(
    TGameSpecialKindNiuNiu_descriptor(), name, value);
}
enum TGameSpecialSiChuanXueLiu {
  TSK_SC_XL_NULL = 0,
  TSK_SC_XL_JIAFAN = 1,
  TSK_SC_XL_GUNFAN = 2,
  TSK_SC_XL_HUANSANZHANG = 3,
  TSK_SC_XL_CHAJIAO = 4,
  TSK_SC_XL_CHAHUAZHU = 5,
  TSK_SC_XL_HUJIAOZHUANYI = 6,
  TSK_SC_XL_HUJIAOZHUANYIZHUANGEN = 7,
  TSK_SC_XL_FENGDING_TWO = 8,
  TSK_SC_XL_FENGDING_THREE = 9,
  TSK_SC_XL_FENGDING_FOUR = 10
};
bool TGameSpecialSiChuanXueLiu_IsValid(int value);
const TGameSpecialSiChuanXueLiu TGameSpecialSiChuanXueLiu_MIN = TSK_SC_XL_NULL;
const TGameSpecialSiChuanXueLiu TGameSpecialSiChuanXueLiu_MAX = TSK_SC_XL_FENGDING_FOUR;
const int TGameSpecialSiChuanXueLiu_ARRAYSIZE = TGameSpecialSiChuanXueLiu_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialSiChuanXueLiu_descriptor();
inline const ::std::string& TGameSpecialSiChuanXueLiu_Name(TGameSpecialSiChuanXueLiu value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialSiChuanXueLiu_descriptor(), value);
}
inline bool TGameSpecialSiChuanXueLiu_Parse(
    const ::std::string& name, TGameSpecialSiChuanXueLiu* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialSiChuanXueLiu>(
    TGameSpecialSiChuanXueLiu_descriptor(), name, value);
}
enum TGameSpecialBinZhou {
  TSK_BINZ_NULL = 0,
  TSK_BINZ_DIANPAO = 1,
  TSK_BINZ_SANJIACHU = 2,
  TSK_BINZ_BUDAIFENG = 3
};
bool TGameSpecialBinZhou_IsValid(int value);
const TGameSpecialBinZhou TGameSpecialBinZhou_MIN = TSK_BINZ_NULL;
const TGameSpecialBinZhou TGameSpecialBinZhou_MAX = TSK_BINZ_BUDAIFENG;
const int TGameSpecialBinZhou_ARRAYSIZE = TGameSpecialBinZhou_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialBinZhou_descriptor();
inline const ::std::string& TGameSpecialBinZhou_Name(TGameSpecialBinZhou value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialBinZhou_descriptor(), value);
}
inline bool TGameSpecialBinZhou_Parse(
    const ::std::string& name, TGameSpecialBinZhou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialBinZhou>(
    TGameSpecialBinZhou_descriptor(), name, value);
}
enum TGameSpecialNanJing {
  TSK_NJ_NULL = 0,
  TSK_NJ_HUAZA = 1,
  TSK_NJ_JIEZHUANGBI = 2,
  TSK_NJ_FAKUAN = 3,
  TSK_NJ_95SCORE = 4,
  TSK_NJ_100SCORE = 5,
  TSK_NJ_50FENGDING = 6,
  TSK_NJ_100FENGDING = 7,
  TSK_NJ_300FENGDING = 8
};
bool TGameSpecialNanJing_IsValid(int value);
const TGameSpecialNanJing TGameSpecialNanJing_MIN = TSK_NJ_NULL;
const TGameSpecialNanJing TGameSpecialNanJing_MAX = TSK_NJ_300FENGDING;
const int TGameSpecialNanJing_ARRAYSIZE = TGameSpecialNanJing_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialNanJing_descriptor();
inline const ::std::string& TGameSpecialNanJing_Name(TGameSpecialNanJing value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialNanJing_descriptor(), value);
}
inline bool TGameSpecialNanJing_Parse(
    const ::std::string& name, TGameSpecialNanJing* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialNanJing>(
    TGameSpecialNanJing_descriptor(), name, value);
}
enum TGameRoomType {
  TGameRoom_INVALID = 0,
  TGameRoom_COMMON = 1,
  TGameRoom_FRIEND = 2,
  TGameRoom_QUALIFYING = 3
};
bool TGameRoomType_IsValid(int value);
const TGameRoomType TGameRoomType_MIN = TGameRoom_INVALID;
const TGameRoomType TGameRoomType_MAX = TGameRoom_QUALIFYING;
const int TGameRoomType_ARRAYSIZE = TGameRoomType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameRoomType_descriptor();
inline const ::std::string& TGameRoomType_Name(TGameRoomType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameRoomType_descriptor(), value);
}
inline bool TGameRoomType_Parse(
    const ::std::string& name, TGameRoomType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameRoomType>(
    TGameRoomType_descriptor(), name, value);
}
enum TItemType {
  TINTERACTIVE_ITEM = 1,
  TTICKETS_ITEM = 2,
  TPICTURE_FRAME_ITEM = 3,
  TCURRENCY_ITEM = 4
};
bool TItemType_IsValid(int value);
const TItemType TItemType_MIN = TINTERACTIVE_ITEM;
const TItemType TItemType_MAX = TCURRENCY_ITEM;
const int TItemType_ARRAYSIZE = TItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TItemType_descriptor();
inline const ::std::string& TItemType_Name(TItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TItemType_descriptor(), value);
}
inline bool TItemType_Parse(
    const ::std::string& name, TItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TItemType>(
    TItemType_descriptor(), name, value);
}
enum TCurrencyType {
  TCT_RMB = 1,
  TCT_BEAN = 2,
  TCT_REWARD = 3,
  TCT_DIAMOND = 4,
  TCT_COUPON = 5
};
bool TCurrencyType_IsValid(int value);
const TCurrencyType TCurrencyType_MIN = TCT_RMB;
const TCurrencyType TCurrencyType_MAX = TCT_COUPON;
const int TCurrencyType_ARRAYSIZE = TCurrencyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TCurrencyType_descriptor();
inline const ::std::string& TCurrencyType_Name(TCurrencyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TCurrencyType_descriptor(), value);
}
inline bool TCurrencyType_Parse(
    const ::std::string& name, TCurrencyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TCurrencyType>(
    TCurrencyType_descriptor(), name, value);
}
enum TClientEffects {
  TE_SHANDIANCHUPAI = 1
};
bool TClientEffects_IsValid(int value);
const TClientEffects TClientEffects_MIN = TE_SHANDIANCHUPAI;
const TClientEffects TClientEffects_MAX = TE_SHANDIANCHUPAI;
const int TClientEffects_ARRAYSIZE = TClientEffects_MAX + 1;

const ::google::protobuf::EnumDescriptor* TClientEffects_descriptor();
inline const ::std::string& TClientEffects_Name(TClientEffects value) {
  return ::google::protobuf::internal::NameOfEnum(
    TClientEffects_descriptor(), value);
}
inline bool TClientEffects_Parse(
    const ::std::string& name, TClientEffects* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TClientEffects>(
    TClientEffects_descriptor(), name, value);
}
enum MAIL_CURRENCY_TYPE {
  MCT_INVALID = 0,
  MCT_COUPON = 1,
  MCT_MAX = 2
};
bool MAIL_CURRENCY_TYPE_IsValid(int value);
const MAIL_CURRENCY_TYPE MAIL_CURRENCY_TYPE_MIN = MCT_INVALID;
const MAIL_CURRENCY_TYPE MAIL_CURRENCY_TYPE_MAX = MCT_MAX;
const int MAIL_CURRENCY_TYPE_ARRAYSIZE = MAIL_CURRENCY_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MAIL_CURRENCY_TYPE_descriptor();
inline const ::std::string& MAIL_CURRENCY_TYPE_Name(MAIL_CURRENCY_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MAIL_CURRENCY_TYPE_descriptor(), value);
}
inline bool MAIL_CURRENCY_TYPE_Parse(
    const ::std::string& name, MAIL_CURRENCY_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MAIL_CURRENCY_TYPE>(
    MAIL_CURRENCY_TYPE_descriptor(), name, value);
}
enum TGameSpecialKindGanDengYan {
  TSK_GDY_NULL = 0,
  TSK_GDY_LUNZHUANG = 1,
  TSK_GDY_WINZHUANG = 2,
  TSK_GDY_HANDCARD_ONE = 3,
  TSK_GDY_HANDCARD_TWO = 4,
  TSK_GDY_JDWF = 5,
  TSK_GDY_HPWF = 6,
  TSK_GDY_FENGDING8 = 7,
  TSK_GDY_FENGDING16 = 8,
  TSK_GDY_FENGDING32 = 9
};
bool TGameSpecialKindGanDengYan_IsValid(int value);
const TGameSpecialKindGanDengYan TGameSpecialKindGanDengYan_MIN = TSK_GDY_NULL;
const TGameSpecialKindGanDengYan TGameSpecialKindGanDengYan_MAX = TSK_GDY_FENGDING32;
const int TGameSpecialKindGanDengYan_ARRAYSIZE = TGameSpecialKindGanDengYan_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindGanDengYan_descriptor();
inline const ::std::string& TGameSpecialKindGanDengYan_Name(TGameSpecialKindGanDengYan value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindGanDengYan_descriptor(), value);
}
inline bool TGameSpecialKindGanDengYan_Parse(
    const ::std::string& name, TGameSpecialKindGanDengYan* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindGanDengYan>(
    TGameSpecialKindGanDengYan_descriptor(), name, value);
}
enum TGameSpecialDeZhou {
  TSK_DZ_NULL = 0,
  TSK_DZ_KAHU = 1,
  TSK_DZ_HAOHUA = 2,
  TSK_DZ_CHAOHAOHUA = 3,
  TSK_DZ_WUXIANZHI = 4
};
bool TGameSpecialDeZhou_IsValid(int value);
const TGameSpecialDeZhou TGameSpecialDeZhou_MIN = TSK_DZ_NULL;
const TGameSpecialDeZhou TGameSpecialDeZhou_MAX = TSK_DZ_WUXIANZHI;
const int TGameSpecialDeZhou_ARRAYSIZE = TGameSpecialDeZhou_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialDeZhou_descriptor();
inline const ::std::string& TGameSpecialDeZhou_Name(TGameSpecialDeZhou value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialDeZhou_descriptor(), value);
}
inline bool TGameSpecialDeZhou_Parse(
    const ::std::string& name, TGameSpecialDeZhou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialDeZhou>(
    TGameSpecialDeZhou_descriptor(), name, value);
}
enum TGameSpecialRenQiu {
  TSK_RQ_NULL = 0,
  TSK_RQ_HAOHUA = 1,
  TSK_RQ_CHAOHAOHUA = 2,
  TSK_RQ_WUXIANZHI = 3,
  TSK_RQ_LIANGMENG = 4,
  TSK_RQ_SIMENG = 5
};
bool TGameSpecialRenQiu_IsValid(int value);
const TGameSpecialRenQiu TGameSpecialRenQiu_MIN = TSK_RQ_NULL;
const TGameSpecialRenQiu TGameSpecialRenQiu_MAX = TSK_RQ_SIMENG;
const int TGameSpecialRenQiu_ARRAYSIZE = TGameSpecialRenQiu_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialRenQiu_descriptor();
inline const ::std::string& TGameSpecialRenQiu_Name(TGameSpecialRenQiu value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialRenQiu_descriptor(), value);
}
inline bool TGameSpecialRenQiu_Parse(
    const ::std::string& name, TGameSpecialRenQiu* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialRenQiu>(
    TGameSpecialRenQiu_descriptor(), name, value);
}
enum TGameSpecialKindQingEr {
  TSK_QE_NULL = 0,
  TSK_QE_XIAXIAN60 = 1,
  TSK_QE_XIAXIAN80 = 2,
  TSK_QE_FENGDING600 = 3,
  TSK_QE_FENGDING800 = 4,
  TSK_QE_TAIYANG_GUANGGAO = 5,
  TSK_QE_CHAOZHUANG = 6,
  TSK_QE_SHISANHU = 7
};
bool TGameSpecialKindQingEr_IsValid(int value);
const TGameSpecialKindQingEr TGameSpecialKindQingEr_MIN = TSK_QE_NULL;
const TGameSpecialKindQingEr TGameSpecialKindQingEr_MAX = TSK_QE_SHISANHU;
const int TGameSpecialKindQingEr_ARRAYSIZE = TGameSpecialKindQingEr_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindQingEr_descriptor();
inline const ::std::string& TGameSpecialKindQingEr_Name(TGameSpecialKindQingEr value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindQingEr_descriptor(), value);
}
inline bool TGameSpecialKindQingEr_Parse(
    const ::std::string& name, TGameSpecialKindQingEr* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindQingEr>(
    TGameSpecialKindQingEr_descriptor(), name, value);
}
enum TGameSpecialKindCangZhou {
  TSK_CZ_NULL = 0,
  TSK_CZ_FAHU = 1,
  TSK_CZ_DIANPAO = 2
};
bool TGameSpecialKindCangZhou_IsValid(int value);
const TGameSpecialKindCangZhou TGameSpecialKindCangZhou_MIN = TSK_CZ_NULL;
const TGameSpecialKindCangZhou TGameSpecialKindCangZhou_MAX = TSK_CZ_DIANPAO;
const int TGameSpecialKindCangZhou_ARRAYSIZE = TGameSpecialKindCangZhou_MAX + 1;

const ::google::protobuf::EnumDescriptor* TGameSpecialKindCangZhou_descriptor();
inline const ::std::string& TGameSpecialKindCangZhou_Name(TGameSpecialKindCangZhou value) {
  return ::google::protobuf::internal::NameOfEnum(
    TGameSpecialKindCangZhou_descriptor(), value);
}
inline bool TGameSpecialKindCangZhou_Parse(
    const ::std::string& name, TGameSpecialKindCangZhou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TGameSpecialKindCangZhou>(
    TGameSpecialKindCangZhou_descriptor(), name, value);
}
enum TQingErShowDownEvent {
  QE_EVENT_LIUJUHU = 0,
  QE_EVENT_DIANPAO = 1,
  QE_EVENT_ZIMO = 2,
  QE_EVENT_QIANGGANGHU = 3,
  QE_EVENT_PINGHU = 4,
  QE_EVENT_GANGSHANGKAIHUA = 5,
  QE_EVENT_BIANZHANG = 6,
  QE_EVENT_QIANZHANG = 7,
  QE_EVENT_DIAOZHANG = 8,
  QE_EVENT_WENQIAN1 = 9,
  QE_EVENT_WENQIAN2 = 10,
  QE_EVENT_WENQIAN3 = 11,
  QE_EVENT_WENQIAN4 = 12,
  QE_EVENT_QINGER = 13,
  QE_EVENT_PIAOHU = 14,
  QE_EVENT_SANHONG = 15,
  QE_EVENT_QIONGHEN = 16,
  QE_EVENT_QIONGQIONGHEN = 17,
  QE_EVENT_SHISANHU = 18,
  QE_EVENT_MINGGANG = 19,
  QE_EVENT_ANGANG = 20,
  QE_EVENT_QIFEI = 21,
  QE_EVENT_PENGPAI = 22,
  QE_EVENT_ANKE = 23,
  QE_EVENT_DAWANG = 24,
  QE_EVENT_XIAOWANG = 25,
  QE_EVENT_QIERWANG = 26,
  QE_EVENT_TAIYANG = 27,
  QE_EVENT_CHAOZHUANG = 28,
  QE_EVENT_MEIHUA_J = 29,
  QE_EVENT_MEIHUA_Q = 30,
  QE_EVENT_MEIHUA_K = 31,
  QE_EVENT_MEIHUA_JQK = 32,
  QE_EVENT_BUHUA = 33,
  QE_EVENT_GANGPAI = 34
};
bool TQingErShowDownEvent_IsValid(int value);
const TQingErShowDownEvent TQingErShowDownEvent_MIN = QE_EVENT_LIUJUHU;
const TQingErShowDownEvent TQingErShowDownEvent_MAX = QE_EVENT_GANGPAI;
const int TQingErShowDownEvent_ARRAYSIZE = TQingErShowDownEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* TQingErShowDownEvent_descriptor();
inline const ::std::string& TQingErShowDownEvent_Name(TQingErShowDownEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    TQingErShowDownEvent_descriptor(), value);
}
inline bool TQingErShowDownEvent_Parse(
    const ::std::string& name, TQingErShowDownEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TQingErShowDownEvent>(
    TQingErShowDownEvent_descriptor(), name, value);
}
enum TQualifyingType {
  QUALIFYING_NONE = 0,
  QUALIFYING_STAR = 1,
  QUALIFYING_MASTER = 2
};
bool TQualifyingType_IsValid(int value);
const TQualifyingType TQualifyingType_MIN = QUALIFYING_NONE;
const TQualifyingType TQualifyingType_MAX = QUALIFYING_MASTER;
const int TQualifyingType_ARRAYSIZE = TQualifyingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TQualifyingType_descriptor();
inline const ::std::string& TQualifyingType_Name(TQualifyingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TQualifyingType_descriptor(), value);
}
inline bool TQualifyingType_Parse(
    const ::std::string& name, TQualifyingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TQualifyingType>(
    TQualifyingType_descriptor(), name, value);
}
enum TMatchLevel {
  QUALIFYING_LV_NONE = 0,
  QUALIFYING_LV_PRIMA = 1,
  QUALIFYING_LV_BLV = 2,
  QUALIFYING_LV_ALV = 3,
  QUALIFYING_LV_COUNTRY = 4
};
bool TMatchLevel_IsValid(int value);
const TMatchLevel TMatchLevel_MIN = QUALIFYING_LV_NONE;
const TMatchLevel TMatchLevel_MAX = QUALIFYING_LV_COUNTRY;
const int TMatchLevel_ARRAYSIZE = TMatchLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* TMatchLevel_descriptor();
inline const ::std::string& TMatchLevel_Name(TMatchLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    TMatchLevel_descriptor(), value);
}
inline bool TMatchLevel_Parse(
    const ::std::string& name, TMatchLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TMatchLevel>(
    TMatchLevel_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TEvent>() {
  return ::TEvent_descriptor();
}
template <> struct is_proto_enum< ::TConditionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TConditionType>() {
  return ::TConditionType_descriptor();
}
template <> struct is_proto_enum< ::BlackJackEndingState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BlackJackEndingState>() {
  return ::BlackJackEndingState_descriptor();
}
template <> struct is_proto_enum< ::TSyncDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSyncDataType>() {
  return ::TSyncDataType_descriptor();
}
template <> struct is_proto_enum< ::TErrorType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TErrorType>() {
  return ::TErrorType_descriptor();
}
template <> struct is_proto_enum< ::TPlayerFlagBit> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TPlayerFlagBit>() {
  return ::TPlayerFlagBit_descriptor();
}
template <> struct is_proto_enum< ::TKPIType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TKPIType>() {
  return ::TKPIType_descriptor();
}
template <> struct is_proto_enum< ::TGameType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameType>() {
  return ::TGameType_descriptor();
}
template <> struct is_proto_enum< ::TChannel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TChannel>() {
  return ::TChannel_descriptor();
}
template <> struct is_proto_enum< ::TMailType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TMailType>() {
  return ::TMailType_descriptor();
}
template <> struct is_proto_enum< ::TTissueState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TTissueState>() {
  return ::TTissueState_descriptor();
}
template <> struct is_proto_enum< ::TViewState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TViewState>() {
  return ::TViewState_descriptor();
}
template <> struct is_proto_enum< ::TRobotLuaEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TRobotLuaEvent>() {
  return ::TRobotLuaEvent_descriptor();
}
template <> struct is_proto_enum< ::TAchievementState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TAchievementState>() {
  return ::TAchievementState_descriptor();
}
template <> struct is_proto_enum< ::TAchievementConditionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TAchievementConditionType>() {
  return ::TAchievementConditionType_descriptor();
}
template <> struct is_proto_enum< ::EnumBonusGameEndType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EnumBonusGameEndType>() {
  return ::EnumBonusGameEndType_descriptor();
}
template <> struct is_proto_enum< ::EnumSlotsWinType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EnumSlotsWinType>() {
  return ::EnumSlotsWinType_descriptor();
}
template <> struct is_proto_enum< ::EnumRoomState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EnumRoomState>() {
  return ::EnumRoomState_descriptor();
}
template <> struct is_proto_enum< ::TMoneyFlow> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TMoneyFlow>() {
  return ::TMoneyFlow_descriptor();
}
template <> struct is_proto_enum< ::TRMBFlow> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TRMBFlow>() {
  return ::TRMBFlow_descriptor();
}
template <> struct is_proto_enum< ::TSex> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSex>() {
  return ::TSex_descriptor();
}
template <> struct is_proto_enum< ::TMissionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TMissionState>() {
  return ::TMissionState_descriptor();
}
template <> struct is_proto_enum< ::TMahJongShowDownEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TMahJongShowDownEvent>() {
  return ::TMahJongShowDownEvent_descriptor();
}
template <> struct is_proto_enum< ::EnumItemUseType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EnumItemUseType>() {
  return ::EnumItemUseType_descriptor();
}
template <> struct is_proto_enum< ::TCostType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TCostType>() {
  return ::TCostType_descriptor();
}
template <> struct is_proto_enum< ::TShopLabelType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TShopLabelType>() {
  return ::TShopLabelType_descriptor();
}
template <> struct is_proto_enum< ::TSystemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSystemType>() {
  return ::TSystemType_descriptor();
}
template <> struct is_proto_enum< ::TDotType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TDotType>() {
  return ::TDotType_descriptor();
}
template <> struct is_proto_enum< ::TGameConsumePay> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameConsumePay>() {
  return ::TGameConsumePay_descriptor();
}
template <> struct is_proto_enum< ::TGameRoomKind> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameRoomKind>() {
  return ::TGameRoomKind_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKind> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKind>() {
  return ::TGameSpecialKind_descriptor();
}
template <> struct is_proto_enum< ::TGameRunFastSpecialKind> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameRunFastSpecialKind>() {
  return ::TGameRunFastSpecialKind_descriptor();
}
template <> struct is_proto_enum< ::TPaymentMechanism> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TPaymentMechanism>() {
  return ::TPaymentMechanism_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindShenYang> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindShenYang>() {
  return ::TGameSpecialKindShenYang_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindPingHu> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindPingHu>() {
  return ::TGameSpecialKindPingHu_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindJiaXing> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindJiaXing>() {
  return ::TGameSpecialKindJiaXing_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindJiaShan> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindJiaShan>() {
  return ::TGameSpecialKindJiaShan_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindBaZhou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindBaZhou>() {
  return ::TGameSpecialKindBaZhou_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindWenAn> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindWenAn>() {
  return ::TGameSpecialKindWenAn_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindLangFangTwo> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindLangFangTwo>() {
  return ::TGameSpecialKindLangFangTwo_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindShengFang> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindShengFang>() {
  return ::TGameSpecialKindShengFang_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindHanDan> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindHanDan>() {
  return ::TGameSpecialKindHanDan_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindRuShan> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindRuShan>() {
  return ::TGameSpecialKindRuShan_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindRongCheng> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindRongCheng>() {
  return ::TGameSpecialKindRongCheng_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindTaiAn> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindTaiAn>() {
  return ::TGameSpecialKindTaiAn_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindNanFeng> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindNanFeng>() {
  return ::TGameSpecialKindNanFeng_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindHangZhou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindHangZhou>() {
  return ::TGameSpecialKindHangZhou_descriptor();
}
template <> struct is_proto_enum< ::TCardsType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TCardsType>() {
  return ::TCardsType_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindQuZhou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindQuZhou>() {
  return ::TGameSpecialKindQuZhou_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindYunCheng> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindYunCheng>() {
  return ::TGameSpecialKindYunCheng_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindShanDong> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindShanDong>() {
  return ::TGameSpecialKindShanDong_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindYanTai> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindYanTai>() {
  return ::TGameSpecialKindYanTai_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindWuXi> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindWuXi>() {
  return ::TGameSpecialKindWuXi_descriptor();
}
template <> struct is_proto_enum< ::TMahJonGCmdRecord> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TMahJonGCmdRecord>() {
  return ::TMahJonGCmdRecord_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindQinHuangDao> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindQinHuangDao>() {
  return ::TGameSpecialKindQinHuangDao_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindGuangDongTuiDaoHu> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindGuangDongTuiDaoHu>() {
  return ::TGameSpecialKindGuangDongTuiDaoHu_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindBaoDing> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindBaoDing>() {
  return ::TGameSpecialKindBaoDing_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindDouDiZhu> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindDouDiZhu>() {
  return ::TGameSpecialKindDouDiZhu_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindPSZ> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindPSZ>() {
  return ::TGameSpecialKindPSZ_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindTangShan> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindTangShan>() {
  return ::TGameSpecialKindTangShan_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindDingXing> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindDingXing>() {
  return ::TGameSpecialKindDingXing_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindLangFang> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindLangFang>() {
  return ::TGameSpecialKindLangFang_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindAnXin> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindAnXin>() {
  return ::TGameSpecialKindAnXin_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindQiaoDong> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindQiaoDong>() {
  return ::TGameSpecialKindQiaoDong_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialTangShanAnXiao> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialTangShanAnXiao>() {
  return ::TGameSpecialTangShanAnXiao_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialManCheng> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialManCheng>() {
  return ::TGameSpecialManCheng_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialGaoYang> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialGaoYang>() {
  return ::TGameSpecialGaoYang_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialJingZhou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialJingZhou>() {
  return ::TGameSpecialJingZhou_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialDaCheng> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialDaCheng>() {
  return ::TGameSpecialDaCheng_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindDongTai> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindDongTai>() {
  return ::TGameSpecialKindDongTai_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKingPingXiang> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKingPingXiang>() {
  return ::TGameSpecialKingPingXiang_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialChess> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialChess>() {
  return ::TGameSpecialChess_descriptor();
}
template <> struct is_proto_enum< ::TGameGuanDanSpecial> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameGuanDanSpecial>() {
  return ::TGameGuanDanSpecial_descriptor();
}
template <> struct is_proto_enum< ::TPlayerState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TPlayerState>() {
  return ::TPlayerState_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindQingHe> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindQingHe>() {
  return ::TGameSpecialKindQingHe_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindWuQiang> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindWuQiang>() {
  return ::TGameSpecialKindWuQiang_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindSiChuanZiYou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindSiChuanZiYou>() {
  return ::TGameSpecialKindSiChuanZiYou_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindDouShiSi> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindDouShiSi>() {
  return ::TGameSpecialKindDouShiSi_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindPengHu> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindPengHu>() {
  return ::TGameSpecialKindPengHu_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindYiXian> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindYiXian>() {
  return ::TGameSpecialKindYiXian_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindDeZhou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindDeZhou>() {
  return ::TGameSpecialKindDeZhou_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindDongYing> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindDongYing>() {
  return ::TGameSpecialKindDongYing_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialTaocheng> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialTaocheng>() {
  return ::TGameSpecialTaocheng_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindNiuNiu> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindNiuNiu>() {
  return ::TGameSpecialKindNiuNiu_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialSiChuanXueLiu> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialSiChuanXueLiu>() {
  return ::TGameSpecialSiChuanXueLiu_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialBinZhou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialBinZhou>() {
  return ::TGameSpecialBinZhou_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialNanJing> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialNanJing>() {
  return ::TGameSpecialNanJing_descriptor();
}
template <> struct is_proto_enum< ::TGameRoomType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameRoomType>() {
  return ::TGameRoomType_descriptor();
}
template <> struct is_proto_enum< ::TItemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TItemType>() {
  return ::TItemType_descriptor();
}
template <> struct is_proto_enum< ::TCurrencyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TCurrencyType>() {
  return ::TCurrencyType_descriptor();
}
template <> struct is_proto_enum< ::TClientEffects> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TClientEffects>() {
  return ::TClientEffects_descriptor();
}
template <> struct is_proto_enum< ::MAIL_CURRENCY_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MAIL_CURRENCY_TYPE>() {
  return ::MAIL_CURRENCY_TYPE_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindGanDengYan> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindGanDengYan>() {
  return ::TGameSpecialKindGanDengYan_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialDeZhou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialDeZhou>() {
  return ::TGameSpecialDeZhou_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialRenQiu> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialRenQiu>() {
  return ::TGameSpecialRenQiu_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindQingEr> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindQingEr>() {
  return ::TGameSpecialKindQingEr_descriptor();
}
template <> struct is_proto_enum< ::TGameSpecialKindCangZhou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TGameSpecialKindCangZhou>() {
  return ::TGameSpecialKindCangZhou_descriptor();
}
template <> struct is_proto_enum< ::TQingErShowDownEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TQingErShowDownEvent>() {
  return ::TQingErShowDownEvent_descriptor();
}
template <> struct is_proto_enum< ::TQualifyingType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TQualifyingType>() {
  return ::TQualifyingType_descriptor();
}
template <> struct is_proto_enum< ::TMatchLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TMatchLevel>() {
  return ::TMatchLevel_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_define_5fpro_2eproto__INCLUDED
